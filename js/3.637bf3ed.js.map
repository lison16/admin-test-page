{"version":3,"sources":["webpack:///./node_modules/codemirror/addon/display/placeholder.js","webpack:///./node_modules/codemirror/mode/xml/xml.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/simplemde/src/js/simplemde.js","webpack:///./node_modules/codemirror-spell-checker/src/js/spell-checker.js","webpack:///./node_modules/codemirror/mode/meta.js","webpack:///./node_modules/marked/lib/marked.js","webpack:///./node_modules/base64-js/index.js","webpack:///./node_modules/codemirror/addon/edit/continuelist.js","webpack:///./node_modules/codemirror/mode/gfm/gfm.js","webpack:///./node_modules/typo-js/typo.js","webpack:///./node_modules/codemirror/addon/display/fullscreen.js","webpack:///./node_modules/ieee754/index.js","webpack:///./node_modules/codemirror/mode/markdown/markdown.js","webpack:///./node_modules/codemirror/addon/selection/mark-selection.js","webpack:///./node_modules/codemirror/addon/mode/overlay.js","webpack:///./node_modules/buffer/index.js","webpack:///./node_modules/simplemde/src/js/codemirror/tablist.js"],"names":["mod","__webpack_require__","CodeMirror","clearPlaceholder","cm","state","placeholder","parentNode","removeChild","setPlaceholder","elt","document","createElement","style","cssText","direction","getOption","className","placeHolder","createTextNode","appendChild","display","lineSpace","insertBefore","firstChild","onBlur","isEmpty","onChange","wrapper","getWrapperElement","empty","replace","lineCount","getLine","defineOption","val","old","prev","Init","on","off","hasFocus","htmlConfig","autoSelfClosers","area","base","br","col","command","embed","frame","hr","img","input","keygen","link","meta","param","source","track","wbr","menuitem","implicitlyClosed","dd","li","optgroup","option","p","rp","rt","tbody","td","tfoot","th","tr","contextGrabbers","dt","address","article","aside","blockquote","dir","div","dl","fieldset","footer","form","h1","h2","h3","h4","h5","h6","header","hgroup","menu","nav","ol","pre","section","table","ul","thead","doNotIndent","allowUnquoted","allowMissing","caseFold","xmlConfig","allowMissingTagName","defineMode","editorConf","config_","type","setStyle","indentUnit","config","defaults","htmlMode","prop","inText","stream","chain","parser","tokenize","ok","ch","next","eat","match","inBlock","eatWhile","doctype","inTag","baseState","tagName","tagStart","test","inAttribute","stringStartCol","column","quote","closure","eol","isInAttribute","terminator","depth","Context","startOfLine","this","context","indent","indented","hasOwnProperty","noIndent","popContext","maybePopContext","nextTagName","parentTagName","tagNameState","closeTagNameState","current","attrState","matchClosing","closeState","closeStateErr","_stream","attrEqState","attrValueState","attrContinuedState","isInText","startState","baseIndent","token","sol","indentation","eatSpace","textAfter","fullLine","Pass","length","multilineTagIndentPastTag","multilineTagIndentFactor","alignCDATA","tagAfter","exec","grabbers","electricInput","blockCommentStart","blockCommentEnd","configuration","helperType","skipAttribute","defineMIME","mimeModes","name","toString","module","exports","Array","isArray","arr","call","CodeMirrorSpellChecker","marked","isMac","navigator","platform","bindings","toggleBold","toggleItalic","drawLink","toggleHeadingSmaller","toggleHeadingBigger","drawImage","toggleBlockquote","toggleOrderedList","toggleUnorderedList","toggleCodeBlock","togglePreview","toggleStrikethrough","toggleHeading1","toggleHeading2","toggleHeading3","cleanBlock","drawTable","drawHorizontalRule","undo","redo","toggleSideBySide","toggleFullScreen","shortcuts","getBindingName","f","key","isMobile","check","a","substr","userAgent","vendor","window","opera","fixShortcut","createIcon","options","enableTooltips","el","undefined","title","createTootlip","action","tabIndex","createSep","innerHTML","actionName","tooltip","getState","pos","getCursor","stat","getTokenAt","data","text","types","split","ret","i","bold","line","italic","strikethrough","code","image","saved_overflow","editor","codemirror","setOption","body","overflow","wrap","previousSibling","toolbarButton","toolbarElements","fullscreen","sidebyside","nextSibling","_toggleBlock","blockStyles","fenceCharsToInsert","fencing_line","styles","indexOf","token_state","code_type","line_num","firstTok","lastTok","getLineHandle","indentedCode","fencedChars","insertFencingAtSelection","cur_start","cur_end","start_line_sel","end_line_sel","sel_multi","repl_start","repl_end","_replaceSelection","setSelection","block_start","block_end","tok","is_code","start","slice","end","replaceRange","focus","start_text","start_line","end_text","end_line","fencedTok","fence_chars","operation","search_from","next_line","next_line_last_tok","next_line_indented","indentLine","no_sel_and_starting_of_line","_toggleLine","_toggleHeading","_cleanBlock","url","promptURLs","prompt","promptTexts","insertTexts","horizontalRule","preview","useSideBySideListener","setTimeout","previewNormal","lastChild","toolbar","toolbar_div","sideBySideRenderingFunction","previewRender","value","refresh","active","startEnd","startPoint","endPoint","getSelection","replaceSelection","size","currHeadingLevel","search","repl","unordered-list","ordered-list","map","start_chars","end_chars","join","_mergeProperties","target","property","concat","constructor","Object","extend","arguments","wordCount","pattern","m","count","charCodeAt","toolbarBuiltInButtons","default","heading","heading-smaller","heading-bigger","heading-1","heading-2","heading-3","separator-1","clean-block","separator-2","horizontal-rule","separator-3","side-by-side","separator-4","guide","separator-5","SimpleMDE","parent","autoDownloadFA","autoDownloadFontAwesome","styleSheets","href","rel","getElementsByTagName","element","console","log","push","showIcons","status","plainText","markdown","parsingConfig","highlightFormatting","autosave","unique_id","uniqueId","render","initialValue","foundSavedValue","isLocalStorageAvailable","localStorage","setItem","removeItem","e","prototype","markedOptions","renderingConfig","singleLineBreaks","breaks","codeSyntaxHighlighting","hljs","highlight","highlightAuto","setOptions","_rendered","mode","backdrop","self","keyMaps","addEventListener","event","keyCode","spellChecker","gitHubSpice","codeMirrorInstance","fromTextArea","theme","tabSize","indentWithTabs","lineNumbers","autofocus","extraKeys","lineWrapping","allowDropFileTypes","getAttribute","styleSelectedText","forceSync","save","gui","createToolbar","statusbar","createStatusbar","enabled","sideBySide","createSideBySide","temp_cm","bind","simplemde","loaded","getItem","setValue","getElementById","d","Date","hh","getHours","getMinutes","h","autosaveTimeoutId","delay","clearAutosavedValue","cScroll","pScroll","v","height","getScrollInfo","clientHeight","ratio","parseFloat","top","move","scrollHeight","scrollTop","onscroll","scrollTo","items","bar","toolbarData","toolbarGuideIcon","hideIcons","nonSeparatorIconsFollow","x","item","toolbarTips","onclick","preventDefault","cmWrapper","onUpdate","defaultValue","getValue","setAttribute","getDoc","isPreviewActive","isSideBySideActive","isFullscreenActive","toTextArea","clearTimeout","Typo","String","includes","apply","aff_loading","xhr_aff","XMLHttpRequest","open","onload","readyState","aff_data","responseText","num_loaded","typo","dic_data","send","dic_loading","xhr_dic","rx_word","overlay","peek","word","getMode","overlayMode","modeInfo","mime","ext","mimes","file","alias","info","findModeByMIME","toLowerCase","j","findModeByExtension","findModeByFileName","filename","dot","lastIndexOf","substring","findModeByName","global","root","block","newline","fences","noop","nptable","list","html","def","lheading","paragraph","Lexer","tokens","links","rules","normal","pedantic","gfm","tables","_label","_title","edit","getRegex","bullet","_tag","_comment","merge","lex","src","lexer","loose","cap","bull","b","space","tag","l","isordered","istask","ischecked","lang","splitCells","align","cells","ordered","RegExp","smartLists","charAt","task","checked","sanitize","sanitizer","Error","inline","escape","autolink","reflink","nolink","strong","em","del","InlineLexer","renderer","Renderer","TextRenderer","Parser","encode","unescape","_","n","fromCharCode","parseInt","regex","opt","resolveUrl","baseUrls","_escapes","_scheme","_email","_attribute","_href","_backpedal","output","out","mangle","inLink","trim","outputLink","escapes","codespan","smartypants","Math","random","escaped","langPrefix","level","raw","headerIds","headerPrefix","xhtml","startatt","listitem","checkbox","tablerow","content","tablecell","flags","prot","decodeURIComponent","baseUrl","originIndependentUrl","encodeURI","parse","inlineText","reverse","pop","parseText","row","cell","obj","tableRow","splice","callback","pending","done","err","message","silent","getDefaults","inlineLexer","byteLength","toByteArray","fromByteArray","lookup","revLookup","Arr","Uint8Array","len","getLens","b64","validLen","placeHoldersLen","lens","_byteLength","tmp","curByte","tripletToBase64","num","encodeChunk","uint8","extraBytes","parts","maxChunkLength","len2","listRE","emptyListRE","unorderedListRE","incrementRemainingMarkdownListNumbers","startLine","lookAhead","skipCount","startItem","startIndent","nextLineNumber","nextLine","nextItem","nextIndent","newNumber","nextNumber","itemNumber","isNaN","commands","newlineAndIndentContinueMarkdownList","ranges","listSelections","replacements","head","eolState","getStateAfter","inList","inQuote","cursorBeforeBullet","execCommand","after","numbered","replaceSelections","urlRE","modeConfig","codeDepth","blankLine","gfmOverlay","codeBlock","ateSpace","copyState","s","combineTokens","skipToEnd","before","difference","string","markdownConfig","taskLists","emoji","attr","__dirname","Buffer","dictionary","affData","wordsData","settings","dictionaryTable","compoundRules","compoundRuleCodes","replacementTable","memoized","path","_len","_jlen","readDataFile","setFunc","response","_readFile","asyncLoad","then","setAffData","setup","setWordsData","_parseAFF","rule","ONLYINCOMPOUND","_parseDIC","ruleText","expressionText","character","loadedCallback","chrome","extension","dictionaryPath","getURL","load","charset","async","promise","req","Promise","resolve","reject","statusText","onerror","overrideMimeType","fs","existsSync","stats","statSync","fileDescriptor","openSync","buffer","readSync","subline","numEntries","lineParts","_removeAffixComments","lines","definitionParts","ruleType","ruleCode","combineable","entries","charactersToRemove","additionParts","charactersToAdd","continuationClasses","parseRuleCodes","regexToMatch","entry","add","remove","_removeDicComments","addWord","ruleCodesArray","NEEDAFFIX","newWords","_applyRule","ii","_iilen","newWord","k","combineCode","combineRule","otherNewWords","iii","_iiilen","otherNewWord","textCodes","FLAG","continuationRule","aWord","trimmedWord","checkExact","toUpperCase","capitalizedWord","hasFlag","lowercaseWord","ruleCodes","COMPOUNDMIN","flag","wordFlags","alphabet","suggest","limit","memoizedLimit","replacementEntry","correctedWord","edits1","words","rv","known","correct","ed1","ed2","corrections","weighted_corrections","sorted_corrections","sorter","sort","capitalization_scheme","min","suggestions","setFullscreen","fullScreenRestore","pageYOffset","scrollLeft","pageXOffset","width","documentElement","setNormal","read","offset","isLE","mLen","nBytes","eLen","eMax","eBias","nBits","NaN","Infinity","pow","write","c","abs","floor","LN2","cmCfg","modeCfg","htmlModeMissing","found","maxBlockquoteDepth","fencedCodeBlockHighlighting","xml","tokenTypeOverrides","tokenTypes","list1","list2","list3","imageAltText","imageMarker","formatting","linkInline","linkEmail","linkText","linkHref","tokenType","hrRE","taskListRE","atxHeaderRE","allowAtxHeaderWithoutSpace","setextHeaderRE","textRE","fencedCodeRE","linkDefRE","punctuation","expandedTab","switchInline","switchBlock","lineIsEmpty","linkTitle","htmlBlock","inlineNormal","blockNormal","trailingSpace","trailingSpaceNewLine","prevLine","thisLine","firstTokenOnLine","prevLineLineIsEmpty","prevLineIsIndentedCode","prevLineIsHr","prevLineIsList","maxNonCodeIndentation","listStack","lineIndentation","indentationDiff","allowsInlineContinuation","fencedCodeEnd","isHr","getType","setext","listType","taskList","fencedEndRE","localMode","localState","local","footnoteLink","htmlState","inner","innerMode","md_inside","returnType","currListInd","hasExitedList","maxFencedEndInd","taskOpen","taskClosed","listMod","handleText","matchCh","previousFormatting","t","formattingEscape","atts","backUp","leftFlanking","rightFlanking","setEm","setStrong","retType","getLinkHrefInside","linkRE",")","]","endChar","returnState","footnoteLinkInside","footnoteUrl","closeBrackets","fold","onCursorActivity","markedSelection","update","clear","markedSelectionStyle","reset","CHUNK_SIZE","Pos","cmp","cmpPos","coverRange","from","to","addAt","array","cls","endLine","atEnd","mark","markText","somethingSelected","coverStart","find","coverEnd","shift","combine","basePos","baseCur","overlayPos","overlayCur","streamSeen","electricChars","baseToken","overlayToken","base64","ieee754","typedArraySupport","__proto__","foo","subarray","kMaxLength","TYPED_ARRAY_SUPPORT","createBuffer","that","RangeError","arg","encodingOrOffset","allocUnsafe","TypeError","ArrayBuffer","fromArrayBuffer","fromString","fromObject","assertSize","alloc","fill","encoding","isEncoding","actual","fromArrayLike","byteOffset","isBuffer","copy","isnan","SlowBuffer","isView","loweredCase","utf8ToBytes","base64ToBytes","slowToString","hexSlice","utf8Slice","asciiSlice","latin1Slice","base64Slice","utf16leSlice","swap","bidirectionalIndexOf","arrayIndexOf","indexSize","arrLength","valLength","buf","readUInt16BE","foundIndex","hexWrite","Number","remaining","strLen","parsed","utf8Write","blitBuffer","asciiWrite","asciiToBytes","latin1Write","base64Write","ucs2Write","utf16leToBytes","res","secondByte","thirdByte","fourthByte","tempCodePoint","firstByte","codePoint","bytesPerSequence","decodeCodePointsArray","INSPECT_MAX_BYTES","poolSize","_augment","Symbol","species","defineProperty","configurable","allocUnsafeSlow","_isBuffer","compare","y","swap16","swap32","swap64","equals","inspect","str","max","thisStart","thisEnd","thisCopy","targetCopy","isFinite","toJSON","_arr","MAX_ARGUMENTS_LENGTH","codePoints","toHex","bytes","checkOffset","checkInt","objectWriteUInt16","littleEndian","objectWriteUInt32","checkIEEE754","writeFloat","noAssert","writeDouble","newBuf","sliceLen","readUIntLE","mul","readUIntBE","readUInt8","readUInt16LE","readUInt32LE","readUInt32BE","readIntLE","readIntBE","readInt8","readInt16LE","readInt16BE","readInt32LE","readInt32BE","readFloatLE","readFloatBE","readDoubleLE","readDoubleBE","writeUIntLE","maxBytes","writeUIntBE","writeUInt8","writeUInt16LE","writeUInt16BE","writeUInt32LE","writeUInt32BE","writeIntLE","sub","writeIntBE","writeInt8","writeInt16LE","writeInt16BE","writeInt32LE","writeInt32BE","writeFloatLE","writeFloatBE","writeDoubleLE","writeDoubleBE","targetStart","set","INVALID_BASE64_RE","base64clean","stringtrim","units","leadSurrogate","byteArray","hi","lo","dst","tabAndIndentMarkdownList","spaces","shiftTabAndUnindentMarkdownList"],"mappings":"uFAGA,SAAAA,GAEAA,EAAAC,EAAA,UAFA,CAOC,SAAAC,GAoBD,SAAAC,EAAAC,GACAA,EAAAC,MAAAC,cACAF,EAAAC,MAAAC,YAAAC,WAAAC,YAAAJ,EAAAC,MAAAC,aACAF,EAAAC,MAAAC,YAAA,MAGA,SAAAG,EAAAL,GACAD,EAAAC,GACA,IAAAM,EAAAN,EAAAC,MAAAC,YAAAK,SAAAC,cAAA,OACAF,EAAAG,MAAAC,QAAA,+BACAJ,EAAAG,MAAAE,UAAAX,EAAAY,UAAA,aACAN,EAAAO,UAAA,yBACA,IAAAC,EAAAd,EAAAY,UAAA,eACA,iBAAAE,MAAAP,SAAAQ,eAAAD,IACAR,EAAAU,YAAAF,GACAd,EAAAiB,QAAAC,UAAAC,aAAAb,EAAAN,EAAAiB,QAAAC,UAAAE,YAGA,SAAAC,EAAArB,GACAsB,EAAAtB,IAAAK,EAAAL,GAEA,SAAAuB,EAAAvB,GACA,IAAAwB,EAAAxB,EAAAyB,oBAAAC,EAAAJ,EAAAtB,GACAwB,EAAAX,UAAAW,EAAAX,UAAAc,QAAA,yBAAAD,EAAA,wBAEAA,EAAArB,EAAAL,GACAD,EAAAC,GAGA,SAAAsB,EAAAtB,GACA,WAAAA,EAAA4B,aAAA,KAAA5B,EAAA6B,QAAA,GAjDA/B,EAAAgC,aAAA,0BAAA9B,EAAA+B,EAAAC,GACA,IAAAC,EAAAD,MAAAlC,EAAAoC,KACA,GAAAH,IAAAE,EACAjC,EAAAmC,GAAA,OAAAd,GACArB,EAAAmC,GAAA,SAAAZ,GACAvB,EAAAmC,GAAA,UAAAZ,GACAA,EAAAvB,QACK,IAAA+B,GAAAE,EAAA,CACLjC,EAAAoC,IAAA,OAAAf,GACArB,EAAAoC,IAAA,SAAAb,GACAvB,EAAAoC,IAAA,UAAAb,GACAxB,EAAAC,GACA,IAAAwB,EAAAxB,EAAAyB,oBACAD,EAAAX,UAAAW,EAAAX,UAAAc,QAAA,wBAGAI,IAAA/B,EAAAqC,YAAAhB,EAAArB,gCCxBA,SAAAJ,GAEAA,EAAAC,EAAA,UAFA,CAOC,SAAAC,GACD,aAEA,IAAAwC,GACAC,iBAAoBC,MAAA,EAAAC,MAAA,EAAAC,IAAA,EAAAC,KAAA,EAAAC,SAAA,EACpBC,OAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,KAAA,EAAAC,OAAA,EACAC,QAAA,EAAAC,MAAA,EAAAC,MAAA,EAAAC,OAAA,EAAAC,QAAA,EACAC,OAAA,EAAAC,KAAA,EAAAC,UAAA,GACAC,kBAAqBC,IAAA,EAAAC,IAAA,EAAAC,UAAA,EAAAC,QAAA,EAAAC,GAAA,EACrBC,IAAA,EAAAC,IAAA,EAAAC,OAAA,EAAAC,IAAA,EAAAC,OAAA,EACAC,IAAA,EAAAC,IAAA,GACAC,iBACAZ,IAAWA,IAAA,EAAAa,IAAA,GACXA,IAAWb,IAAA,EAAAa,IAAA,GACXZ,IAAWA,IAAA,GACXE,QAAeA,QAAA,EAAAD,UAAA,GACfA,UAAiBA,UAAA,GACjBE,GAAUU,SAAA,EAAAC,SAAA,EAAAC,OAAA,EAAAC,YAAA,EAAAC,KAAA,EACVC,KAAA,EAAAC,IAAA,EAAAC,UAAA,EAAAC,QAAA,EAAAC,MAAA,EACAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EAAAC,IAAA,EACAC,QAAA,EAAAC,QAAA,EAAA3C,IAAA,EAAA4C,MAAA,EAAAC,KAAA,EAAAC,IAAA,EACA9B,GAAA,EAAA+B,KAAA,EAAAC,SAAA,EAAAC,OAAA,EAAAC,IAAA,GACAjC,IAAWA,IAAA,EAAAC,IAAA,GACXA,IAAWD,IAAA,EAAAC,IAAA,GACXC,OAAcA,OAAA,EAAAE,OAAA,GACdD,IAAWA,IAAA,EAAAE,IAAA,GACXD,OAAcF,OAAA,GACdG,IAAWF,IAAA,EAAAE,IAAA,GACX6B,OAAchC,OAAA,EAAAE,OAAA,GACdE,IAAWA,IAAA,IAEX6B,aAAgBL,KAAA,GAChBM,eAAA,EACAC,cAAA,EACAC,UAAA,GAGAC,GACAhE,mBACAmB,oBACAa,mBACA4B,eACAC,eAAA,EACAC,cAAA,EACAG,qBAAA,EACAF,UAAA,GAGAxG,EAAA2G,WAAA,eAAAC,EAAAC,GACA,IAOAC,EAAAC,EAPAC,EAAAJ,EAAAI,WACAC,KACAC,EAAAL,EAAAM,SAAA3E,EAAAiE,EACA,QAAAW,KAAAF,EAAAD,EAAAG,GAAAF,EAAAE,GACA,QAAAA,KAAAP,EAAAI,EAAAG,GAAAP,EAAAO,GAKA,SAAAC,EAAAC,EAAAnH,GACA,SAAAoH,EAAAC,GAEA,OADArH,EAAAsH,SAAAD,EACAA,EAAAF,EAAAnH,GAGA,IAwBAuH,EAxBAC,EAAAL,EAAAM,OACA,WAAAD,EACAL,EAAAO,IAAA,KACAP,EAAAO,IAAA,KACAP,EAAAQ,MAAA,UAAAP,EAAAQ,EAAA,eACA,KACST,EAAAQ,MAAA,MACTP,EAAAQ,EAAA,qBACST,EAAAQ,MAAA,kBACTR,EAAAU,SAAA,aACAT,EAAAU,EAAA,KAEA,KAEOX,EAAAO,IAAA,MACPP,EAAAU,SAAA,aACA7H,EAAAsH,SAAAM,EAAA,aACA,SAEAjB,EAAAQ,EAAAO,IAAA,0BACA1H,EAAAsH,SAAAS,EACA,eAEK,KAAAP,GAILD,EAFAJ,EAAAO,IAAA,KACAP,EAAAO,IAAA,KACAP,EAAAU,SAAA,eAAAV,EAAAO,IAAA,KAEAP,EAAAU,SAAA,SAAAV,EAAAO,IAAA,KAGAP,EAAAU,SAAA,cAAAV,EAAAO,IAAA,KAEAH,EAAA,iBAEAJ,EAAAU,SAAA,SACA,MAKA,SAAAE,EAAAZ,EAAAnH,GACA,IAAAwH,EAAAL,EAAAM,OACA,QAAAD,GAAA,KAAAA,GAAAL,EAAAO,IAAA,KAGA,OAFA1H,EAAAsH,SAAAJ,EACAP,EAAA,KAAAa,EAAA,wBACA,cACK,QAAAA,EAEL,OADAb,EAAA,SACA,KACK,QAAAa,EAAA,CACLxH,EAAAsH,SAAAJ,EACAlH,QAAAgI,EACAhI,EAAAiI,QAAAjI,EAAAkI,SAAA,KACA,IAAAT,EAAAzH,EAAAsH,SAAAH,EAAAnH,GACA,OAAAyH,IAAA,yBACK,eAAAU,KAAAX,IACLxH,EAAAsH,SAAAc,EAAAZ,GACAxH,EAAAqI,eAAAlB,EAAAmB,SACAtI,EAAAsH,SAAAH,EAAAnH,KAEAmH,EAAAQ,MAAA,4CACA,QAIA,SAAAS,EAAAG,GACA,IAAAC,EAAA,SAAArB,EAAAnH,GACA,OAAAmH,EAAAsB,MACA,GAAAtB,EAAAM,QAAAc,EAAA,CACAvI,EAAAsH,SAAAS,EACA,MAGA,gBAGA,OADAS,EAAAE,eAAA,EACAF,EAGA,SAAAZ,EAAApH,EAAAmI,GACA,gBAAAxB,EAAAnH,GACA,OAAAmH,EAAAsB,MAAA,CACA,GAAAtB,EAAAQ,MAAAgB,GAAA,CACA3I,EAAAsH,SAAAJ,EACA,MAEAC,EAAAM,OAEA,OAAAjH,GAGA,SAAAsH,EAAAc,GACA,gBAAAzB,EAAAnH,GACA,IAAAwH,EACA,aAAAA,EAAAL,EAAAM,QAAA,CACA,QAAAD,EAEA,OADAxH,EAAAsH,SAAAQ,EAAAc,EAAA,GACA5I,EAAAsH,SAAAH,EAAAnH,GACS,QAAAwH,EAAA,CACT,MAAAoB,EAAA,CACA5I,EAAAsH,SAAAJ,EACA,MAGA,OADAlH,EAAAsH,SAAAQ,EAAAc,EAAA,GACA5I,EAAAsH,SAAAH,EAAAnH,IAIA,cAIA,SAAA6I,EAAA7I,EAAAiI,EAAAa,GACAC,KAAA/G,KAAAhC,EAAAgJ,QACAD,KAAAd,UACAc,KAAAE,OAAAjJ,EAAAkJ,SACAH,KAAAD,eACAhC,EAAAZ,YAAAiD,eAAAlB,IAAAjI,EAAAgJ,SAAAhJ,EAAAgJ,QAAAI,YACAL,KAAAK,UAAA,GAEA,SAAAC,EAAArJ,GACAA,EAAAgJ,UAAAhJ,EAAAgJ,QAAAhJ,EAAAgJ,QAAAhH,MAEA,SAAAsH,EAAAtJ,EAAAuJ,GACA,IAAAC,EACA,SACA,IAAAxJ,EAAAgJ,QACA,OAGA,GADAQ,EAAAxJ,EAAAgJ,QAAAf,SACAnB,EAAAxC,gBAAA6E,eAAAK,KACA1C,EAAAxC,gBAAAkF,GAAAL,eAAAI,GACA,OAEAF,EAAArJ,IAIA,SAAAgI,EAAArB,EAAAQ,EAAAnH,GACA,iBAAA2G,GACA3G,EAAAkI,SAAAf,EAAAmB,SACAmB,GACK,YAAA9C,EACL+C,EAEA1B,EAGA,SAAAyB,EAAA9C,EAAAQ,EAAAnH,GACA,cAAA2G,GACA3G,EAAAiI,QAAAd,EAAAwC,UACA/C,EAAA,MACAgD,GACK9C,EAAAP,qBAAA,UAAAI,GACLC,EAAA,cACAgD,EAAAjD,EAAAQ,EAAAnH,KAEA4G,EAAA,QACA6C,GAGA,SAAAC,EAAA/C,EAAAQ,EAAAnH,GACA,WAAA2G,EAAA,CACA,IAAAsB,EAAAd,EAAAwC,UAIA,OAHA3J,EAAAgJ,SAAAhJ,EAAAgJ,QAAAf,YACAnB,EAAArD,iBAAA0F,eAAAnJ,EAAAgJ,QAAAf,UACAoB,EAAArJ,GACAA,EAAAgJ,SAAAhJ,EAAAgJ,QAAAf,aAAA,IAAAnB,EAAA+C,cACAjD,EAAA,MACAkD,IAEAlD,EAAA,YACAmD,GAEK,OAAAjD,EAAAP,qBAAA,UAAAI,GACLC,EAAA,cACAkD,EAAAnD,EAAAQ,EAAAnH,KAEA4G,EAAA,QACAmD,GAIA,SAAAD,EAAAnD,EAAAqD,EAAAhK,GACA,gBAAA2G,GACAC,EAAA,QACAkD,IAEAT,EAAArJ,GACAgI,GAEA,SAAA+B,EAAApD,EAAAQ,EAAAnH,GAEA,OADA4G,EAAA,QACAkD,EAAAnD,EAAAQ,EAAAnH,GAGA,SAAA4J,EAAAjD,EAAAqD,EAAAhK,GACA,WAAA2G,EAEA,OADAC,EAAA,YACAqD,EACK,aAAAtD,GAAA,gBAAAA,EAAA,CACL,IAAAsB,EAAAjI,EAAAiI,QAAAC,EAAAlI,EAAAkI,SASA,OARAlI,EAAAiI,QAAAjI,EAAAkI,SAAA,KACA,gBAAAvB,GACAG,EAAAxE,gBAAA6G,eAAAlB,GACAqB,EAAAtJ,EAAAiI,IAEAqB,EAAAtJ,EAAAiI,GACAjI,EAAAgJ,QAAA,IAAAH,EAAA7I,EAAAiI,EAAAC,GAAAlI,EAAAkJ,WAEAlB,EAGA,OADApB,EAAA,QACAgD,EAEA,SAAAK,EAAAtD,EAAAQ,EAAAnH,GACA,gBAAA2G,EAAAuD,GACApD,EAAAV,eAAAQ,EAAA,SACAgD,EAAAjD,EAAAQ,EAAAnH,IAEA,SAAAkK,EAAAvD,EAAAQ,EAAAnH,GACA,gBAAA2G,EAAAwD,EACA,QAAAxD,GAAAG,EAAAX,eAAiDS,EAAA,SAAoBgD,IACrEhD,EAAA,QACAgD,EAAAjD,EAAAQ,EAAAnH,IAEA,SAAAmK,EAAAxD,EAAAQ,EAAAnH,GACA,gBAAA2G,EAAAwD,EACAP,EAAAjD,EAAAQ,EAAAnH,GAGA,OAjMAkH,EAAAkD,UAAA,GAkMAC,WAAA,SAAAC,GACA,IAAAtK,GAAmBsH,SAAAJ,EACnBlH,MAAAgI,EACAkB,SAAAoB,GAAA,EACArC,QAAA,KAAAC,SAAA,KACAc,QAAA,MAEA,OADA,MAAAsB,IAAAtK,EAAAsK,cACAtK,GAGAuK,MAAA,SAAApD,EAAAnH,GAIA,IAHAA,EAAAiI,SAAAd,EAAAqD,QACAxK,EAAAkJ,SAAA/B,EAAAsD,eAEAtD,EAAAuD,WAAA,YACA/D,EAAA,KACA,IAAAnG,EAAAR,EAAAsH,SAAAH,EAAAnH,GAOA,OANAQ,GAAAmG,IAAA,WAAAnG,IACAoG,EAAA,KACA5G,gBAAA2G,GAAAnG,EAAA2G,EAAAnH,GACA4G,IACApG,EAAA,SAAAoG,EAAApG,EAAA,SAAAoG,IAEApG,GAGAyI,OAAA,SAAAjJ,EAAA2K,EAAAC,GACA,IAAA5B,EAAAhJ,EAAAgJ,QAEA,GAAAhJ,EAAAsH,SAAAoB,cACA,OAAA1I,EAAAkI,UAAAlI,EAAAkJ,SACAlJ,EAAAqI,eAAA,EAEArI,EAAAkJ,SAAArC,EAEA,GAAAmC,KAAAI,SAAA,OAAAvJ,EAAAgL,KACA,GAAA7K,EAAAsH,UAAAS,GAAA/H,EAAAsH,UAAAJ,EACA,OAAA0D,IAAAjD,MAAA,aAAAmD,OAAA,EAEA,GAAA9K,EAAAiI,QACA,WAAAnB,EAAAiE,0BACA/K,EAAAkI,SAAAlI,EAAAiI,QAAA6C,OAAA,EAEA9K,EAAAkI,SAAArB,GAAAC,EAAAkE,0BAAA,GAEA,GAAAlE,EAAAmE,YAAA,cAAA9C,KAAAwC,GAAA,SACA,IAAAO,EAAAP,GAAA,sBAAAQ,KAAAR,GACA,GAAAO,KAAA,GACA,MAAAlC,EAAA,CACA,GAAAA,EAAAf,SAAAiD,EAAA,IACAlC,IAAAhH,KACA,MACW,IAAA8E,EAAArD,iBAAA0F,eAAAH,EAAAf,SAGX,MAFAe,IAAAhH,UAKO,GAAAkJ,EACP,MAAAlC,EAAA,CACA,IAAAoC,EAAAtE,EAAAxC,gBAAA0E,EAAAf,SACA,IAAAmD,MAAAjC,eAAA+B,EAAA,IAGA,MAFAlC,IAAAhH,KAKA,MAAAgH,KAAAhH,OAAAgH,EAAAF,YACAE,IAAAhH,KACA,OAAAgH,IAAAC,OAAApC,EACA7G,EAAAsK,YAAA,GAGAe,cAAA,gBACAC,kBAAA,UACAC,gBAAA,SAEAC,cAAA1E,EAAAE,SAAA,aACAyE,WAAA3E,EAAAE,SAAA,aAEA0E,cAAA,SAAA1L,GACAA,SAAAkK,IACAlK,QAAA4J,OAKA/J,EAAA8L,WAAA,kBACA9L,EAAA8L,WAAA,yBACA9L,EAAA+L,UAAAzC,eAAA,cACAtJ,EAAA8L,WAAA,aAAsCE,KAAA,MAAA7E,UAAA,4BC9YtC,IAAA8E,KAAiBA,SAEjBC,EAAAC,QAAAC,MAAAC,SAAA,SAAAC,GACA,wBAAAL,EAAAM,KAAAD,yCCDA,IAAAtM,EAAAD,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACAA,EAAA,QACA,IAAAyM,EAAAzM,EAAA,QACA0M,EAAA1M,EAAA,QAIA2M,EAAA,MAAApE,KAAAqE,UAAAC,UAGAC,GACAC,aACAC,eACAC,WACAC,uBACAC,sBACAC,YACAC,mBACAC,oBACAC,sBACAC,kBACAC,gBACAC,sBACAC,iBACAC,iBACAC,iBACAC,aACAC,YACAC,qBACAC,OACAC,OACAC,mBACAC,oBAGAC,GACAtB,WAAA,QACAC,aAAA,QACAC,SAAA,QACAC,qBAAA,QACAC,oBAAA,cACAW,WAAA,QACAV,UAAA,YACAC,iBAAA,QACAC,kBAAA,YACAC,oBAAA,QACAC,gBAAA,YACAC,cAAA,QACAU,iBAAA,KACAC,iBAAA,OAGAE,EAAA,SAAAC,GACA,QAAAC,KAAA1B,EACA,GAAAA,EAAA0B,KAAAD,EACA,OAAAC,EAGA,aAGAC,EAAA,WACA,IAAAC,GAAA,EAIA,OAHA,SAAAC,IACA,sVAAApG,KAAAoG,IAAA,0kDAAApG,KAAAoG,EAAAC,OAAA,SAAAF,GAAA,GADA,CAEE9B,UAAAiC,WAAAjC,UAAAkC,QAAAC,OAAAC,OACFN,GAOA,SAAAO,EAAAhD,GAMA,OAJAA,EADAU,EACAV,EAAAnK,QAAA,cAEAmK,EAAAnK,QAAA,cAEAmK,EAOA,SAAAiD,EAAAC,EAAAC,EAAAf,GACAc,QACA,IAAAE,EAAA3O,SAAAC,cAAA,KAcA,OAbAyO,OAAAE,GAAAF,KAEAD,EAAAI,OAAAH,IACAC,EAAAE,MAAAC,EAAAL,EAAAI,MAAAJ,EAAAM,OAAApB,GAEA1B,IACA0C,EAAAE,MAAAF,EAAAE,MAAAzN,QAAA,YACAuN,EAAAE,MAAAF,EAAAE,MAAAzN,QAAA,aAIAuN,EAAAK,UAAA,EACAL,EAAArO,UAAAmO,EAAAnO,UACAqO,EAGA,SAAAM,IACA,IAAAN,EAAA3O,SAAAC,cAAA,KAGA,OAFA0O,EAAArO,UAAA,YACAqO,EAAAO,UAAA,IACAP,EAGA,SAAAG,EAAAD,EAAAE,EAAApB,GACA,IAAAwB,EACAC,EAAAP,EASA,OAPAE,IACAI,EAAAvB,EAAAmB,GACApB,EAAAwB,KACAC,GAAA,KAAAb,EAAAZ,EAAAwB,IAAA,MAIAC,EAMA,SAAAC,EAAA5P,EAAA6P,GACAA,KAAA7P,EAAA8P,UAAA,SACA,IAAAC,EAAA/P,EAAAgQ,WAAAH,GACA,IAAAE,EAAAnJ,KAAA,SAMA,IAJA,IAGAqJ,EAAAC,EAHAC,EAAAJ,EAAAnJ,KAAAwJ,MAAA,KAEAC,KAEAC,EAAA,EAAeA,EAAAH,EAAApF,OAAkBuF,IACjCL,EAAAE,EAAAG,GACA,WAAAL,EACAI,EAAAE,MAAA,EACG,eAAAN,GACHC,EAAAlQ,EAAA6B,QAAAgO,EAAAW,MACA,cAAApI,KAAA8H,GACAG,EAAA,mBAEAA,EAAA,sBAEG,SAAAJ,EACHI,EAAA7H,OAAA,EACG,OAAAyH,EACHI,EAAAI,QAAA,EACG,UAAAR,EACHI,EAAA7H,OAAA,EACG,kBAAAyH,EACHI,EAAAK,eAAA,EACG,YAAAT,EACHI,EAAAM,MAAA,EACG,SAAAV,EACHI,EAAAlN,MAAA,EACG,QAAA8M,EACHI,EAAAO,OAAA,EACGX,EAAArI,MAAA,wBACHyI,EAAAJ,EAAAtO,QAAA,yBAGA,OAAA0O,EAKA,IAAAQ,EAAA,GAKA,SAAA5C,EAAA6C,GAEA,IAAA9Q,EAAA8Q,EAAAC,WACA/Q,EAAAgR,UAAA,cAAAhR,EAAAY,UAAA,eAIAZ,EAAAY,UAAA,eACAiQ,EAAAtQ,SAAA0Q,KAAAxQ,MAAAyQ,SACA3Q,SAAA0Q,KAAAxQ,MAAAyQ,SAAA,UAEA3Q,SAAA0Q,KAAAxQ,MAAAyQ,SAAAL,EAKA,IAAAM,EAAAnR,EAAAyB,oBAEA,aAAA2G,KAAA+I,EAAAC,gBAAAvQ,WAGAsQ,EAAAC,gBAAAvQ,UAAAsQ,EAAAC,gBAAAvQ,UAAAc,QAAA,sBAFAwP,EAAAC,gBAAAvQ,WAAA,cAOA,IAAAwQ,EAAAP,EAAAQ,gBAAAC,WAEA,SAAAnJ,KAAAiJ,EAAAxQ,WAGAwQ,EAAAxQ,UAAAwQ,EAAAxQ,UAAAc,QAAA,oBAFA0P,EAAAxQ,WAAA,UAOA,IAAA2Q,EAAAxR,EAAAyB,oBAAAgQ,YACA,6BAAArJ,KAAAoJ,EAAA3Q,YACAmN,EAAA8C,GAOA,SAAAlE,EAAAkE,GACAY,EAAAZ,EAAA,OAAAA,EAAA9B,QAAA2C,YAAApB,MAOA,SAAA1D,EAAAiE,GACAY,EAAAZ,EAAA,SAAAA,EAAA9B,QAAA2C,YAAAlB,QAOA,SAAAlD,EAAAuD,GACAY,EAAAZ,EAAA,sBAMA,SAAAzD,EAAAyD,GACA,IAAAc,EAAAd,EAAA9B,QAAA2C,YAAAhB,KAEA,SAAAkB,EAAArB,GAEA,qBAAAA,EACA,6FAAAA,EAAA,KAAAA,EAEA,OAAAA,EAAAsB,QAAAtB,EAAAsB,OAAA,SAAAtB,EAAAsB,OAAA,GAAAC,QAAA,yBAGA,SAAAC,EAAAxH,GAEA,OAAAA,EAAAvK,MAAAwC,WAAA+H,EAAAvK,MAAAwC,KAGA,SAAAwP,EAAAjS,EAAAkS,EAAA1B,EAAA2B,EAAAC,GAOA5B,KAAAxQ,EAAAqS,cAAAH,GACAC,KAAAnS,EAAAgQ,YACAQ,KAAA0B,EACAzK,GAAA,IAEA2K,OAAA5B,EAAAN,MAAAlQ,EAAAgQ,YACAQ,KAAA0B,EACAzK,GAAA+I,EAAAN,KAAAnF,OAAA,IAEA,IAAAoF,EAAAgC,EAAAvL,KAAAuL,EAAAvL,KAAAwJ,MAAA,QACA,OAAAgC,GAAAJ,EAAAI,GAAAE,aAEA,YACG,IAAAnC,EAAA4B,QAAA,aAGAC,EAAAG,GAAAI,aAAAP,EAAAI,GAAAG,aAAAV,EAAArB,GACH,SAEA,UAIA,SAAAgC,EAAAxS,EAAAyS,EAAAC,EAAAd,GACA,IAAAe,EAAAF,EAAAjC,KAAA,EACAoC,EAAAF,EAAAlC,KAAA,EACAqC,EAAAJ,EAAAjC,OAAAkC,EAAAlC,KACAsC,EAAAlB,EAAA,KACAmB,EAAA,KAAAnB,EACAiB,GACAD,IAGAC,GAAA,IAAAH,EAAAjL,KACAsL,EAAAnB,EAAA,KACAgB,KAEAI,EAAAhT,GAAA,GAAA8S,EAAAC,IACA/S,EAAAiT,cACAzC,KAAAmC,EACAlL,GAAA,IAEA+I,KAAAoC,EACAnL,GAAA,IAIA,IASAyL,EAAAC,EAAAvR,EATA5B,EAAA8Q,EAAAC,WACA0B,EAAAzS,EAAA8P,UAAA,SACA4C,EAAA1S,EAAA8P,UAAA,OACAsD,EAAApT,EAAAgQ,YACAQ,KAAAiC,EAAAjC,KACA/I,GAAAgL,EAAAhL,IAAA,IAEA+I,EAAAxQ,EAAAqS,cAAAI,EAAAjC,MACA6C,EAAApB,EAAAjS,EAAAyS,EAAAjC,OAAA4C,GAGA,cAAAC,EAAA,CAEA,IAAAC,EAAA9C,EAAAN,KAAAqD,MAAA,EAAAd,EAAAhL,IAAA9F,QAAA,QACA6R,EAAAhD,EAAAN,KAAAqD,MAAAd,EAAAhL,IAAA9F,QAAA,QACA3B,EAAAyT,aAAAH,EAAAE,GACAhD,KAAAiC,EAAAjC,KACA/I,GAAA,IAEA+I,KAAAiC,EAAAjC,KACA/I,GAAA,iBAEAgL,EAAAhL,KACAgL,IAAAC,GACAA,EAAAjL,KAEAzH,EAAAiT,aAAAR,EAAAC,GACA1S,EAAA0T,aACE,cAAAL,EACF,GAAAZ,EAAAjC,OAAAkC,EAAAlC,MAAAiC,EAAAhL,KAAAiL,EAAAjL,GAAA,CAIA,IAAAyL,EAAAT,EAAAjC,KAAoC0C,GAAA,EAAkBA,IAEtD,GADA1C,EAAAxQ,EAAAqS,cAAAa,GACArB,EAAArB,GACA,MAGA,IAKAmD,EAAAC,EACAC,EAAAC,EANAC,EAAA/T,EAAAgQ,YACAQ,KAAA0C,EACAzL,GAAA,IAEAuM,EAAAhC,EAAA+B,GAAAxB,YAIAV,EAAA7R,EAAAqS,cAAAI,EAAAjC,QACAmD,EAAA,GACAC,EAAAnB,EAAAjC,MACIqB,EAAA7R,EAAAqS,cAAAI,EAAAjC,KAAA,KACJmD,EAAA,GACAC,EAAAnB,EAAAjC,KAAA,IAEAmD,EAAAK,EAAA,KACAJ,EAAAnB,EAAAjC,MAEAqB,EAAA7R,EAAAqS,cAAAK,EAAAlC,QACAqD,EAAA,GACAC,EAAApB,EAAAlC,KACA,IAAAkC,EAAAjL,KACAqM,GAAA,IAEI,IAAApB,EAAAjL,IAAAoK,EAAA7R,EAAAqS,cAAAK,EAAAlC,KAAA,KACJqD,EAAA,GACAC,EAAApB,EAAAlC,KAAA,IAEAqD,EAAAG,EAAA,KACAF,EAAApB,EAAAlC,KAAA,GAEA,IAAAkC,EAAAjL,KAEAqM,GAAA,GAEA9T,EAAAiU,UAAA,WAEAjU,EAAAyT,aAAAI,GACArD,KAAAsD,EACArM,GAAA,IAEA+I,KAAAsD,GAAAD,EAAA,KACApM,GAAA,IAEAzH,EAAAyT,aAAAE,GACAnD,KAAAoD,EACAnM,GAAA,IAEA+I,KAAAoD,GAAAD,EAAA,KACAlM,GAAA,MAGAzH,EAAAiT,cACAzC,KAAAoD,GAAAD,EAAA,KACAlM,GAAA,IAEA+I,KAAAsD,GAAAH,EAAA,MACAlM,GAAA,IAEAzH,EAAA0T,YACG,CAEH,IAAAQ,EAAAzB,EAAAjC,KAUA,GATAqB,EAAA7R,EAAAqS,cAAAI,EAAAjC,SACA,WAAAyB,EAAAjS,EAAAyS,EAAAjC,KAAA,IACA0C,EAAAT,EAAAjC,KACA0D,EAAAzB,EAAAjC,KAAA,IAEA2C,EAAAV,EAAAjC,KACA0D,EAAAzB,EAAAjC,KAAA,SAGArB,IAAA+D,EACA,IAAAA,EAAAgB,EAAkChB,GAAA,EAAkBA,IAEpD,GADA1C,EAAAxQ,EAAAqS,cAAAa,GACArB,EAAArB,GACA,MAIA,QAAArB,IAAAgE,EAEA,IADAvR,EAAA5B,EAAA4B,YACAuR,EAAAe,EAAgCf,EAAAvR,EAAuBuR,IAEvD,GADA3C,EAAAxQ,EAAAqS,cAAAc,GACAtB,EAAArB,GACA,MAIAxQ,EAAAiU,UAAA,WACAjU,EAAAyT,aAAA,IACAjD,KAAA0C,EACAzL,GAAA,IAEA+I,KAAA0C,EAAA,EACAzL,GAAA,IAEAzH,EAAAyT,aAAA,IACAjD,KAAA2C,EAAA,EACA1L,GAAA,IAEA+I,KAAA2C,EACA1L,GAAA,MAGAzH,EAAA0T,aAEE,gBAAAL,EAAA,CACF,GAAAZ,EAAAjC,OAAAkC,EAAAlC,MAAAiC,EAAAhL,KAAAiL,EAAAjL,GAEAyL,EAAAT,EAAAjC,KACA2C,EAAAT,EAAAlC,KACA,IAAAkC,EAAAjL,IACA0L,QAEG,CAEH,IAAAD,EAAAT,EAAAjC,KAAoC0C,GAAA,EAAkBA,IAEtD,GADA1C,EAAAxQ,EAAAqS,cAAAa,IACA1C,EAAAN,KAAAtI,MAAA,UAIA,aAAAqK,EAAAjS,EAAAkT,EAAA1C,GAAA,CACA0C,GAAA,EACA,MAKA,IADAtR,EAAA5B,EAAA4B,YACAuR,EAAAV,EAAAjC,KAAkC2C,EAAAvR,EAAuBuR,IAEzD,GADA3C,EAAAxQ,EAAAqS,cAAAc,IACA3C,EAAAN,KAAAtI,MAAA,UAIA,aAAAqK,EAAAjS,EAAAmT,EAAA3C,GAAA,CACA2C,GAAA,EACA,OAOA,IAAAgB,EAAAnU,EAAAqS,cAAAc,EAAA,GACAiB,EAAAD,GAAAnU,EAAAgQ,YACAQ,KAAA2C,EAAA,EACA1L,GAAA0M,EAAAjE,KAAAnF,OAAA,IAEAsJ,EAAAD,GAAApC,EAAAoC,GAAA9B,aACA+B,GACArU,EAAAyT,aAAA,MACAjD,KAAA2C,EAAA,EACA1L,GAAA,IAIA,QAAA6I,EAAA4C,EAA0B5C,GAAA6C,EAAgB7C,IAC1CtQ,EAAAsU,WAAAhE,EAAA,YAEAtQ,EAAA0T,YACE,CAEF,IAAAa,EAAA9B,EAAAjC,OAAAkC,EAAAlC,MAAAiC,EAAAhL,KAAAiL,EAAAjL,IAAA,IAAAgL,EAAAhL,GACAoL,EAAAJ,EAAAjC,OAAAkC,EAAAlC,KACA+D,GAAA1B,EACAL,EAAAxS,EAAAyS,EAAAC,EAAAd,GAEAoB,EAAAhT,GAAA,cAQA,SAAAkN,EAAA4D,GACA,IAAA9Q,EAAA8Q,EAAAC,WACAyD,EAAAxU,EAAA,SAMA,SAAA+M,EAAA+D,GACA,IAAA9Q,EAAA8Q,EAAAC,WACA0D,EAAAzU,EAAA,WAMA,SAAAgN,EAAA8D,GACA,IAAA9Q,EAAA8Q,EAAAC,WACA0D,EAAAzU,EAAA,UAMA,SAAAwN,EAAAsD,GACA,IAAA9Q,EAAA8Q,EAAAC,WACA0D,EAAAzU,OAAAmP,EAAA,GAMA,SAAA1B,EAAAqD,GACA,IAAA9Q,EAAA8Q,EAAAC,WACA0D,EAAAzU,OAAAmP,EAAA,GAMA,SAAAzB,EAAAoD,GACA,IAAA9Q,EAAA8Q,EAAAC,WACA0D,EAAAzU,OAAAmP,EAAA,GAOA,SAAA/B,EAAA0D,GACA,IAAA9Q,EAAA8Q,EAAAC,WACAyD,EAAAxU,EAAA,kBAOA,SAAAmN,EAAA2D,GACA,IAAA9Q,EAAA8Q,EAAAC,WACAyD,EAAAxU,EAAA,gBAMA,SAAA2N,EAAAmD,GACA,IAAA9Q,EAAA8Q,EAAAC,WACA2D,EAAA1U,GAMA,SAAA8M,EAAAgE,GACA,IAAA9Q,EAAA8Q,EAAAC,WACAhB,EAAAH,EAAA5P,GACAgP,EAAA8B,EAAA9B,QACA2F,EAAA,UACA,GAAA3F,EAAA4F,aACAD,EAAAE,OAAA7F,EAAA8F,YAAA3R,OACAwR,GACA,SAGA3B,EAAAhT,EAAA+P,EAAA5M,KAAA6L,EAAA+F,YAAA5R,KAAAwR,GAMA,SAAA1H,EAAA6D,GACA,IAAA9Q,EAAA8Q,EAAAC,WACAhB,EAAAH,EAAA5P,GACAgP,EAAA8B,EAAA9B,QACA2F,EAAA,UACA,GAAA3F,EAAA4F,aACAD,EAAAE,OAAA7F,EAAA8F,YAAAlE,QACA+D,GACA,SAGA3B,EAAAhT,EAAA+P,EAAAa,MAAA5B,EAAA+F,YAAAnE,MAAA+D,GAMA,SAAA/G,EAAAkD,GACA,IAAA9Q,EAAA8Q,EAAAC,WACAhB,EAAAH,EAAA5P,GACAgP,EAAA8B,EAAA9B,QACAgE,EAAAhT,EAAA+P,EAAA/J,MAAAgJ,EAAA+F,YAAA/O,OAMA,SAAA6H,EAAAiD,GACA,IAAA9Q,EAAA8Q,EAAAC,WACAhB,EAAAH,EAAA5P,GACAgP,EAAA8B,EAAA9B,QACAgE,EAAAhT,EAAA+P,EAAAa,MAAA5B,EAAA+F,YAAAC,gBAOA,SAAAlH,EAAAgD,GACA,IAAA9Q,EAAA8Q,EAAAC,WACA/Q,EAAA8N,OACA9N,EAAA0T,QAOA,SAAA3F,EAAA+C,GACA,IAAA9Q,EAAA8Q,EAAAC,WACA/Q,EAAA+N,OACA/N,EAAA0T,QAOA,SAAA1F,EAAA8C,GACA,IAAA9Q,EAAA8Q,EAAAC,WACAvP,EAAAxB,EAAAyB,oBACAwT,EAAAzT,EAAAiQ,YACAJ,EAAAP,EAAAQ,gBAAA,gBACA4D,GAAA,EACA,6BAAA9M,KAAA6M,EAAApU,YACAoU,EAAApU,UAAAoU,EAAApU,UAAAc,QACA,wCAEA0P,EAAAxQ,UAAAwQ,EAAAxQ,UAAAc,QAAA,oBACAH,EAAAX,UAAAW,EAAAX,UAAAc,QAAA,iCAKAwT,WAAA,WACAnV,EAAAY,UAAA,eACAqN,EAAA6C,GACAmE,EAAApU,WAAA,+BACG,GACHwQ,EAAAxQ,WAAA,UACAW,EAAAX,WAAA,oBACAqU,GAAA,GAIA,IAAAE,EAAA5T,EAAA6T,UACA,2BAAAjN,KAAAgN,EAAAvU,WAAA,CACAuU,EAAAvU,UAAAuU,EAAAvU,UAAAc,QACA,mCAEA,IAAA2T,EAAAxE,EAAAQ,gBAAA2D,QACAM,EAAA/T,EAAA4P,gBACAkE,EAAAzU,UAAAyU,EAAAzU,UAAAc,QAAA,oBACA4T,EAAA1U,UAAA0U,EAAA1U,UAAAc,QAAA,gCAGA,IAAA6T,EAAA,WACAP,EAAAxF,UAAAqB,EAAA9B,QAAAyG,cAAA3E,EAAA4E,QAAAT,IAGAjV,EAAAwV,8BACAxV,EAAAwV,+BAGAN,GACAD,EAAAxF,UAAAqB,EAAA9B,QAAAyG,cAAA3E,EAAA4E,QAAAT,GACAjV,EAAAmC,GAAA,SAAAnC,EAAAwV,8BAEAxV,EAAAoC,IAAA,SAAApC,EAAAwV,6BAIAxV,EAAA2V,UAOA,SAAArI,EAAAwD,GACA,IAAA9Q,EAAA8Q,EAAAC,WACAvP,EAAAxB,EAAAyB,oBACA8T,EAAA/T,EAAA4P,gBACAkE,IAAAxE,EAAA9B,QAAAsG,SAAAxE,EAAAQ,gBAAA2D,QACAA,EAAAzT,EAAA6T,UACAJ,GAAA,iBAAA7M,KAAA6M,EAAApU,aACAoU,EAAA1U,SAAAC,cAAA,OACAyU,EAAApU,UAAA,iBACAW,EAAAR,YAAAiU,IAEA,wBAAA7M,KAAA6M,EAAApU,YACAoU,EAAApU,UAAAoU,EAAApU,UAAAc,QACA,mCAEA2T,IACAA,EAAAzU,UAAAyU,EAAAzU,UAAAc,QAAA,oBACA4T,EAAA1U,UAAA0U,EAAA1U,UAAAc,QAAA,mCAMAwT,WAAA,WACAF,EAAApU,WAAA,0BACG,GACHyU,IACAA,EAAAzU,WAAA,UACA0U,EAAA1U,WAAA,0BAGAoU,EAAAxF,UAAAqB,EAAA9B,QAAAyG,cAAA3E,EAAA4E,QAAAT,GAGA,IAAAzD,EAAAxR,EAAAyB,oBAAAgQ,YACA,6BAAArJ,KAAAoJ,EAAA3Q,YACAmN,EAAA8C,GAGA,SAAAkC,EAAAhT,EAAA4V,EAAAC,EAAAlB,GACA,4BAAAvM,KAAApI,EAAAyB,oBAAA4T,UAAAxU,WAAA,CAGA,IAAAqP,EACAoD,EAAAuC,EAAA,GACArC,EAAAqC,EAAA,GACAC,EAAA9V,EAAA8P,UAAA,SACAiG,EAAA/V,EAAA8P,UAAA,OACA6E,IACAnB,IAAA7R,QAAA,QAAAgT,IAEAiB,GACA1F,EAAAlQ,EAAA6B,QAAAiU,EAAAtF,MACA8C,EAAApD,EAAAqD,MAAA,EAAAuC,EAAArO,IACA+L,EAAAtD,EAAAqD,MAAAuC,EAAArO,IACAzH,EAAAyT,aAAAH,EAAAE,GACAhD,KAAAsF,EAAAtF,KACA/I,GAAA,MAGAyI,EAAAlQ,EAAAgW,eACAhW,EAAAiW,iBAAA3C,EAAApD,EAAAsD,GAEAsC,EAAArO,IAAA6L,EAAAvI,OACA+K,IAAAC,IACAA,EAAAtO,IAAA6L,EAAAvI,SAGA/K,EAAAiT,aAAA6C,EAAAC,GACA/V,EAAA0T,SAIA,SAAAe,EAAAzU,EAAAW,EAAAuV,GACA,4BAAA9N,KAAApI,EAAAyB,oBAAA4T,UAAAxU,WAAA,CAKA,IAFA,IAAAiV,EAAA9V,EAAA8P,UAAA,SACAiG,EAAA/V,EAAA8P,UAAA,OACAQ,EAAAwF,EAAAtF,KAA6BF,GAAAyF,EAAAvF,KAAoBF,KACjD,SAAAA,GACA,IAAAJ,EAAAlQ,EAAA6B,QAAAyO,GACA6F,EAAAjG,EAAAkG,OAAA,QAKAlG,OAHAf,IAAAxO,EACAwV,GAAA,EACA,UAAAxV,EACA,UAAAuP,EAEA,KAAAA,EAEK,GAAAiG,GAAA,WAAAxV,EACLuP,EAAAzB,OAAA,GACK,GAAA0H,GAAA,UAAAxV,EACLuP,EAAAzB,OAAA,GAEA,UAAA9N,EACAuP,EAAAzB,OAAA,GAEA,IAAAyB,EAIA,GAAAgG,EACAC,GAAA,EACA,KAAAjG,EACMiG,GAAAD,EACNhG,EAAAzB,OAAA0H,EAAA,GAEA,KAAAjG,EAAAzB,OAAA0H,EAAA,GAEK,GAAAD,EACLC,GAAA,EACA,MAAAjG,EACMiG,GAAAD,EACNhG,EAAAzB,OAAA0H,EAAA,GAEA,MAAAjG,EAAAzB,OAAA0H,EAAA,GAGAA,GAAA,EACA,OAAAjG,EACMiG,GAAAD,EACNhG,EAAAzB,OAAA0H,EAAA,GAEA,OAAAjG,EAAAzB,OAAA0H,EAAA,GAKAnW,EAAAyT,aAAAvD,GACAM,KAAAF,EACA7I,GAAA,IAEA+I,KAAAF,EACA7I,GAAA,kBAvDA,CAyDG6I,GAEHtQ,EAAA0T,SAIA,SAAAc,EAAAxU,EAAA8L,GACA,4BAAA1D,KAAApI,EAAAyB,oBAAA4T,UAAAxU,WAAA,CAgBA,IAbA,IAAAkP,EAAAH,EAAA5P,GACA8V,EAAA9V,EAAA8P,UAAA,SACAiG,EAAA/V,EAAA8P,UAAA,OACAuG,GACA7N,MAAA,cACA8N,iBAAA,sBACAC,eAAA,kBAEAC,GACAhO,MAAA,KACA8N,iBAAA,KACAC,eAAA,OAEAjG,EAAAwF,EAAAtF,KAA6BF,GAAAyF,EAAAvF,KAAoBF,KACjD,SAAAA,GACA,IAAAJ,EAAAlQ,EAAA6B,QAAAyO,GAEAJ,EADAH,EAAAjE,GACAoE,EAAAvO,QAAA0U,EAAAvK,GAAA,MAEA0K,EAAA1K,GAAAoE,EAEAlQ,EAAAyT,aAAAvD,GACAM,KAAAF,EACA7I,GAAA,IAEA+I,KAAAF,EACA7I,GAAA,kBAZA,CAcG6I,GAEHtQ,EAAA0T,SAGA,SAAAhC,EAAAZ,EAAAlK,EAAA6P,EAAAC,GACA,4BAAAtO,KAAA0I,EAAAC,WAAAtP,oBAAA4T,UAAAxU,WAAA,CAGA6V,EAAA,qBAAAA,EAAAD,EAAAC,EACA,IAGAxG,EAHAlQ,EAAA8Q,EAAAC,WACAhB,EAAAH,EAAA5P,GAGAsT,EAAAmD,EACAjD,EAAAkD,EAEAZ,EAAA9V,EAAA8P,UAAA,SACAiG,EAAA/V,EAAA8P,UAAA,OAEAC,EAAAnJ,IACAsJ,EAAAlQ,EAAA6B,QAAAiU,EAAAtF,MACA8C,EAAApD,EAAAqD,MAAA,EAAAuC,EAAArO,IACA+L,EAAAtD,EAAAqD,MAAAuC,EAAArO,IACA,QAAAb,GACA0M,IAAA3R,QAAA,oCACA6R,IAAA7R,QAAA,iBACG,UAAAiF,GACH0M,IAAA3R,QAAA,8BACA6R,IAAA7R,QAAA,cACG,iBAAAiF,IACH0M,IAAA3R,QAAA,oCACA6R,IAAA7R,QAAA,iBAEA3B,EAAAyT,aAAAH,EAAAE,GACAhD,KAAAsF,EAAAtF,KACA/I,GAAA,IAEA+I,KAAAsF,EAAAtF,KACA/I,GAAA,iBAGA,QAAAb,GAAA,iBAAAA,GACAkP,EAAArO,IAAA,EACAqO,IAAAC,IACAA,EAAAtO,IAAA,IAEG,UAAAb,IACHkP,EAAArO,IAAA,EACAqO,IAAAC,IACAA,EAAAtO,IAAA,MAIAyI,EAAAlQ,EAAAgW,eACA,QAAApP,GACAsJ,IAAAE,MAAA,MAAAuG,KAAA,IACAzG,IAAAE,MAAA,MAAAuG,KAAA,KACG,UAAA/P,GACHsJ,IAAAE,MAAA,KAAAuG,KAAA,IACAzG,IAAAE,MAAA,KAAAuG,KAAA,KACG,iBAAA/P,IACHsJ,IAAAE,MAAA,MAAAuG,KAAA,KAEA3W,EAAAiW,iBAAA3C,EAAApD,EAAAsD,GAEAsC,EAAArO,IAAAgP,EAAA1L,OACAgL,EAAAtO,GAAAqO,EAAArO,GAAAyI,EAAAnF,QAGA/K,EAAAiT,aAAA6C,EAAAC,GACA/V,EAAA0T,SAGA,SAAAgB,EAAA1U,GACA,4BAAAoI,KAAApI,EAAAyB,oBAAA4T,UAAAxU,WAOA,IAJA,IAEAqP,EAFA4F,EAAA9V,EAAA8P,UAAA,SACAiG,EAAA/V,EAAA8P,UAAA,OAGAU,EAAAsF,EAAAtF,KAAgCA,GAAAuF,EAAAvF,KAAuBA,IACvDN,EAAAlQ,EAAA6B,QAAA2O,GACAN,IAAAvO,QAAA,gDAEA3B,EAAAyT,aAAAvD,GACAM,OACA/I,GAAA,IAEA+I,OACA/I,GAAA,iBAMA,SAAAmP,EAAAC,EAAAvT,GACA,QAAAwT,KAAAxT,EACAA,EAAA8F,eAAA0N,KACAxT,EAAAwT,aAAA5K,MACA2K,EAAAC,GAAAxT,EAAAwT,GAAAC,OAAAF,EAAAC,aAAA5K,MAAA2K,EAAAC,OAEA,OAAAxT,EAAAwT,IACA,kBAAAxT,EAAAwT,IACAxT,EAAAwT,GAAAE,cAAAC,OAEAJ,EAAAC,GAAAF,EAAAC,EAAAC,OAA8DxT,EAAAwT,IAE9DD,EAAAC,GAAAxT,EAAAwT,IAKA,OAAAD,EAIA,SAAAK,EAAAL,GACA,QAAAvG,EAAA,EAAeA,EAAA6G,UAAApM,OAAsBuF,IACrCuG,EAAAD,EAAAC,EAAAM,UAAA7G,IAGA,OAAAuG,EAIA,SAAAO,EAAAnH,GACA,IAAAoH,EAAA,gHACAC,EAAArH,EAAArI,MAAAyP,GACAE,EAAA,EACA,UAAAD,EAAA,OAAAC,EACA,QAAAjH,EAAA,EAAeA,EAAAgH,EAAAvM,OAAcuF,IAC7BgH,EAAAhH,GAAAkH,WAAA,UACAD,GAAAD,EAAAhH,GAAAvF,OAEAwM,GAAA,EAGA,OAAAA,EAGA,IAAAE,GACAlH,MACAzE,KAAA,OACAwD,OAAA1C,EACA/L,UAAA,aACAuO,MAAA,OACAsI,SAAA,GAEAjH,QACA3E,KAAA,SACAwD,OAAAzC,EACAhM,UAAA,eACAuO,MAAA,SACAsI,SAAA,GAEAhH,eACA5E,KAAA,gBACAwD,OAAA/B,EACA1M,UAAA,sBACAuO,MAAA,iBAEAuI,SACA7L,KAAA,UACAwD,OAAAvC,EACAlM,UAAA,eACAuO,MAAA,UACAsI,SAAA,GAEAE,mBACA9L,KAAA,kBACAwD,OAAAvC,EACAlM,UAAA,6CACAuO,MAAA,mBAEAyI,kBACA/L,KAAA,iBACAwD,OAAAtC,EACAnM,UAAA,4CACAuO,MAAA,kBAEA0I,aACAhM,KAAA,YACAwD,OAAA9B,EACA3M,UAAA,uCACAuO,MAAA,eAEA2I,aACAjM,KAAA,YACAwD,OAAA7B,EACA5M,UAAA,uCACAuO,MAAA,kBAEA4I,aACAlM,KAAA,YACAwD,OAAA5B,EACA7M,UAAA,uCACAuO,MAAA,iBAEA6I,eACAnM,KAAA,eAEA6E,MACA7E,KAAA,OACAwD,OAAAjC,EACAxM,UAAA,aACAuO,MAAA,QAEA5G,OACAsD,KAAA,QACAwD,OAAApC,EACArM,UAAA,mBACAuO,MAAA,QACAsI,SAAA,GAEApB,kBACAxK,KAAA,iBACAwD,OAAAlC,EACAvM,UAAA,gBACAuO,MAAA,eACAsI,SAAA,GAEAnB,gBACAzK,KAAA,eACAwD,OAAAnC,EACAtM,UAAA,gBACAuO,MAAA,gBACAsI,SAAA,GAEAQ,eACApM,KAAA,cACAwD,OAAA3B,EACA9M,UAAA,8BACAuO,MAAA,eAEA+I,eACArM,KAAA,eAEA3I,MACA2I,KAAA,OACAwD,OAAAxC,EACAjM,UAAA,aACAuO,MAAA,cACAsI,SAAA,GAEA9G,OACA9E,KAAA,QACAwD,OAAArC,EACApM,UAAA,kBACAuO,MAAA,eACAsI,SAAA,GAEA1R,OACA8F,KAAA,QACAwD,OAAA1B,EACA/M,UAAA,cACAuO,MAAA,gBAEAgJ,mBACAtM,KAAA,kBACAwD,OAAAzB,EACAhN,UAAA,cACAuO,MAAA,0BAEAiJ,eACAvM,KAAA,eAEAmJ,SACAnJ,KAAA,UACAwD,OAAAhC,EACAzM,UAAA,uBACAuO,MAAA,iBACAsI,SAAA,GAEAY,gBACAxM,KAAA,eACAwD,OAAAtB,EACAnN,UAAA,qCACAuO,MAAA,sBACAsI,SAAA,GAEAnG,YACAzF,KAAA,aACAwD,OAAArB,EACApN,UAAA,wCACAuO,MAAA,oBACAsI,SAAA,GAEAa,eACAzM,KAAA,eAEA0M,OACA1M,KAAA,QACAwD,OAAA,uCACAzO,UAAA,wBACAuO,MAAA,iBACAsI,SAAA,GAEAe,eACA3M,KAAA,eAEAgC,MACAhC,KAAA,OACAwD,OAAAxB,EACAjN,UAAA,wBACAuO,MAAA,QAEArB,MACAjC,KAAA,OACAwD,OAAAvB,EACAlN,UAAA,0BACAuO,MAAA,SAIA2F,GACA5R,MAAA,gBACAyN,OAAA,iBACA5K,OAAA,yHACAgP,gBAAA,qBAGAF,GACA3R,KAAA,oBACAyN,MAAA,qBAGAe,GACApB,KAAA,KACAI,KAAA,MACAF,OAAA,KAMA,SAAAiI,EAAA1J,GAEAA,QAIAA,EAAA2J,OAAA3P,KAIA,IAAA4P,GAAA,EAMA,IAJA,IAAA5J,EAAA6J,0BACAD,GAAA,IAGA,IAAA5J,EAAA6J,wBAEA,IADA,IAAAC,EAAAvY,SAAAuY,YACAxI,EAAA,EAAgBA,EAAAwI,EAAA/N,OAAwBuF,IACxCwI,EAAAxI,GAAAyI,MAGAD,EAAAxI,GAAAyI,KAAAhH,QAAA,gDACA6G,GAAA,GAKA,GAAAA,EAAA,CACA,IAAAzV,EAAA5C,SAAAC,cAAA,QACA2C,EAAA6V,IAAA,aACA7V,EAAA4V,KAAA,+EACAxY,SAAA0Y,qBAAA,WAAAjY,YAAAmC,GAKA,GAAA6L,EAAAkK,QACAlQ,KAAAkQ,QAAAlK,EAAAkK,aACE,UAAAlK,EAAAkK,QAGF,YADAC,QAAAC,IAAA,2CAMA,QAAAjK,IAAAH,EAAAsG,QAMA,QAAAjH,KAJAW,EAAAsG,WAIAmC,EACAA,EAAArO,eAAAiF,MACA,GAAAA,EAAA0D,QAAA,eACA/C,EAAAsG,QAAA+D,KAAA,OAGA,IAAA5B,EAAApJ,GAAAqJ,SAAA1I,EAAAsK,WAAAtK,EAAAsK,UAAAtC,cAAA9K,QAAA,GAAA8C,EAAAsK,UAAAvH,QAAA1D,KACAW,EAAAsG,QAAA+D,KAAAhL,IAQAW,EAAA5F,eAAA,YACA4F,EAAAuK,QAAA,sCAKAvK,EAAAyG,gBACAzG,EAAAyG,cAAA,SAAA+D,GAEA,OAAAxQ,KAAA2P,OAAAc,SAAAD,KAMAxK,EAAA0K,cAAAxC,GACAyC,qBAAA,GACE3K,EAAA0K,mBAIF1K,EAAA+F,YAAAmC,KAAgCnC,EAAA/F,EAAA+F,iBAIhC/F,EAAA8F,cAIA9F,EAAA2C,YAAAuF,KAAgCvF,EAAA3C,EAAA2C,iBAIhC3C,EAAAd,UAAAgJ,KAA8BhJ,EAAAc,EAAAd,oBAI9BiB,GAAAH,EAAA4K,eAAAzK,GAAAH,EAAA4K,SAAAC,WAAA,IAAA7K,EAAA4K,SAAAC,YACA7K,EAAA4K,SAAAE,SAAA9K,EAAA4K,SAAAC,WAIA7Q,KAAAgG,UAIAhG,KAAA+Q,UAMA/K,EAAAgL,cAAAhR,KAAAgG,QAAA4K,WAAA,IAAA5Q,KAAAgG,QAAA4K,SAAAK,iBACAjR,KAAA0M,MAAA1G,EAAAgL,cAiJA,SAAAE,IACA,qBAAAC,aAQA,SAPA,IACAA,aAAAC,QAAA,uBACAD,aAAAE,WAAA,qBACG,MAAAC,GACH,SAMA,SAtJA5B,EAAA6B,UAAAd,SAAA,SAAAvJ,GACA,GAAA3D,EAAA,CAEA,IAAAiO,KAsBA,OAlBAxR,KAAAgG,SAAAhG,KAAAgG,QAAAyL,kBAAA,IAAAzR,KAAAgG,QAAAyL,gBAAAC,iBACAF,EAAAG,QAAA,EAEAH,EAAAG,QAAA,EAGA3R,KAAAgG,SAAAhG,KAAAgG,QAAAyL,kBAAA,IAAAzR,KAAAgG,QAAAyL,gBAAAG,wBAAAhM,OAAAiM,OACAL,EAAAM,UAAA,SAAAnK,GACA,OAAA/B,OAAAiM,KAAAE,cAAApK,GAAA+E,QAMAnJ,EAAAyO,WAAAR,GAIAjO,EAAA2D,KAOAwI,EAAA6B,UAAAR,OAAA,SAAA7K,GAKA,GAJAA,IACAA,EAAAlG,KAAAkQ,SAAA3Y,SAAA0Y,qBAAA,iBAGAjQ,KAAAiS,WAAAjS,KAAAiS,YAAA/L,EAAA,CAKAlG,KAAAkQ,QAAAhK,EACA,IA+BAgM,EAAAC,EA/BAnM,EAAAhG,KAAAgG,QAEAoM,EAAApS,KACAqS,KAEA,QAAAhN,KAAAW,EAAAd,UAEA,OAAAc,EAAAd,UAAAG,IAAA,OAAA1B,EAAA0B,IACA,SAAAA,GACAgN,EAAAvM,EAAAE,EAAAd,UAAAG,KAAA,WACA1B,EAAA0B,GAAA+M,IAFA,CAII/M,GAmDJ,GA/CAgN,EAAA,gDACAA,EAAA,kCACAA,EAAA,+CACAA,EAAA,gBAAArb,GACAA,EAAAY,UAAA,eAAAqN,EAAAmN,IAGA7a,SAAA+a,iBAAA,mBAAAhB,GACAA,KAAA1L,OAAA2M,MAEA,IAAAjB,EAAAkB,SACAJ,EAAArK,WAAAnQ,UAAA,eAAAqN,EAAAmN,KAEE,IAGF,IAAApM,EAAAyM,cACAP,EAAA,gBACAC,EAAAnM,EAAA0K,cACAyB,EAAArP,KAAA,MACAqP,EAAAO,aAAA,EAEApP,GACAqP,mBAAA7b,MAGAob,EAAAlM,EAAA0K,cACAwB,EAAApP,KAAA,MACAoP,EAAAQ,aAAA,GAGA1S,KAAA+H,WAAAjR,EAAA8b,aAAA1M,GACAgM,OACAC,WACAU,MAAA,QACAC,aAAA3M,GAAAH,EAAA8M,QAAA9M,EAAA8M,QAAA,EACAhV,gBAAAqI,GAAAH,EAAA8M,QAAA9M,EAAA8M,QAAA,EACAC,gBAAA,IAAA/M,EAAA+M,eACAC,aAAA,EACAC,WAAA,IAAAjN,EAAAiN,UACAC,UAAAb,EACAc,cAAA,IAAAnN,EAAAmN,aACAC,oBAAA,cACAlc,YAAA8O,EAAA9O,aAAAgP,EAAAmN,aAAA,mBACAC,uBAAAnN,GAAAH,EAAAsN,mBAAAtN,EAAAsN,qBAGA,IAAAtN,EAAAuN,UAAA,CACA,IAAAvc,EAAAgJ,KAAA+H,WACA/Q,EAAAmC,GAAA,oBACAnC,EAAAwc,SAIAxT,KAAAyT,QAEA,IAAAzN,EAAAsG,UACAtM,KAAAyT,IAAAnH,QAAAtM,KAAA0T,kBAEA,IAAA1N,EAAAuK,SACAvQ,KAAAyT,IAAAE,UAAA3T,KAAA4T,wBAEAzN,GAAAH,EAAA4K,WAAA,IAAA5K,EAAA4K,SAAAiD,SACA7T,KAAA4Q,WAGA5Q,KAAAyT,IAAAK,WAAA9T,KAAA+T,mBAEA/T,KAAAiS,UAAAjS,KAAAkQ,QAIA,IAAA8D,EAAAhU,KAAA+H,WACAoE,WAAA,WACA6H,EAAArH,WACEsH,KAAAD,GAAA,KAmBFtE,EAAA6B,UAAAX,SAAA,WACA,GAAAM,IAAA,CACA,IAAAgD,EAAAlU,KAEA,QAAAmG,GAAAnG,KAAAgG,QAAA4K,SAAAE,UAAA,IAAA9Q,KAAAgG,QAAA4K,SAAAE,SAEA,YADAX,QAAAC,IAAA,kEAIA,MAAA8D,EAAAhE,QAAAhU,WAAAiK,GAAA+N,EAAAhE,QAAAhU,MACAgY,EAAAhE,QAAAhU,KAAAoW,iBAAA,oBACAnB,aAAAE,WAAA,QAAA6C,EAAAlO,QAAA4K,SAAAE,aAIA,IAAA9Q,KAAAgG,QAAA4K,SAAAuD,SACA,iBAAAhD,aAAAiD,QAAA,QAAApU,KAAAgG,QAAA4K,SAAAE,WAAA,IAAAK,aAAAiD,QAAA,QAAApU,KAAAgG,QAAA4K,SAAAE,YACA9Q,KAAA+H,WAAAsM,SAAAlD,aAAAiD,QAAA,QAAApU,KAAAgG,QAAA4K,SAAAE,WACA9Q,KAAAgG,QAAA4K,SAAAK,iBAAA,GAGAjR,KAAAgG,QAAA4K,SAAAuD,QAAA,GAGAhD,aAAAC,QAAA,QAAApR,KAAAgG,QAAA4K,SAAAE,SAAAoD,EAAAxH,SAEA,IAAAxG,EAAA3O,SAAA+c,eAAA,aACA,SAAApO,QAAAC,GAAAD,GAAA,IAAAA,EAAA,CACA,IAAAqO,EAAA,IAAAC,KACAC,EAAAF,EAAAG,WACApG,EAAAiG,EAAAI,aACAha,EAAA,KACAia,EAAAH,EACAG,GAAA,KACAA,EAAAH,EAAA,GACA9Z,EAAA,MAEA,GAAAia,IACAA,EAAA,IAEAtG,IAAA,OAAAA,IAEApI,EAAAO,UAAA,cAAAmO,EAAA,IAAAtG,EAAA,IAAA3T,EAGAqF,KAAA6U,kBAAA1I,WAAA,WACA+H,EAAAtD,YACG5Q,KAAAgG,QAAA4K,SAAAkE,OAAA,UAEH3E,QAAAC,IAAA,2DAIAV,EAAA6B,UAAAwD,oBAAA,WACA,GAAA7D,IAAA,CACA,QAAA/K,GAAAnG,KAAAgG,QAAA4K,eAAAzK,GAAAnG,KAAAgG,QAAA4K,SAAAE,UAAA,IAAA9Q,KAAAgG,QAAA4K,SAAAE,SAEA,YADAX,QAAAC,IAAA,kEAIAe,aAAAE,WAAA,QAAArR,KAAAgG,QAAA4K,SAAAE,eAEAX,QAAAC,IAAA,2DAIAV,EAAA6B,UAAAwC,iBAAA,WACA,IAAA/c,EAAAgJ,KAAA+H,WACAvP,EAAAxB,EAAAyB,oBACAwT,EAAAzT,EAAAiQ,YAEAwD,GAAA,sBAAA7M,KAAA6M,EAAApU,aACAoU,EAAA1U,SAAAC,cAAA,OACAyU,EAAApU,UAAA,sBACAW,EAAArB,WAAAgB,aAAA8T,EAAAzT,EAAAiQ,cAIA,IAAAuM,GAAA,EACAC,GAAA,EAyBA,OAxBAje,EAAAmC,GAAA,kBAAA+b,GACA,GAAAF,EACAA,GAAA,MADA,CAIAC,GAAA,EACA,IAAAE,EAAAD,EAAAE,gBAAAD,OAAAD,EAAAE,gBAAAC,aACAC,EAAAC,WAAAL,EAAAE,gBAAAI,KAAAL,EACAM,GAAAxJ,EAAAyJ,aAAAzJ,EAAAoJ,cAAAC,EACArJ,EAAA0J,UAAAF,KAIAxJ,EAAA2J,SAAA,WACA,GAAAX,EACAA,GAAA,MADA,CAIAD,GAAA,EACA,IAAAG,EAAAlJ,EAAAyJ,aAAAzJ,EAAAoJ,aACAC,EAAAC,WAAAtJ,EAAA0J,WAAAR,EACAM,GAAAze,EAAAoe,gBAAAD,OAAAne,EAAAoe,gBAAAC,cAAAC,EACAte,EAAA6e,SAAA,EAAAJ,KAEAxJ,GAGAyD,EAAA6B,UAAAmC,cAAA,SAAAoC,GAGA,GAFAA,KAAA9V,KAAAgG,QAAAsG,QAEAwJ,GAAA,IAAAA,EAAA/T,OAAA,CAGA,IAAAuF,EACA,IAAAA,EAAA,EAAWA,EAAAwO,EAAA/T,OAAkBuF,SAC7BnB,GAAAsI,EAAAqH,EAAAxO,MACAwO,EAAAxO,GAAAmH,EAAAqH,EAAAxO,KAIA,IAAAyO,EAAAxe,SAAAC,cAAA,OACAue,EAAAle,UAAA,iBAEA,IAAAua,EAAApS,KAEAgW,KAGA,IAFA5D,EAAA9F,QAAAwJ,EAEAxO,EAAA,EAAWA,EAAAwO,EAAA/T,OAAkBuF,IAC7B,aAAAwO,EAAAxO,GAAAxE,OAAA,IAAAsP,EAAApM,QAAAiQ,qBAGA7D,EAAApM,QAAAkQ,YAAA,GAAA9D,EAAApM,QAAAkQ,UAAAnN,QAAA+M,EAAAxO,GAAAxE,SAKA,cAAAgT,EAAAxO,GAAAxE,MAAA,gBAAAgT,EAAAxO,GAAAxE,OAAAwC,KAAA,CAKA,SAAAwQ,EAAAxO,GAAA,CAGA,IAFA,IAAA6O,GAAA,EAEAC,EAAA9O,EAAA,EAAuB8O,EAAAN,EAAA/T,OAAkBqU,IACzC,MAAAN,EAAAM,IAAAhE,EAAApM,QAAAkQ,YAAA,GAAA9D,EAAApM,QAAAkQ,UAAAnN,QAAA+M,EAAAM,GAAAtT,QACAqT,GAAA,GAIA,IAAAA,EACA,UAKA,SAAAE,GACA,IAAAnQ,EAEAA,EADA,MAAAmQ,EACA7P,IAEAT,EAAAsQ,EAAAjE,EAAApM,QAAAsQ,YAAAlE,EAAApM,QAAAd,WAIAmR,EAAA/P,SACA,oBAAA+P,EAAA/P,OACAJ,EAAAqQ,QAAA,SAAAjF,GACAA,EAAAkF,iBACAH,EAAA/P,OAAA8L,IAEK,kBAAAiE,EAAA/P,SACLJ,EAAA6J,KAAAsG,EAAA/P,OACAJ,EAAA2H,OAAA,WAIAmI,EAAAK,EAAAvT,MAAAuT,GAAAnQ,EACA6P,EAAA/d,YAAAkO,IAtBA,CAuBG4P,EAAAxO,IAGH8K,EAAA9J,gBAAA0N,EAEA,IAAAhf,EAAAgJ,KAAA+H,WACA/Q,EAAAmC,GAAA,4BACA,IAAA4N,EAAAH,EAAA5P,GAEA,QAAAqO,KAAA2Q,GACA,SAAA3Q,GACA,IAAAa,EAAA8P,EAAA3Q,GACA0B,EAAA1B,GACAa,EAAArO,WAAA,UACK,cAAAwN,GAAA,gBAAAA,IACLa,EAAArO,UAAAqO,EAAArO,UAAAc,QAAA,sBALA,CAOI0M,KAIJ,IAAAoR,EAAAzf,EAAAyB,oBAEA,OADAge,EAAAtf,WAAAgB,aAAA4d,EAAAU,GACAV,IAGArG,EAAA6B,UAAAqC,gBAAA,SAAArD,GAEAA,KAAAvQ,KAAAgG,QAAAuK,OACA,IAAAvK,EAAAhG,KAAAgG,QACAhP,EAAAgJ,KAAA+H,WAIA,GAAAwI,GAAA,IAAAA,EAAAxO,OAAA,CAKA,IACAuF,EAAAoP,EAAAC,EADAb,KAGA,IAAAxO,EAAA,EAAWA,EAAAiJ,EAAAxO,OAAmBuF,IAO9B,GALAoP,OAAAvQ,EACAwQ,OAAAxQ,EAIA,kBAAAoK,EAAAjJ,GACAwO,EAAAzF,MACAxY,UAAA0Y,EAAAjJ,GAAAzP,UACA8e,aAAApG,EAAAjJ,GAAAqP,aACAD,SAAAnG,EAAAjJ,GAAAoP,eAEG,CACH,IAAA5T,EAAAyN,EAAAjJ,GAEA,UAAAxE,GACA6T,EAAA,SAAAzQ,GACAA,EAAAO,UAAA2H,EAAApX,EAAA4f,aAEAF,EAAA,SAAAxQ,GACAA,EAAAO,UAAA2H,EAAApX,EAAA4f,cAEI,UAAA9T,GACJ6T,EAAA,SAAAzQ,GACAA,EAAAO,UAAAzP,EAAA4B,aAEA8d,EAAA,SAAAxQ,GACAA,EAAAO,UAAAzP,EAAA4B,cAEI,WAAAkK,GACJ6T,EAAA,SAAAzQ,GACAA,EAAAO,UAAA,OAEAiQ,EAAA,SAAAxQ,GACA,IAAAW,EAAA7P,EAAA8P,YACAZ,EAAAO,UAAAI,EAAAW,KAAA,IAAAX,EAAApI,KAEI,aAAAqE,IACJ6T,EAAA,SAAAzQ,QACAC,GAAAH,EAAA4K,WAAA,IAAA5K,EAAA4K,SAAAiD,SACA3N,EAAA2Q,aAAA,oBAKAf,EAAAzF,MACAxY,UAAAiL,EACA6T,eACAD,aAOA,IAAAX,EAAAxe,SAAAC,cAAA,OAKA,IAJAue,EAAAle,UAAA,mBAIAyP,EAAA,EAAWA,EAAAwO,EAAA/T,OAAkBuF,IAAA,CAE7B,IAAA+O,EAAAP,EAAAxO,GAIApB,EAAA3O,SAAAC,cAAA,QACA0O,EAAArO,UAAAwe,EAAAxe,UAIA,oBAAAwe,EAAAM,cACAN,EAAAM,aAAAzQ,GAKA,oBAAAmQ,EAAAK,UAEA1W,KAAA+H,WAAA5O,GAAA,kBAAA+M,EAAAmQ,GACA,kBACAA,EAAAK,SAAAxQ,IAFA,CAIIA,EAAAmQ,IAKJN,EAAA/d,YAAAkO,GAKA,IAAAuQ,EAAAzW,KAAA+H,WAAAtP,oBAEA,OADAge,EAAAtf,WAAAgB,aAAA4d,EAAAU,EAAAhO,aACAsN,IAMArG,EAAA6B,UAAA7E,MAAA,SAAA3T,GACA,YAAAoN,IAAApN,EACAiH,KAAA+H,WAAA6O,YAEA5W,KAAA+H,WAAA+O,SAAAzC,SAAAtb,GACAiH,OAQA0P,EAAA9L,aACA8L,EAAA7L,eACA6L,EAAAnL,sBACAmL,EAAAxL,mBACAwL,EAAA3L,uBACA2L,EAAA1L,sBACA0L,EAAAlL,iBACAkL,EAAAjL,iBACAiL,EAAAhL,iBACAgL,EAAArL,kBACAqL,EAAAtL,sBACAsL,EAAAvL,oBACAuL,EAAA/K,aACA+K,EAAA5L,WACA4L,EAAAzL,YACAyL,EAAA9K,YACA8K,EAAA7K,qBACA6K,EAAA5K,OACA4K,EAAA3K,OACA2K,EAAApL,gBACAoL,EAAA1K,mBACA0K,EAAAzK,mBAKAyK,EAAA6B,UAAA3N,WAAA,WACAA,EAAA5D,OAEA0P,EAAA6B,UAAA1N,aAAA,WACAA,EAAA7D,OAEA0P,EAAA6B,UAAAhN,oBAAA,WACAA,EAAAvE,OAEA0P,EAAA6B,UAAArN,iBAAA,WACAA,EAAAlE,OAEA0P,EAAA6B,UAAAxN,qBAAA,WACAA,EAAA/D,OAEA0P,EAAA6B,UAAAvN,oBAAA,WACAA,EAAAhE,OAEA0P,EAAA6B,UAAA/M,eAAA,WACAA,EAAAxE,OAEA0P,EAAA6B,UAAA9M,eAAA,WACAA,EAAAzE,OAEA0P,EAAA6B,UAAA7M,eAAA,WACAA,EAAA1E,OAEA0P,EAAA6B,UAAAlN,gBAAA,WACAA,EAAArE,OAEA0P,EAAA6B,UAAAnN,oBAAA,WACAA,EAAApE,OAEA0P,EAAA6B,UAAApN,kBAAA,WACAA,EAAAnE,OAEA0P,EAAA6B,UAAA5M,WAAA,WACAA,EAAA3E,OAEA0P,EAAA6B,UAAAzN,SAAA,WACAA,EAAA9D,OAEA0P,EAAA6B,UAAAtN,UAAA,WACAA,EAAAjE,OAEA0P,EAAA6B,UAAA3M,UAAA,WACAA,EAAA5E,OAEA0P,EAAA6B,UAAA1M,mBAAA,WACAA,EAAA7E,OAEA0P,EAAA6B,UAAAzM,KAAA,WACAA,EAAA9E,OAEA0P,EAAA6B,UAAAxM,KAAA,WACAA,EAAA/E,OAEA0P,EAAA6B,UAAAjN,cAAA,WACAA,EAAAtE,OAEA0P,EAAA6B,UAAAvM,iBAAA,WACAA,EAAAhF,OAEA0P,EAAA6B,UAAAtM,iBAAA,WACAA,EAAAjF,OAGA0P,EAAA6B,UAAAwF,gBAAA,WACA,IAAA/f,EAAAgJ,KAAA+H,WACAvP,EAAAxB,EAAAyB,oBACAwT,EAAAzT,EAAA6T,UAEA,8BAAAjN,KAAA6M,EAAApU,YAGA6X,EAAA6B,UAAAyF,mBAAA,WACA,IAAAhgB,EAAAgJ,KAAA+H,WACAvP,EAAAxB,EAAAyB,oBACAwT,EAAAzT,EAAAiQ,YAEA,mCAAArJ,KAAA6M,EAAApU,YAGA6X,EAAA6B,UAAA0F,mBAAA,WACA,IAAAjgB,EAAAgJ,KAAA+H,WAEA,OAAA/Q,EAAAY,UAAA,eAGA8X,EAAA6B,UAAA3K,SAAA,WACA,IAAA5P,EAAAgJ,KAAA+H,WAEA,OAAAnB,EAAA5P,IAGA0Y,EAAA6B,UAAA2F,WAAA,WACA,IAAAlgB,EAAAgJ,KAAA+H,WACAvP,EAAAxB,EAAAyB,oBAEAD,EAAArB,aACA6I,KAAAyT,IAAAnH,SACA9T,EAAArB,WAAAC,YAAA4I,KAAAyT,IAAAnH,SAEAtM,KAAAyT,IAAAE,WACAnb,EAAArB,WAAAC,YAAA4I,KAAAyT,IAAAE,WAEA3T,KAAAyT,IAAAK,YACAtb,EAAArB,WAAAC,YAAA4I,KAAAyT,IAAAK,aAIA9c,EAAAkgB,aAEAlX,KAAA6U,oBACAsC,aAAAnX,KAAA6U,mBACA7U,KAAA6U,uBAAA1O,EACAnG,KAAA+U,wBAIA/R,EAAAC,QAAAyM,uCCt+DA,IAAA0H,EAAAvgB,EAAA,QAIA,SAAAyM,EAAA0C,GAEAA,QAIA,oBAAAA,EAAA2M,oBAAA,oBAAA3M,EAAA2M,mBAAAlV,YAOA4Z,OAAA9F,UAAA+F,WACAD,OAAA9F,UAAA+F,SAAA,WAEA,WAAAD,OAAA9F,UAAAxI,QAAAwO,MAAAvX,KAAAmO,aAMAnI,EAAA2M,mBAAAlV,WAAA,yBAAAM,GAEA,IAAAuF,EAAAkU,YAAA,CACAlU,EAAAkU,aAAA,EACA,IAAAC,EAAA,IAAAC,eACAD,EAAAE,KAAA,+EACAF,EAAAG,OAAA,WACA,IAAAH,EAAAI,YAAA,MAAAJ,EAAAlH,SACAjN,EAAAwU,SAAAL,EAAAM,aACAzU,EAAA0U,aAEA,GAAA1U,EAAA0U,aACA1U,EAAA2U,KAAA,IAAAb,EAAA,QAAA9T,EAAAwU,SAAAxU,EAAA4U,UACAxU,SAAA,WAKA+T,EAAAU,KAAA,MAGA,IAAA7U,EAAA8U,YAAA,CACA9U,EAAA8U,aAAA,EACA,IAAAC,EAAA,IAAAX,eACAW,EAAAV,KAAA,+EACAU,EAAAT,OAAA,WACA,IAAAS,EAAAR,YAAA,MAAAQ,EAAA9H,SACAjN,EAAA4U,SAAAG,EAAAN,aACAzU,EAAA0U,aAEA,GAAA1U,EAAA0U,aACA1U,EAAA2U,KAAA,IAAAb,EAAA,QAAA9T,EAAAwU,SAAAxU,EAAA4U,UACAxU,SAAA,WAKA2U,EAAAF,KAAA,MAKA,IAAAG,EAAA,oCAIAC,GACA/W,MAAA,SAAApD,GACA,IAAAK,EAAAL,EAAAoa,OACAC,EAAA,GAEA,GAAAH,EAAAhB,SAAA7Y,GAEA,OADAL,EAAAM,OACA,KAGA,aAAAD,EAAAL,EAAAoa,UAAAF,EAAAhB,SAAA7Y,GACAga,GAAAha,EACAL,EAAAM,OAGA,OAAA4E,EAAA2U,OAAA3U,EAAA2U,KAAA1S,MAAAkT,GACA,cAEA,OAIAvG,EAAAlM,EAAA2M,mBAAA+F,QACA3a,IAAAoU,UAAA,cAGA,OAAAnM,EAAA2M,mBAAAgG,YAAAzG,EAAAqG,GAAA,MAvFApI,QAAAC,IAAA,4GA6FA9M,EAAA0U,WAAA,EACA1U,EAAAkU,aAAA,EACAlU,EAAA8U,aAAA,EACA9U,EAAAwU,SAAA,GACAxU,EAAA4U,SAAA,GACA5U,EAAA2U,KAIAjV,EAAAC,QAAAK,2BCnHA,SAAA1M,GAEAA,EAAAC,EAAA,UAFA,CAOC,SAAAC,GACD,aAEAA,EAAA8hB,WACK9V,KAAA,MAAA+V,KAAA,WAAA3G,KAAA,MAAA4G,KAAA,kBACAhW,KAAA,MAAAiW,OAAA,kGAAA7G,KAAA,aAAA4G,KAAA,qBACAhW,KAAA,QAAA+V,KAAA,kBAAA3G,KAAA,QAAA4G,KAAA,gBACAhW,KAAA,WAAA+V,KAAA,kBAAA3G,KAAA,WAAA8G,KAAA,wBACAlW,KAAA,YAAA+V,KAAA,mBAAA3G,KAAA,YAAA4G,KAAA,YACAhW,KAAA,IAAA+V,KAAA,cAAA3G,KAAA,QAAA4G,KAAA,iBACAhW,KAAA,MAAA+V,KAAA,gBAAA3G,KAAA,QAAA4G,KAAA,+CAAAG,OAAA,SACAnW,KAAA,QAAA+V,KAAA,eAAA3G,KAAA,QAAA4G,KAAA,eACAhW,KAAA,KAAA+V,KAAA,gBAAA3G,KAAA,QAAA4G,KAAA,MAAAG,OAAA,YACAnW,KAAA,UAAA+V,KAAA,iBAAA3G,KAAA,UAAA4G,KAAA,uBACAhW,KAAA,gBAAA+V,KAAA,uBAAA3G,KAAA,UAAA4G,KAAA,UACAhW,KAAA,4BAAA+V,KAAA,aAAA3G,KAAA,MAAA4G,KAAA,SACAhW,KAAA,QAAA+V,KAAA,eAAA3G,KAAA,QAAA4G,KAAA,oBAAAE,KAAA,qBACAlW,KAAA,eAAAiW,OAAA,0EAAA7G,KAAA,eAAA4G,KAAA,UAAAG,OAAA,4BACAnW,KAAA,cAAA+V,KAAA,qBAAA3G,KAAA,aAAA4G,KAAA,kBAAAG,OAAA,UACAnW,KAAA,SAAA+V,KAAA,6BAAA3G,KAAA,SAAA4G,KAAA,kBACAhW,KAAA,SAAA+V,KAAA,gBAAA3G,KAAA,SAAA4G,KAAA,qBACAhW,KAAA,UAAA+V,KAAA,iBAAA3G,KAAA,UAAA4G,KAAA,QACAhW,KAAA,MAAA+V,KAAA,WAAA3G,KAAA,MAAA4G,KAAA,SACAhW,KAAA,MAAA+V,KAAA,mBAAA3G,KAAA,MAAA4G,KAAA,SACAhW,KAAA,IAAA+V,KAAA,WAAA3G,KAAA,IAAA4G,KAAA,OACAhW,KAAA,OAAAiW,OAAA,kCAAA7G,KAAA,OAAA4G,KAAA,UACAhW,KAAA,OAAA+V,KAAA,cAAA3G,KAAA,OAAA4G,KAAA,kBACAhW,KAAA,SAAA+V,KAAA,gBAAA3G,KAAA,WACApP,KAAA,aAAA+V,KAAA,oBAAA3G,KAAA,aAAA8G,KAAA,iBACAlW,KAAA,MAAA+V,KAAA,sBAAA3G,KAAA,MAAA4G,KAAA,SACAhW,KAAA,QAAA+V,KAAA,eAAA3G,KAAA,QAAA4G,KAAA,wBACAhW,KAAA,OAAA+V,KAAA,cAAA3G,KAAA,SACApP,KAAA,MAAA+V,KAAA,aAAA3G,KAAA,MAAA4G,KAAA,SACAhW,KAAA,MAAA+V,KAAA,kBAAA3G,KAAA,UAAA4G,KAAA,SACAhW,KAAA,SAAA+V,KAAA,gBAAA3G,KAAA,SAAA4G,KAAA,OACAhW,KAAA,MAAA+V,KAAA,aAAA3G,KAAA,MAAA4G,KAAA,SACAhW,KAAA,sBAAA+V,KAAA,oBAAA3G,KAAA,eAAA4G,KAAA,SACAhW,KAAA,gBAAA+V,KAAA,oBAAA3G,KAAA,eAAA4G,KAAA,SACAhW,KAAA,SAAA+V,KAAA,gBAAA3G,KAAA,SAAA4G,KAAA,SACAhW,KAAA,QAAA+V,KAAA,eAAA3G,KAAA,QACApP,KAAA,SAAA+V,KAAA,gBAAA3G,KAAA,SAAA4G,KAAA,YACAhW,KAAA,MAAA+V,KAAA,aAAA3G,KAAA,QACApP,KAAA,QAAA+V,KAAA,eAAA3G,KAAA,QAAA4G,KAAA,uBACAhW,KAAA,UAAA+V,KAAA,iBAAA3G,KAAA,UAAA4G,KAAA,yBACAhW,KAAA,KAAA+V,KAAA,gBAAA3G,KAAA,SAAA4G,KAAA,MAAAG,OAAA,YACAnW,KAAA,MAAA+V,KAAA,aAAA3G,KAAA,MAAA4G,KAAA,OACAhW,KAAA,UAAA+V,KAAA,iBAAA3G,KAAA,UAAA4G,KAAA,aACAhW,KAAA,2BAAA+V,KAAA,aAAA3G,KAAA,MAAA8G,KAAA,wCACAlW,KAAA,KAAA+V,KAAA,YAAA3G,KAAA,KAAA4G,KAAA,QACAhW,KAAA,SAAA+V,KAAA,gBAAA3G,KAAA,SAAA4G,KAAA,mBAAAE,KAAA,kBACAlW,KAAA,OAAA+V,KAAA,cAAA3G,KAAA,OAAA4G,KAAA,UACAhW,KAAA,UAAA+V,KAAA,iBAAA3G,KAAA,UAAA4G,KAAA,QACAhW,KAAA,qBAAA+V,KAAA,0BAAA3G,KAAA,mBAAA4G,KAAA,SACAhW,KAAA,OAAA+V,KAAA,cAAA3G,KAAA,OAAA4G,KAAA,QACAhW,KAAA,OAAA+V,KAAA,cAAA3G,KAAA,OAAA4G,KAAA,UACAhW,KAAA,UAAA+V,KAAA,qBAAA3G,KAAA,eAAA4G,KAAA,QAAAG,OAAA,gBACAnW,KAAA,OAAA+V,KAAA,YAAA3G,KAAA,YAAA4G,KAAA,iCAAAG,OAAA,WACAnW,KAAA,OAAA+V,KAAA,eAAA3G,KAAA,SACApP,KAAA,MAAA+V,KAAA,aAAA3G,KAAA,MAAA4G,KAAA,SACAhW,KAAA,MAAA+V,KAAA,aAAA3G,KAAA,MAAA4G,KAAA,cAAAG,OAAA,UACAnW,KAAA,OAAA+V,KAAA,cAAA3G,KAAA,QAAA4G,KAAA,UACAhW,KAAA,oBAAA+V,KAAA,oBAAA3G,KAAA,eAAA4G,KAAA,OAAAG,OAAA,SACAnW,KAAA,aAAAiW,OAAA,kHACL7G,KAAA,aAAA4G,KAAA,MAAAG,OAAA,4BACKnW,KAAA,OAAAiW,OAAA,yCAAA7G,KAAA,aAAA4G,KAAA,cAAAG,OAAA,WACAnW,KAAA,UAAA+V,KAAA,sBAAA3G,KAAA,aAAA4G,KAAA,UAAAG,OAAA,YACAnW,KAAA,MAAA+V,KAAA,WAAA3G,KAAA,MAAA4G,KAAA,SACAhW,KAAA,SAAA+V,KAAA,OAAA3G,KAAA,WACApP,KAAA,QAAA+V,KAAA,eAAA3G,KAAA,QAAA4G,KAAA,QACAhW,KAAA,SAAA+V,KAAA,gBAAA3G,KAAA,QAAA4G,KAAA,QACAhW,KAAA,OAAA+V,KAAA,cAAA3G,KAAA,MAAA4G,KAAA,UACAhW,KAAA,aAAA+V,KAAA,oBAAA3G,KAAA,aAAA4G,KAAA,MAAAG,OAAA,QACAnW,KAAA,MAAA+V,KAAA,aAAA3G,KAAA,MAAA4G,KAAA,SACAhW,KAAA,WAAA+V,KAAA,kBAAA3G,KAAA,WAAA4G,KAAA,yBACAhW,KAAA,OAAA+V,KAAA,YAAA3G,KAAA,SACApP,KAAA,cAAA+V,KAAA,iBAAA3G,KAAA,QACApP,KAAA,cAAA+V,KAAA,qBAAA3G,KAAA,cAAA4G,KAAA,YACAhW,KAAA,WAAA+V,KAAA,kBAAA3G,KAAA,WAAA4G,KAAA,QACAhW,KAAA,QAAA+V,KAAA,eAAA3G,KAAA,QAAA4G,KAAA,SACAhW,KAAA,SAAA+V,KAAA,eAAA3G,KAAA,QACApP,KAAA,OAAA+V,KAAA,mBAAA3G,KAAA,OAAA4G,KAAA,UACAhW,KAAA,QAAA+V,KAAA,eAAA3G,KAAA,QACApP,KAAA,QAAA+V,KAAA,oBAAA3G,KAAA,QAAA8G,KAAA,oBACAlW,KAAA,OAAA+V,KAAA,cAAA3G,KAAA,OAAA4G,KAAA,eACAhW,KAAA,WAAAiW,OAAA,gEACL7G,KAAA,WAAA4G,KAAA,aACKhW,KAAA,cAAA+V,KAAA,oBAAA3G,KAAA,QAAA4G,KAAA,UAAAG,OAAA,wBACAnW,KAAA,QAAA+V,KAAA,eAAA3G,KAAA,SAAA4G,KAAA,0BACAhW,KAAA,SAAA+V,KAAA,gBAAA3G,KAAA,SAAA4G,KAAA,OACAhW,KAAA,KAAA+V,KAAA,YAAA3G,KAAA,KAAA4G,KAAA,QACAhW,KAAA,SAAA+V,KAAA,gBAAA3G,KAAA,SAAA4G,KAAA,aACAhW,KAAA,SAAA+V,KAAA,OAAA3G,KAAA,QAAA4G,KAAA,YACAhW,KAAA,OAAA+V,KAAA,cAAA3G,KAAA,OAAA4G,KAAA,aACAhW,KAAA,MAAAiW,OAAA,uEAAA7G,KAAA,MAAA4G,KAAA,6CACAhW,KAAA,MAAA+V,KAAA,aAAA3G,KAAA,MAAA4G,KAAA,SACAhW,KAAA,aAAA+V,KAAA,aAAA3G,KAAA,OAAA4G,KAAA,0CACAhW,KAAA,QAAA+V,KAAA,eAAA3G,KAAA,MAAA4G,KAAA,SACAhW,KAAA,aAAA+V,KAAA,2BAAA3G,KAAA,aAAA4G,KAAA,uBACAhW,KAAA,mBAAA+V,KAAA,oBAAA3G,KAAA,aAAA4G,KAAA,yBAAAG,OAAA,sBACAnW,KAAA,WAAA+V,KAAA,kBAAA3G,KAAA,WAAA4G,KAAA,WACAhW,KAAA,SAAA+V,KAAA,gBAAA3G,KAAA,SAAA4G,KAAA,0BAAAE,KAAA,mBACAlW,KAAA,SAAA+V,KAAA,gBAAA3G,KAAA,SAAA4G,KAAA,QACAhW,KAAA,IAAA+V,KAAA,WAAA3G,KAAA,IAAA4G,KAAA,OACAhW,KAAA,IAAA+V,KAAA,cAAA3G,KAAA,IAAA4G,KAAA,SAAAG,OAAA,aACAnW,KAAA,mBAAA+V,KAAA,aAAA3G,KAAA,MAAA4G,KAAA,OAAAG,OAAA,SACAnW,KAAA,cAAA+V,KAAA,qBAAA3G,KAAA,QACApP,KAAA,WAAA+V,KAAA,kBAAA3G,KAAA,MAAA4G,KAAA,UACAhW,KAAA,OAAA+V,KAAA,cAAA3G,KAAA,OAAA4G,KAAA,MAAAG,OAAA,uCACAnW,KAAA,OAAA+V,KAAA,iBAAA3G,KAAA,OAAA4G,KAAA,QACAhW,KAAA,MAAA+V,KAAA,aAAA3G,KAAA,MAAA4G,KAAA,SACAhW,KAAA,OAAA+V,KAAA,cAAA3G,KAAA,OAAA4G,KAAA,UACAhW,KAAA,QAAA+V,KAAA,eAAA3G,KAAA,QAAA4G,KAAA,WACAhW,KAAA,SAAA+V,KAAA,gBAAA3G,KAAA,SAAA4G,KAAA,cACAhW,KAAA,OAAA+V,KAAA,cAAA3G,KAAA,MAAA4G,KAAA,UACAhW,KAAA,QAAAiW,OAAA,gCAAA7G,KAAA,QAAA4G,KAAA,mBAAAG,OAAA,mBAAAD,KAAA,eACAlW,KAAA,QAAA+V,KAAA,oBAAA3G,KAAA,QAAA4G,KAAA,iBACAhW,KAAA,OAAAiW,OAAA,oCAAA7G,KAAA,OAAA4G,KAAA,UACAhW,KAAA,YAAA+V,KAAA,eAAA3G,KAAA,YAAA4G,KAAA,QACAhW,KAAA,SAAA+V,KAAA,gBAAA3G,KAAA,SAAA4G,KAAA,SACAhW,KAAA,OAAA+V,KAAA,cAAA3G,KAAA,SACApP,KAAA,MAAA+V,KAAA,aAAA3G,KAAA,SAAA4G,KAAA,iCACAhW,KAAA,MAAA+V,KAAA,aAAA3G,KAAA,MAAA4G,KAAA,OAAAG,OAAA,sBACAnW,KAAA,SAAA+V,KAAA,2BAAA3G,KAAA,SAAA4G,KAAA,eAAAG,OAAA,YACAnW,KAAA,cAAA+V,KAAA,qBAAA3G,KAAA,cAAA+G,OAAA,qBACAnW,KAAA,MAAA+V,KAAA,aAAA3G,KAAA,MAAA4G,KAAA,SACAhW,KAAA,SAAA+V,KAAA,gBAAA3G,KAAA,QACApP,KAAA,WAAA+V,KAAA,kBAAA3G,KAAA,QAAA4G,KAAA,SACAhW,KAAA,SAAA+V,KAAA,cAAA3G,KAAA,SAAA4G,KAAA,UACAhW,KAAA,QAAA+V,KAAA,eAAA3G,KAAA,QAAA4G,KAAA,WACAhW,KAAA,OAAA+V,KAAA,cAAA3G,KAAA,SACApP,KAAA,QAAA+V,KAAA,eAAA3G,KAAA,OAAA4G,KAAA,oBAAAG,OAAA,SACAnW,KAAA,gBAAA+V,KAAA,uBAAA3G,KAAA,UAAA4G,KAAA,kBACAhW,KAAA,MAAA+V,KAAA,aAAA3G,KAAA,MAAA4G,KAAA,SACAhW,KAAA,UAAA+V,KAAA,iBAAA3G,KAAA,UAAA4G,KAAA,aACAhW,KAAA,cAAA+V,KAAA,oBAAA3G,KAAA,eACApP,KAAA,YAAA+V,KAAA,YAAA3G,KAAA,SACApP,KAAA,OAAA+V,KAAA,cAAA3G,KAAA,OAAA4G,KAAA,UACAhW,KAAA,UAAA+V,KAAA,iBAAA3G,KAAA,YACApP,KAAA,QAAA+V,KAAA,aAAA3G,KAAA,QAAA4G,KAAA,uCACAhW,KAAA,OAAA+V,KAAA,cAAA3G,KAAA,OAAA4G,KAAA,2BACAhW,KAAA,WAAA+V,KAAA,kBAAA3G,KAAA,WAAA4G,KAAA,SACAhW,KAAA,SAAA+V,KAAA,cAAA3G,KAAA,SAAA4G,KAAA,SACAhW,KAAA,aAAA+V,KAAA,yBAAA3G,KAAA,aAAA4G,KAAA,MAAAG,OAAA,QACAnW,KAAA,iBAAA+V,KAAA,sBAAA3G,KAAA,MAAA4G,KAAA,OAAAG,OAAA,SACAnW,KAAA,OAAA+V,KAAA,cAAA3G,KAAA,SACApP,KAAA,UAAA+V,KAAA,gBAAA3G,KAAA,SAAA4G,KAAA,YACAhW,KAAA,SAAA+V,KAAA,YAAA3G,KAAA,KAAA4G,KAAA,QACAhW,KAAA,WAAA+V,KAAA,gBAAA3G,KAAA,WAAA4G,KAAA,SACAhW,KAAA,WAAA+V,KAAA,gBAAA3G,KAAA,WAAA4G,KAAA,SACAhW,KAAA,UAAA+V,KAAA,iBAAA3G,KAAA,UAAA4G,KAAA,OACAhW,KAAA,OAAA+V,KAAA,cAAA3G,KAAA,OAAA4G,KAAA,gBACAhW,KAAA,mBAAAiW,OAAA,6BAAA7G,KAAA,MAAA4G,KAAA,SACAhW,KAAA,MAAAiW,OAAA,8BAAA7G,KAAA,MAAA4G,KAAA,yBAAAG,OAAA,sBACAnW,KAAA,SAAA+V,KAAA,qBAAA3G,KAAA,SAAA4G,KAAA,iBACAhW,KAAA,QAAA+V,KAAA,eAAA3G,KAAA,QAAA4G,KAAA,QACAhW,KAAA,OAAAiW,OAAA,2BAAA7G,KAAA,OAAA4G,KAAA,cAAAG,OAAA,SACAnW,KAAA,MAAA+V,KAAA,aAAA3G,KAAA,MAAA4G,KAAA,SACAhW,KAAA,SAAA+V,KAAA,gBAAA3G,KAAA,SAAA4G,KAAA,0BACAhW,KAAA,KAAA+V,KAAA,YAAA3G,KAAA,SAAA4G,KAAA,QACAhW,KAAA,UAAA+V,KAAA,iBAAA3G,KAAA,SAAA4G,KAAA,aAGL,QAAAxR,EAAA,EAAiBA,EAAAxQ,EAAA8hB,SAAA7W,OAAgCuF,IAAA,CACjD,IAAA4R,EAAApiB,EAAA8hB,SAAAtR,GACA4R,EAAAH,QAAAG,EAAAL,KAAAK,EAAAH,MAAA,IAGAjiB,EAAAqiB,eAAA,SAAAN,GACAA,IAAAO,cACA,QAAA9R,EAAA,EAAmBA,EAAAxQ,EAAA8hB,SAAA7W,OAAgCuF,IAAA,CACnD,IAAA4R,EAAApiB,EAAA8hB,SAAAtR,GACA,GAAA4R,EAAAL,QAAA,OAAAK,EACA,GAAAA,EAAAH,MAAA,QAAAM,EAAA,EAAqCA,EAAAH,EAAAH,MAAAhX,OAAuBsX,IAC5D,GAAAH,EAAAH,MAAAM,IAAAR,EAAA,OAAAK,EAEA,eAAA9Z,KAAAyZ,GAAA/hB,EAAAqiB,eAAA,mBACA,UAAA/Z,KAAAyZ,GAAA/hB,EAAAqiB,eAAA,4BAGAriB,EAAAwiB,oBAAA,SAAAR,GACA,QAAAxR,EAAA,EAAmBA,EAAAxQ,EAAA8hB,SAAA7W,OAAgCuF,IAAA,CACnD,IAAA4R,EAAApiB,EAAA8hB,SAAAtR,GACA,GAAA4R,EAAAJ,IAAA,QAAAO,EAAA,EAAmCA,EAAAH,EAAAJ,IAAA/W,OAAqBsX,IACxD,GAAAH,EAAAJ,IAAAO,IAAAP,EAAA,OAAAI,IAIApiB,EAAAyiB,mBAAA,SAAAC,GACA,QAAAlS,EAAA,EAAmBA,EAAAxQ,EAAA8hB,SAAA7W,OAAgCuF,IAAA,CACnD,IAAA4R,EAAApiB,EAAA8hB,SAAAtR,GACA,GAAA4R,EAAAF,MAAAE,EAAAF,KAAA5Z,KAAAoa,GAAA,OAAAN,EAEA,IAAAO,EAAAD,EAAAE,YAAA,KACAZ,EAAAW,GAAA,GAAAD,EAAAG,UAAAF,EAAA,EAAAD,EAAAzX,QACA,GAAA+W,EAAA,OAAAhiB,EAAAwiB,oBAAAR,IAGAhiB,EAAA8iB,eAAA,SAAA9W,GACAA,IAAAsW,cACA,QAAA9R,EAAA,EAAmBA,EAAAxQ,EAAA8hB,SAAA7W,OAAgCuF,IAAA,CACnD,IAAA4R,EAAApiB,EAAA8hB,SAAAtR,GACA,GAAA4R,EAAApW,KAAAsW,eAAAtW,EAAA,OAAAoW,EACA,GAAAA,EAAAD,MAAA,QAAAI,EAAA,EAAqCA,EAAAH,EAAAD,MAAAlX,OAAuBsX,IAC5D,GAAAH,EAAAD,MAAAI,GAAAD,eAAAtW,EAAA,OAAAoW,6BCrNA,SAAAW,IAMC,SAAAC,GACD,aAMA,IAAAC,GACAC,QAAA,OACArS,KAAA,oBACAsS,OAAAC,EACAngB,GAAA,yDACA4U,QAAA,6CACAwL,QAAAD,EACAte,WAAA,0CACAwe,KAAA,gEACAC,KAAA,kYAUAC,IAAA,mFACAtd,MAAAkd,EACAK,SAAA,oCACAC,UAAA,4GACAtT,KAAA,WAmGA,SAAAuT,EAAAzU,GACAhG,KAAA0a,UACA1a,KAAA0a,OAAAC,SACA3a,KAAAgG,WAAAzC,EAAAvF,SACAgC,KAAA4a,MAAAb,EAAAc,OAEA7a,KAAAgG,QAAA8U,SACA9a,KAAA4a,MAAAb,EAAAe,SACG9a,KAAAgG,QAAA+U,MACH/a,KAAAgG,QAAAgV,OACAhb,KAAA4a,MAAAb,EAAAiB,OAEAhb,KAAA4a,MAAAb,EAAAgB,KA5GAhB,EAAAkB,OAAA,iCACAlB,EAAAmB,OAAA,+DACAnB,EAAAO,IAAAa,EAAApB,EAAAO,KACA3hB,QAAA,QAAAohB,EAAAkB,QACAtiB,QAAA,QAAAohB,EAAAmB,QACAE,WAEArB,EAAAsB,OAAA,kBACAtB,EAAA1D,KAAA,6CACA0D,EAAA1D,KAAA8E,EAAApB,EAAA1D,KAAA,MACA1d,QAAA,QAAAohB,EAAAsB,QACAD,WAEArB,EAAAK,KAAAe,EAAApB,EAAAK,MACAzhB,QAAA,QAAAohB,EAAAsB,QACA1iB,QAAA,wEACAA,QAAA,gBAAAohB,EAAAO,IAAAhgB,OAAA,KACA8gB,WAEArB,EAAAuB,KAAA,gWAMAvB,EAAAwB,SAAA,yBACAxB,EAAAM,KAAAc,EAAApB,EAAAM,KAAA,KACA1hB,QAAA,UAAAohB,EAAAwB,UACA5iB,QAAA,MAAAohB,EAAAuB,MACA3iB,QAAA,wFACAyiB,WAEArB,EAAAS,UAAAW,EAAApB,EAAAS,WACA7hB,QAAA,KAAAohB,EAAAhgB,IACApB,QAAA,UAAAohB,EAAApL,SACAhW,QAAA,WAAAohB,EAAAQ,UACA5hB,QAAA,MAAAohB,EAAAuB,MACAF,WAEArB,EAAAne,WAAAuf,EAAApB,EAAAne,YACAjD,QAAA,YAAAohB,EAAAS,WACAY,WAMArB,EAAAc,OAAAW,KAAuBzB,GAMvBA,EAAAgB,IAAAS,KAAoBzB,EAAAc,QACpBZ,OAAA,+DACAO,UAAA,IACA7L,QAAA,0CAGAoL,EAAAgB,IAAAP,UAAAW,EAAApB,EAAAS,WACA7hB,QAAA,YACAohB,EAAAgB,IAAAd,OAAA3f,OAAA3B,QAAA,iBACAohB,EAAAK,KAAA9f,OAAA3B,QAAA,kBACAyiB,WAMArB,EAAAiB,OAAAQ,KAAuBzB,EAAAgB,KACvBZ,QAAA,gFACAnd,MAAA,0EAOA+c,EAAAe,SAAAU,KAAyBzB,EAAAc,QACzBR,KAAAc,EACA,8IAGAxiB,QAAA,UAAAohB,EAAAwB,UACA5iB,QAAA,4KAIAyiB,WACAd,IAAA,sEA4BAG,EAAAG,MAAAb,EAMAU,EAAAgB,IAAA,SAAAC,EAAA1V,GACA,IAAA2V,EAAA,IAAAlB,EAAAzU,GACA,OAAA2V,EAAAF,IAAAC,IAOAjB,EAAAlJ,UAAAkK,IAAA,SAAAC,GAOA,OANAA,IACA/iB,QAAA,iBACAA,QAAA,cACAA,QAAA,eACAA,QAAA,gBAEAqH,KAAAwB,MAAAka,GAAA,IAOAjB,EAAAlJ,UAAA/P,MAAA,SAAAka,EAAAlG,GAEA,IAAA9W,EACAkd,EACAC,EACAC,EACAC,EACA1F,EACA2F,EACA1U,EACA2U,EACAC,EACAC,EACAC,EACAC,EAbAX,IAAA/iB,QAAA,aAeA,MAAA+iB,EAYA,IAVAG,EAAA7b,KAAA4a,MAAAZ,QAAA5X,KAAAsZ,MACAA,IAAA/B,UAAAkC,EAAA,GAAA9Z,QACA8Z,EAAA,GAAA9Z,OAAA,GACA/B,KAAA0a,OAAArK,MACAzS,KAAA,WAMAie,EAAA7b,KAAA4a,MAAAjT,KAAAvF,KAAAsZ,GACAA,IAAA/B,UAAAkC,EAAA,GAAA9Z,QACA8Z,IAAA,GAAAljB,QAAA,UAAiC,IACjCqH,KAAA0a,OAAArK,MACAzS,KAAA,OACAsJ,KAAAlH,KAAAgG,QAAA8U,SAEAe,EADAA,EAAAljB,QAAA,kBAOA,GAAAkjB,EAAA7b,KAAA4a,MAAAX,OAAA7X,KAAAsZ,GACAA,IAAA/B,UAAAkC,EAAA,GAAA9Z,QACA/B,KAAA0a,OAAArK,MACAzS,KAAA,OACA0e,KAAAT,EAAA,GACA3U,KAAA2U,EAAA,cAMA,GAAAA,EAAA7b,KAAA4a,MAAAjM,QAAAvM,KAAAsZ,GACAA,IAAA/B,UAAAkC,EAAA,GAAA9Z,QACA/B,KAAA0a,OAAArK,MACAzS,KAAA,UACAiC,MAAAgc,EAAA,GAAA9Z,OACAmF,KAAA2U,EAAA,UAMA,GAAArG,IAAAqG,EAAA7b,KAAA4a,MAAAT,QAAA/X,KAAAsZ,MACArF,GACAzY,KAAA,QACAnB,OAAA8f,EAAAV,EAAA,GAAAljB,QAAA,oBACA6jB,MAAAX,EAAA,GAAAljB,QAAA,iBAAAyO,MAAA,UACAqV,MAAAZ,EAAA,GAAAA,EAAA,GAAAljB,QAAA,UAAAyO,MAAA,UAGAiP,EAAA5Z,OAAAsF,SAAAsU,EAAAmG,MAAAza,QARA,CAWA,IAFA2Z,IAAA/B,UAAAkC,EAAA,GAAA9Z,QAEAuF,EAAA,EAAmBA,EAAA+O,EAAAmG,MAAAza,OAAuBuF,IAC1C,YAAAlI,KAAAiX,EAAAmG,MAAAlV,IACA+O,EAAAmG,MAAAlV,GAAA,QACW,aAAAlI,KAAAiX,EAAAmG,MAAAlV,IACX+O,EAAAmG,MAAAlV,GAAA,SACW,YAAAlI,KAAAiX,EAAAmG,MAAAlV,IACX+O,EAAAmG,MAAAlV,GAAA,OAEA+O,EAAAmG,MAAAlV,GAAA,KAIA,IAAAA,EAAA,EAAmBA,EAAA+O,EAAAoG,MAAA1a,OAAuBuF,IAC1C+O,EAAAoG,MAAAnV,GAAAiV,EAAAlG,EAAAoG,MAAAnV,GAAA+O,EAAA5Z,OAAAsF,QAGA/B,KAAA0a,OAAArK,KAAAgG,QAOA,GAAAwF,EAAA7b,KAAA4a,MAAA7gB,GAAAqI,KAAAsZ,GACAA,IAAA/B,UAAAkC,EAAA,GAAA9Z,QACA/B,KAAA0a,OAAArK,MACAzS,KAAA,YAMA,GAAAie,EAAA7b,KAAA4a,MAAAhf,WAAAwG,KAAAsZ,GACAA,IAAA/B,UAAAkC,EAAA,GAAA9Z,QAEA/B,KAAA0a,OAAArK,MACAzS,KAAA,qBAGAie,IAAA,GAAAljB,QAAA,eAKAqH,KAAAwB,MAAAqa,EAAArG,GAEAxV,KAAA0a,OAAArK,MACAzS,KAAA,wBAOA,GAAAie,EAAA7b,KAAA4a,MAAAR,KAAAhY,KAAAsZ,GAAA,CAkBA,IAjBAA,IAAA/B,UAAAkC,EAAA,GAAA9Z,QACA+Z,EAAAD,EAAA,GACAM,EAAAL,EAAA/Z,OAAA,EAEA/B,KAAA0a,OAAArK,MACAzS,KAAA,aACA8e,QAAAP,EACA7R,MAAA6R,GAAAL,EAAA,KAIAD,IAAA,GAAAjd,MAAAoB,KAAA4a,MAAAvE,MAEA3X,GAAA,EACAwd,EAAAL,EAAA9Z,OACAuF,EAAA,EAEYA,EAAA4U,EAAO5U,IACnB+O,EAAAwF,EAAAvU,GAIA0U,EAAA3F,EAAAtU,OACAsU,IAAA1d,QAAA,0BAIA0d,EAAAtN,QAAA,SACAiT,GAAA3F,EAAAtU,OACAsU,EAAArW,KAAAgG,QAAA8U,SAEAzE,EAAA1d,QAAA,YAAmC,IADnC0d,EAAA1d,QAAA,IAAAgkB,OAAA,QAA0CX,EAAA,IAAgB,WAM1Dhc,KAAAgG,QAAA4W,YAAAtV,IAAA4U,EAAA,IACAH,EAAAhC,EAAAsB,OAAAjZ,KAAAyZ,EAAAvU,EAAA,OACAwU,IAAAC,GAAAD,EAAA/Z,OAAA,GAAAga,EAAAha,OAAA,IACA2Z,EAAAG,EAAAtR,MAAAjD,EAAA,GAAAqG,KAAA,MAAA+N,EACApU,EAAA4U,EAAA,IAOAN,EAAAld,GAAA,eAAAU,KAAAiX,GACA/O,IAAA4U,EAAA,IACAxd,EAAA,OAAA2X,EAAAwG,OAAAxG,EAAAtU,OAAA,GACA6Z,MAAAld,IAIA0d,EAAA,cAAAhd,KAAAiX,GACAgG,OAAAlW,EACAiW,IACAC,EAAA,MAAAhG,EAAA,GACAA,IAAA1d,QAAA,oBAGAqH,KAAA0a,OAAArK,MACAzS,KAAAge,EACA,mBACA,kBACAkB,KAAAV,EACAW,QAAAV,IAIArc,KAAAwB,MAAA6U,GAAA,GAEArW,KAAA0a,OAAArK,MACAzS,KAAA,kBAIAoC,KAAA0a,OAAArK,MACAzS,KAAA,kBAOA,GAAAie,EAAA7b,KAAA4a,MAAAP,KAAAjY,KAAAsZ,GACAA,IAAA/B,UAAAkC,EAAA,GAAA9Z,QACA/B,KAAA0a,OAAArK,MACAzS,KAAAoC,KAAAgG,QAAAgX,SACA,YACA,OACAlgB,KAAAkD,KAAAgG,QAAAiX,YACA,QAAApB,EAAA,eAAAA,EAAA,cAAAA,EAAA,IACA3U,KAAA2U,EAAA,UAMA,GAAArG,IAAAqG,EAAA7b,KAAA4a,MAAAN,IAAAlY,KAAAsZ,IACAA,IAAA/B,UAAAkC,EAAA,GAAA9Z,QACA8Z,EAAA,KAAAA,EAAA,GAAAA,EAAA,GAAAlC,UAAA,EAAAkC,EAAA,GAAA9Z,OAAA,IACAka,EAAAJ,EAAA,GAAAzC,cAAAzgB,QAAA,YACAqH,KAAA0a,OAAAC,MAAAsB,KACAjc,KAAA0a,OAAAC,MAAAsB,IACAlM,KAAA8L,EAAA,GACAzV,MAAAyV,EAAA,UAOA,GAAArG,IAAAqG,EAAA7b,KAAA4a,MAAA5d,MAAAoF,KAAAsZ,MACArF,GACAzY,KAAA,QACAnB,OAAA8f,EAAAV,EAAA,GAAAljB,QAAA,oBACA6jB,MAAAX,EAAA,GAAAljB,QAAA,iBAAAyO,MAAA,UACAqV,MAAAZ,EAAA,GAAAA,EAAA,GAAAljB,QAAA,qBAAAyO,MAAA,UAGAiP,EAAA5Z,OAAAsF,SAAAsU,EAAAmG,MAAAza,QARA,CAWA,IAFA2Z,IAAA/B,UAAAkC,EAAA,GAAA9Z,QAEAuF,EAAA,EAAmBA,EAAA+O,EAAAmG,MAAAza,OAAuBuF,IAC1C,YAAAlI,KAAAiX,EAAAmG,MAAAlV,IACA+O,EAAAmG,MAAAlV,GAAA,QACW,aAAAlI,KAAAiX,EAAAmG,MAAAlV,IACX+O,EAAAmG,MAAAlV,GAAA,SACW,YAAAlI,KAAAiX,EAAAmG,MAAAlV,IACX+O,EAAAmG,MAAAlV,GAAA,OAEA+O,EAAAmG,MAAAlV,GAAA,KAIA,IAAAA,EAAA,EAAmBA,EAAA+O,EAAAoG,MAAA1a,OAAuBuF,IAC1C+O,EAAAoG,MAAAnV,GAAAiV,EACAlG,EAAAoG,MAAAnV,GAAA3O,QAAA,uBACA0d,EAAA5Z,OAAAsF,QAGA/B,KAAA0a,OAAArK,KAAAgG,QAOA,GAAAwF,EAAA7b,KAAA4a,MAAAL,SAAAnY,KAAAsZ,GACAA,IAAA/B,UAAAkC,EAAA,GAAA9Z,QACA/B,KAAA0a,OAAArK,MACAzS,KAAA,UACAiC,MAAA,MAAAgc,EAAA,OACA3U,KAAA2U,EAAA,UAMA,GAAArG,IAAAqG,EAAA7b,KAAA4a,MAAAJ,UAAApY,KAAAsZ,IACAA,IAAA/B,UAAAkC,EAAA,GAAA9Z,QACA/B,KAAA0a,OAAArK,MACAzS,KAAA,YACAsJ,KAAA,OAAA2U,EAAA,GAAAgB,OAAAhB,EAAA,GAAA9Z,OAAA,GACA8Z,EAAA,GAAAtR,MAAA,MACAsR,EAAA,UAMA,GAAAA,EAAA7b,KAAA4a,MAAA1T,KAAA9E,KAAAsZ,GAEAA,IAAA/B,UAAAkC,EAAA,GAAA9Z,QACA/B,KAAA0a,OAAArK,MACAzS,KAAA,OACAsJ,KAAA2U,EAAA,UAKA,GAAAH,EACA,UAAAwB,MAAA,0BAAAxB,EAAAlN,WAAA,IAIA,OAAAxO,KAAA0a,QAOA,IAAAyC,GACAC,OAAA,8CACAC,SAAA,sCACA1R,IAAAuO,EACA+B,IAAA,2JAMA9hB,KAAA,2CACAmjB,QAAA,wDACAC,OAAA,gEACAC,OAAA,8GACAC,GAAA,qKACA9V,KAAA,oCACAjO,GAAA,mBACAgkB,IAAAxD,EACAhT,KAAA,yCAoFA,SAAAyW,EAAAhD,EAAA3U,GAOA,GANAhG,KAAAgG,WAAAzC,EAAAvF,SACAgC,KAAA2a,QACA3a,KAAA4a,MAAAuC,EAAAtC,OACA7a,KAAA4d,SAAA5d,KAAAgG,QAAA4X,UAAA,IAAAC,EACA7d,KAAA4d,SAAA5X,QAAAhG,KAAAgG,SAEAhG,KAAA2a,MACA,UAAAuC,MAAA,6CAGAld,KAAAgG,QAAA8U,SACA9a,KAAA4a,MAAAuC,EAAArC,SACG9a,KAAAgG,QAAA+U,MACH/a,KAAAgG,QAAA2L,OACA3R,KAAA4a,MAAAuC,EAAAxL,OAEA3R,KAAA4a,MAAAuC,EAAApC,KAwPA,SAAA8C,EAAA7X,GACAhG,KAAAgG,WAAAzC,EAAAvF,SA2KA,SAAA8f,KAyBA,SAAAC,EAAA/X,GACAhG,KAAA0a,UACA1a,KAAAwB,MAAA,KACAxB,KAAAgG,WAAAzC,EAAAvF,SACAgC,KAAAgG,QAAA4X,SAAA5d,KAAAgG,QAAA4X,UAAA,IAAAC,EACA7d,KAAA4d,SAAA5d,KAAAgG,QAAA4X,SACA5d,KAAA4d,SAAA5X,QAAAhG,KAAAgG,QAoLA,SAAAoX,EAAA/C,EAAA2D,GACA,OAAA3D,EACA1hB,QAAAqlB,EAAkC,KAAlC,eAAkC,SAClCrlB,QAAA,aACAA,QAAA,aACAA,QAAA,eACAA,QAAA,cAGA,SAAAslB,EAAA5D,GAEA,OAAAA,EAAA1hB,QAAA,6CAA8D,SAAAulB,EAAAC,GAE9D,OADAA,IAAA/E,cACA,UAAA+E,EAAA,IACA,MAAAA,EAAAtB,OAAA,GACA,MAAAsB,EAAAtB,OAAA,GACAxF,OAAA+G,aAAAC,SAAAF,EAAAxE,UAAA,QACAtC,OAAA+G,cAAAD,EAAAxE,UAAA,IAEA,KAIA,SAAAwB,EAAAmD,EAAAC,GAGA,OAFAD,IAAAhkB,QAAAgkB,EACAC,KAAA,IAEA5lB,QAAA,SAAAmK,EAAA/J,GAIA,OAHAA,IAAAuB,QAAAvB,EACAA,IAAAJ,QAAA,qBACA2lB,IAAA3lB,QAAAmK,EAAA/J,GACAiH,MAEAob,SAAA,WACA,WAAAuB,OAAA2B,EAAAC,KAKA,SAAAC,EAAA/kB,EAAAsW,GAaA,OAZA0O,EAAA,IAAAhlB,KAIA,mBAAA2F,KAAA3F,GACAglB,EAAA,IAAAhlB,KAAA,IAEAglB,EAAA,IAAAhlB,KAAAd,QAAA,cAGAc,EAAAglB,EAAA,IAAAhlB,GAEA,OAAAsW,EAAAxF,MAAA,KACA9Q,EAAAd,QAAA,gBAAAoX,EACG,MAAAA,EAAA8M,OAAA,GACHpjB,EAAAd,QAAA,2BAAAoX,EAEAtW,EAAAsW,EAlxBAoN,EAAAuB,SAAA,8CAEAvB,EAAAwB,QAAA,+BACAxB,EAAAyB,OAAA,+IACAzB,EAAAE,SAAAlC,EAAAgC,EAAAE,UACA1kB,QAAA,SAAAwkB,EAAAwB,SACAhmB,QAAA,QAAAwkB,EAAAyB,QACAxD,WAEA+B,EAAA0B,WAAA,8EAEA1B,EAAAlB,IAAAd,EAAAgC,EAAAlB,KACAtjB,QAAA,UAAAohB,EAAAwB,UACA5iB,QAAA,YAAAwkB,EAAA0B,YACAzD,WAEA+B,EAAAlC,OAAA,iDACAkC,EAAA2B,MAAA,yFACA3B,EAAAjC,OAAA,8DAEAiC,EAAAhjB,KAAAghB,EAAAgC,EAAAhjB,MACAxB,QAAA,QAAAwkB,EAAAlC,QACAtiB,QAAA,OAAAwkB,EAAA2B,OACAnmB,QAAA,QAAAwkB,EAAAjC,QACAE,WAEA+B,EAAAG,QAAAnC,EAAAgC,EAAAG,SACA3kB,QAAA,QAAAwkB,EAAAlC,QACAG,WAMA+B,EAAAtC,OAAAW,KAAwB2B,GAMxBA,EAAArC,SAAAU,KAA0B2B,EAAAtC,QAC1B2C,OAAA,iEACAC,GAAA,2DACAtjB,KAAAghB,EAAA,2BACAxiB,QAAA,QAAAwkB,EAAAlC,QACAG,WACAkC,QAAAnC,EAAA,iCACAxiB,QAAA,QAAAwkB,EAAAlC,QACAG,aAOA+B,EAAApC,IAAAS,KAAqB2B,EAAAtC,QACrBuC,OAAAjC,EAAAgC,EAAAC,QAAAzkB,QAAA,aAAAyiB,WACAzP,IAAAwP,EAAA,oEACAxiB,QAAA,QAAAwkB,EAAAyB,QACAxD,WACA2D,WAAA,yEACArB,IAAA,0BACAxW,KAAAiU,EAAAgC,EAAAjW,MACAvO,QAAA,YACAA,QAAA,qEACAyiB,aAOA+B,EAAAxL,OAAA6J,KAAwB2B,EAAApC,KACxBrhB,GAAAyhB,EAAAgC,EAAAzjB,IAAAf,QAAA,OAAmC,KAAAyiB,WACnClU,KAAAiU,EAAAgC,EAAApC,IAAA7T,MAAAvO,QAAA,OAA2C,KAAAyiB,aAiC3CuC,EAAA/C,MAAAuC,EAMAQ,EAAAqB,OAAA,SAAAtD,EAAAf,EAAA3U,GACA,IAAAmX,EAAA,IAAAQ,EAAAhD,EAAA3U,GACA,OAAAmX,EAAA6B,OAAAtD,IAOAiC,EAAApM,UAAAyN,OAAA,SAAAtD,GACA,IACAvhB,EACA+M,EACA6I,EACA3J,EACAyV,EALAoD,EAAA,GAOA,MAAAvD,EAEA,GAAAG,EAAA7b,KAAA4a,MAAAwC,OAAAhb,KAAAsZ,GACAA,IAAA/B,UAAAkC,EAAA,GAAA9Z,QACAkd,GAAApD,EAAA,QAKA,GAAAA,EAAA7b,KAAA4a,MAAAyC,SAAAjb,KAAAsZ,GACAA,IAAA/B,UAAAkC,EAAA,GAAA9Z,QACA,MAAA8Z,EAAA,IACA3U,EAAAkW,EAAApd,KAAAkf,OAAArD,EAAA,KACA9L,EAAA,UAAA7I,IAEAA,EAAAkW,EAAAvB,EAAA,IACA9L,EAAA7I,GAEA+X,GAAAjf,KAAA4d,SAAAzjB,KAAA4V,EAAA,KAAA7I,QAKA,GAAAlH,KAAAmf,UAAAtD,EAAA7b,KAAA4a,MAAAjP,IAAAvJ,KAAAsZ,KAmBA,GAAAG,EAAA7b,KAAA4a,MAAAqB,IAAA7Z,KAAAsZ,IACA1b,KAAAmf,QAAA,QAAA/f,KAAAyc,EAAA,IACA7b,KAAAmf,QAAA,EACOnf,KAAAmf,QAAA,UAAA/f,KAAAyc,EAAA,MACP7b,KAAAmf,QAAA,GAEAzD,IAAA/B,UAAAkC,EAAA,GAAA9Z,QACAkd,GAAAjf,KAAAgG,QAAAgX,SACAhd,KAAAgG,QAAAiX,UACAjd,KAAAgG,QAAAiX,UAAApB,EAAA,IACAuB,EAAAvB,EAAA,IACAA,EAAA,QAKA,GAAAA,EAAA7b,KAAA4a,MAAAzgB,KAAAiI,KAAAsZ,GACAA,IAAA/B,UAAAkC,EAAA,GAAA9Z,QACA/B,KAAAmf,QAAA,EACApP,EAAA8L,EAAA,GACA7b,KAAAgG,QAAA8U,UACA3gB,EAAA,gCAAAiI,KAAA2N,GAEA5V,GACA4V,EAAA5V,EAAA,GACAiM,EAAAjM,EAAA,IAEAiM,EAAA,IAGAA,EAAAyV,EAAA,GAAAA,EAAA,GAAAtR,MAAA,SAEAwF,IAAAqP,OAAAzmB,QAAA,sBACAsmB,GAAAjf,KAAAqf,WAAAxD,GACA9L,KAAA4N,EAAA2B,QAAAvP,GACA3J,MAAAuX,EAAA2B,QAAAlZ,KAEApG,KAAAmf,QAAA,OAKA,IAAAtD,EAAA7b,KAAA4a,MAAA0C,QAAAlb,KAAAsZ,MACAG,EAAA7b,KAAA4a,MAAA2C,OAAAnb,KAAAsZ,IADA,CAKA,GAHAA,IAAA/B,UAAAkC,EAAA,GAAA9Z,QACA5H,GAAA0hB,EAAA,IAAAA,EAAA,IAAAljB,QAAA,YACAwB,EAAA6F,KAAA2a,MAAAxgB,EAAAif,gBACAjf,MAAA4V,KAAA,CACAkP,GAAApD,EAAA,GAAAgB,OAAA,GACAnB,EAAAG,EAAA,GAAAlC,UAAA,GAAA+B,EACA,SAEA1b,KAAAmf,QAAA,EACAF,GAAAjf,KAAAqf,WAAAxD,EAAA1hB,GACA6F,KAAAmf,QAAA,OAKA,GAAAtD,EAAA7b,KAAA4a,MAAA4C,OAAApb,KAAAsZ,GACAA,IAAA/B,UAAAkC,EAAA,GAAA9Z,QACAkd,GAAAjf,KAAA4d,SAAAJ,OAAAxd,KAAAgf,OAAAnD,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,UAKA,GAAAA,EAAA7b,KAAA4a,MAAA6C,GAAArb,KAAAsZ,GACAA,IAAA/B,UAAAkC,EAAA,GAAA9Z,QACAkd,GAAAjf,KAAA4d,SAAAH,GAAAzd,KAAAgf,OAAAnD,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,UAKA,GAAAA,EAAA7b,KAAA4a,MAAAjT,KAAAvF,KAAAsZ,GACAA,IAAA/B,UAAAkC,EAAA,GAAA9Z,QACAkd,GAAAjf,KAAA4d,SAAA2B,SAAAnC,EAAAvB,EAAA,GAAAuD,QAAA,SAKA,GAAAvD,EAAA7b,KAAA4a,MAAAlhB,GAAA0I,KAAAsZ,GACAA,IAAA/B,UAAAkC,EAAA,GAAA9Z,QACAkd,GAAAjf,KAAA4d,SAAAlkB,UAKA,GAAAmiB,EAAA7b,KAAA4a,MAAA8C,IAAAtb,KAAAsZ,GACAA,IAAA/B,UAAAkC,EAAA,GAAA9Z,QACAkd,GAAAjf,KAAA4d,SAAAF,IAAA1d,KAAAgf,OAAAnD,EAAA,UAKA,GAAAA,EAAA7b,KAAA4a,MAAA1T,KAAA9E,KAAAsZ,GACAA,IAAA/B,UAAAkC,EAAA,GAAA9Z,QACAkd,GAAAjf,KAAA4d,SAAA1W,KAAAkW,EAAApd,KAAAwf,YAAA3D,EAAA,WAIA,GAAAH,EACA,UAAAwB,MAAA,0BAAAxB,EAAAlN,WAAA,SAvHAqN,EAAA,GAAA7b,KAAA4a,MAAAmE,WAAA3c,KAAAyZ,EAAA,OACAH,IAAA/B,UAAAkC,EAAA,GAAA9Z,QACA,MAAA8Z,EAAA,IACA3U,EAAAkW,EAAAvB,EAAA,IACA9L,EAAA,UAAA7I,IAEAA,EAAAkW,EAAAvB,EAAA,IAEA9L,EADA,SAAA8L,EAAA,GACA,UAAA3U,EAEAA,GAGA+X,GAAAjf,KAAA4d,SAAAzjB,KAAA4V,EAAA,KAAA7I,GA8GA,OAAA+X,GAGAtB,EAAA2B,QAAA,SAAApY,GACA,OAAAA,IAAAvO,QAAAglB,EAAA/C,MAAA8D,SAAA,MAAAxX,GAOAyW,EAAApM,UAAA8N,WAAA,SAAAxD,EAAA1hB,GACA,IAAA4V,EAAA5V,EAAA4V,KACA3J,EAAAjM,EAAAiM,MAAAgX,EAAAjjB,EAAAiM,OAAA,KAEA,YAAAyV,EAAA,GAAAgB,OAAA,GACA7c,KAAA4d,SAAAzjB,KAAA4V,EAAA3J,EAAApG,KAAAgf,OAAAnD,EAAA,KACA7b,KAAA4d,SAAAhW,MAAAmI,EAAA3J,EAAAgX,EAAAvB,EAAA,MAOA8B,EAAApM,UAAAiO,YAAA,SAAAtY,GACA,OAAAlH,KAAAgG,QAAAwZ,YACAtY,EAEAvO,QAAA,YAEAA,QAAA,WAEAA,QAAA,0BAA8B,OAE9BA,QAAA,UAEAA,QAAA,+BAA8B,OAE9BA,QAAA,UAEAA,QAAA,SAAmB,KAfnBuO,GAsBAyW,EAAApM,UAAA2N,OAAA,SAAAhY,GACA,IAAAlH,KAAAgG,QAAAkZ,OAAA,OAAAhY,EAMA,IALA,IAGAzI,EAHAwgB,EAAA,GACA/C,EAAAhV,EAAAnF,OACAuF,EAAA,EAGQA,EAAA4U,EAAO5U,IACf7I,EAAAyI,EAAAsH,WAAAlH,GACAmY,KAAAC,SAAA,KACAjhB,EAAA,IAAAA,EAAAsE,SAAA,KAEAkc,GAAA,KAAAxgB,EAAA,IAGA,OAAAwgB,GAWApB,EAAAtM,UAAA5J,KAAA,SAAAA,EAAA2U,EAAAqD,GACA,GAAA3f,KAAAgG,QAAA8L,UAAA,CACA,IAAAmN,EAAAjf,KAAAgG,QAAA8L,UAAAnK,EAAA2U,GACA,MAAA2C,OAAAtX,IACAgY,GAAA,EACAhY,EAAAsX,GAIA,OAAA3C,EAMA,qBACAtc,KAAAgG,QAAA4Z,WACAxC,EAAAd,GAAA,GACA,MACAqD,EAAAhY,EAAAyV,EAAAzV,GAAA,IACA,kBAVA,eACAgY,EAAAhY,EAAAyV,EAAAzV,GAAA,IACA,iBAWAkW,EAAAtM,UAAA3V,WAAA,SAAA4D,GACA,uBAAAA,EAAA,mBAGAqe,EAAAtM,UAAA8I,KAAA,SAAAA,GACA,OAAAA,GAGAwD,EAAAtM,UAAA5C,QAAA,SAAAzH,EAAA2Y,EAAAC,GACA,OAAA9f,KAAAgG,QAAA+Z,UACA,KACAF,EACA,QACA7f,KAAAgG,QAAAga,aACAF,EAAA1G,cAAAzgB,QAAA,eACA,KACAuO,EACA,MACA2Y,EACA,MAGA,KAAAA,EAAA,IAAA3Y,EAAA,MAAA2Y,EAAA,OAGAhC,EAAAtM,UAAAxX,GAAA,WACA,OAAAiG,KAAAgG,QAAAia,MAAA,oBAGApC,EAAAtM,UAAA6I,KAAA,SAAAnS,EAAAyU,EAAApS,GACA,IAAA1M,EAAA8e,EAAA,UACAwD,EAAAxD,GAAA,IAAApS,EAAA,WAAAA,EAAA,OACA,UAAA1M,EAAAsiB,EAAA,MAAAjY,EAAA,KAAArK,EAAA,OAGAigB,EAAAtM,UAAA4O,SAAA,SAAAjZ,GACA,aAAAA,EAAA,WAGA2W,EAAAtM,UAAA6O,SAAA,SAAArD,GACA,iBACAA,EAAA,kBACA,+BACA/c,KAAAgG,QAAAia,MAAA,SACA,MAGApC,EAAAtM,UAAAiJ,UAAA,SAAAtT,GACA,YAAAA,EAAA,UAGA2W,EAAAtM,UAAAvU,MAAA,SAAAP,EAAAwL,GAGA,OAFAA,MAAA,UAAAA,EAAA,YAEA,qBAEAxL,EACA,aACAwL,EACA,cAGA4V,EAAAtM,UAAA8O,SAAA,SAAAC,GACA,eAAAA,EAAA,WAGAzC,EAAAtM,UAAAgP,UAAA,SAAAD,EAAAE,GACA,IAAA5iB,EAAA4iB,EAAA/jB,OAAA,UACAwf,EAAAuE,EAAAhE,MACA,IAAA5e,EAAA,WAAA4iB,EAAAhE,MAAA,KACA,IAAA5e,EAAA,IACA,OAAAqe,EAAAqE,EAAA,KAAA1iB,EAAA,OAIAigB,EAAAtM,UAAAiM,OAAA,SAAAtW,GACA,iBAAAA,EAAA,aAGA2W,EAAAtM,UAAAkM,GAAA,SAAAvW,GACA,aAAAA,EAAA,SAGA2W,EAAAtM,UAAAgO,SAAA,SAAArY,GACA,eAAAA,EAAA,WAGA2W,EAAAtM,UAAA7X,GAAA,WACA,OAAAsG,KAAAgG,QAAAia,MAAA,gBAGApC,EAAAtM,UAAAmM,IAAA,SAAAxW,GACA,cAAAA,EAAA,UAGA2W,EAAAtM,UAAApX,KAAA,SAAA4V,EAAA3J,EAAAc,GACA,GAAAlH,KAAAgG,QAAAgX,SAAA,CACA,IACA,IAAAyD,EAAAC,mBAAAzC,EAAAlO,IACApX,QAAA,cACAygB,cACK,MAAA9H,GACL,OAAApK,EAEA,OAAAuZ,EAAA1X,QAAA,oBAAA0X,EAAA1X,QAAA,kBAAA0X,EAAA1X,QAAA,SACA,OAAA7B,EAGAlH,KAAAgG,QAAA2a,UAAAC,EAAAxhB,KAAA2Q,KACAA,EAAAyO,EAAAxe,KAAAgG,QAAA2a,QAAA5Q,IAEA,IACAA,EAAA8Q,UAAA9Q,GAAApX,QAAA,YACG,MAAA2Y,GACH,OAAApK,EAEA,IAAA+X,EAAA,YAAA7B,EAAArN,GAAA,IAKA,OAJA3J,IACA6Y,GAAA,WAAA7Y,EAAA,KAEA6Y,GAAA,IAAA/X,EAAA,OACA+X,GAGApB,EAAAtM,UAAA3J,MAAA,SAAAmI,EAAA3J,EAAAc,GACAlH,KAAAgG,QAAA2a,UAAAC,EAAAxhB,KAAA2Q,KACAA,EAAAyO,EAAAxe,KAAAgG,QAAA2a,QAAA5Q,IAEA,IAAAkP,EAAA,aAAAlP,EAAA,UAAA7I,EAAA,IAKA,OAJAd,IACA6Y,GAAA,WAAA7Y,EAAA,KAEA6Y,GAAAjf,KAAAgG,QAAAia,MAAA,SACAhB,GAGApB,EAAAtM,UAAArK,KAAA,SAAAA,GACA,OAAAA,GAYA4W,EAAAvM,UAAAiM,OACAM,EAAAvM,UAAAkM,GACAK,EAAAvM,UAAAgO,SACAzB,EAAAvM,UAAAmM,IACAI,EAAAvM,UAAArK,KAAA,SAAAA,GACA,OAAAA,GAGA4W,EAAAvM,UAAApX,KACA2jB,EAAAvM,UAAA3J,MAAA,SAAAmI,EAAA3J,EAAAc,GACA,SAAAA,GAGA4W,EAAAvM,UAAA7X,GAAA,WACA,UAoBAqkB,EAAA+C,MAAA,SAAApF,EAAA1V,GACA,IAAA1H,EAAA,IAAAyf,EAAA/X,GACA,OAAA1H,EAAAwiB,MAAApF,IAOAqC,EAAAxM,UAAAuP,MAAA,SAAApF,GACA1b,KAAAmd,OAAA,IAAAQ,EAAAjC,EAAAf,MAAA3a,KAAAgG,SAEAhG,KAAA+gB,WAAA,IAAApD,EACAjC,EAAAf,MACAa,KAAYxb,KAAAgG,SAAiB4X,SAAA,IAAAE,KAE7B9d,KAAA0a,OAAAgB,EAAAsF,UAEA,IAAA/B,EAAA,GACA,MAAAjf,KAAAtB,OACAugB,GAAAjf,KAAAoK,MAGA,OAAA6U,GAOAlB,EAAAxM,UAAA7S,KAAA,WACA,OAAAsB,KAAAwB,MAAAxB,KAAA0a,OAAAuG,OAOAlD,EAAAxM,UAAAiH,KAAA,WACA,OAAAxY,KAAA0a,OAAA1a,KAAA0a,OAAA3Y,OAAA,OAOAgc,EAAAxM,UAAA2P,UAAA,WACA,IAAAjZ,EAAAjI,KAAAwB,MAAA0F,KAEA,eAAAlH,KAAAwY,OAAA5a,KACAqK,GAAA,KAAAjI,KAAAtB,OAAAwI,KAGA,OAAAlH,KAAAmd,OAAA6B,OAAA/W,IAOA8V,EAAAxM,UAAAnH,IAAA,WACA,OAAApK,KAAAwB,MAAA5D,MACA,YACA,SAEA,SACA,OAAAoC,KAAA4d,SAAA7jB,KAEA,cACA,OAAAiG,KAAA4d,SAAAjP,QACA3O,KAAAmd,OAAA6B,OAAAhf,KAAAwB,MAAA0F,MACAlH,KAAAwB,MAAA3B,MACAoe,EAAAje,KAAA+gB,WAAA/B,OAAAhf,KAAAwB,MAAA0F,QAEA,WACA,OAAAlH,KAAA4d,SAAAjW,KAAA3H,KAAAwB,MAAA0F,KACAlH,KAAAwB,MAAA8a,KACAtc,KAAAwB,MAAAme,SAEA,YACA,IAEArY,EACA6Z,EACAC,EACA/H,EALA5c,EAAA,GACAwL,EAAA,GAQA,IADAmZ,EAAA,GACA9Z,EAAA,EAAiBA,EAAAtH,KAAAwB,MAAA/E,OAAAsF,OAA8BuF,IAC/C8Z,GAAAphB,KAAA4d,SAAA2C,UACAvgB,KAAAmd,OAAA6B,OAAAhf,KAAAwB,MAAA/E,OAAA6K,KACW7K,QAAA,EAAA+f,MAAAxc,KAAAwB,MAAAgb,MAAAlV,KAKX,IAFA7K,GAAAuD,KAAA4d,SAAAyC,SAAAe,GAEA9Z,EAAA,EAAiBA,EAAAtH,KAAAwB,MAAAib,MAAA1a,OAA6BuF,IAAA,CAI9C,IAHA6Z,EAAAnhB,KAAAwB,MAAAib,MAAAnV,GAEA8Z,EAAA,GACA/H,EAAA,EAAmBA,EAAA8H,EAAApf,OAAgBsX,IACnC+H,GAAAphB,KAAA4d,SAAA2C,UACAvgB,KAAAmd,OAAA6B,OAAAmC,EAAA9H,KACa5c,QAAA,EAAA+f,MAAAxc,KAAAwB,MAAAgb,MAAAnD,KAIbpR,GAAAjI,KAAA4d,SAAAyC,SAAAe,GAEA,OAAAphB,KAAA4d,SAAA5gB,MAAAP,EAAAwL,GAEA,uBACAA,EAAA,GAEA,yBAAAjI,KAAAtB,OAAAd,KACAqK,GAAAjI,KAAAoK,MAGA,OAAApK,KAAA4d,SAAAhiB,WAAAqM,GAEA,iBACAA,EAAA,GACA,IAAAyU,EAAA1c,KAAAwB,MAAAkb,QACApS,EAAAtK,KAAAwB,MAAA8I,MAEA,mBAAAtK,KAAAtB,OAAAd,KACAqK,GAAAjI,KAAAoK,MAGA,OAAApK,KAAA4d,SAAAxD,KAAAnS,EAAAyU,EAAApS,GAEA,sBACArC,EAAA,GAEAjI,KAAAwB,MAAAsb,OACA7U,GAAAjI,KAAA4d,SAAAwC,SAAApgB,KAAAwB,MAAAub,UAGA,wBAAA/c,KAAAtB,OAAAd,KACAqK,GAAA,SAAAjI,KAAAwB,MAAA5D,KACAoC,KAAAkhB,YACAlhB,KAAAoK,MAGA,OAAApK,KAAA4d,SAAAuC,SAAAlY,GAEA,uBACAA,EAAA,GAEA,wBAAAjI,KAAAtB,OAAAd,KACAqK,GAAAjI,KAAAoK,MAGA,OAAApK,KAAA4d,SAAAuC,SAAAlY,GAEA,WAEA,OAAAjI,KAAA4d,SAAAvD,KAAAra,KAAAwB,MAAA0F,MAEA,gBACA,OAAAlH,KAAA4d,SAAApD,UAAAxa,KAAAmd,OAAA6B,OAAAhf,KAAAwB,MAAA0F,OAEA,WACA,OAAAlH,KAAA4d,SAAApD,UAAAxa,KAAAkhB,eAqEA,IAAAzC,KACAmC,EAAA,gCAEA,SAAA1G,KAGA,SAAAsB,EAAA6F,GAKA,IAJA,IACAxT,EACAxI,EAFAiC,EAAA,EAIQA,EAAA6G,UAAApM,OAAsBuF,IAE9B,IAAAjC,KADAwI,EAAAM,UAAA7G,GACAuG,EACAI,OAAAsD,UAAAnR,eAAAiD,KAAAwK,EAAAxI,KACAgc,EAAAhc,GAAAwI,EAAAxI,IAKA,OAAAgc,EAGA,SAAA9E,EAAA+E,EAAA/S,GACA,IAAAkO,EAAA6E,EAAA3oB,QAAA,qBAAAyO,MAAA,UACAE,EAAA,EAEA,GAAAmV,EAAA1a,OAAAwM,EACAkO,EAAA8E,OAAAhT,QAEA,MAAAkO,EAAA1a,OAAAwM,EAAAkO,EAAApM,KAAA,IAGA,KAAQ/I,EAAAmV,EAAA1a,OAAkBuF,IAC1BmV,EAAAnV,GAAAmV,EAAAnV,GAAA3O,QAAA,aAEA,OAAA8jB,EAOA,SAAAlZ,EAAAmY,EAAA6C,EAAAiD,GAEA,wBAAA9F,GAAA,OAAAA,EACA,UAAAwB,MAAA,kDAEA,qBAAAxB,EACA,UAAAwB,MAAA,wCACAjP,OAAAsD,UAAAxO,SAAAM,KAAAqY,GAAA,qBAGA,GAAA8F,GAAA,oBAAAjD,EAAA,CACAiD,IACAA,EAAAjD,EACAA,EAAA,MAGAA,EAAA/C,KAAkBjY,EAAAvF,SAAAugB,OAElB,IACA7D,EACA+G,EAFA3P,EAAAyM,EAAAzM,UAGAxK,EAAA,EAEA,IACAoT,EAAAD,EAAAgB,IAAAC,EAAA6C,GACK,MAAAjN,GACL,OAAAkQ,EAAAlQ,GAGAmQ,EAAA/G,EAAA3Y,OAEA,IAAA2f,EAAA,SAAAC,GACA,GAAAA,EAEA,OADApD,EAAAzM,YACA0P,EAAAG,GAGA,IAAA1C,EAEA,IACAA,EAAAlB,EAAA+C,MAAApG,EAAA6D,GACO,MAAAjN,GACPqQ,EAAArQ,EAKA,OAFAiN,EAAAzM,YAEA6P,EACAH,EAAAG,GACAH,EAAA,KAAAvC,IAGA,IAAAnN,KAAA/P,OAAA,EACA,OAAA2f,IAKA,UAFAnD,EAAAzM,WAEA2P,EAAA,OAAAC,IAEA,KAAUpa,EAAAoT,EAAA3Y,OAAmBuF,KAC7B,SAAA9F,GACA,SAAAA,EAAA5D,OACA6jB,GAAAC,IAEA5P,EAAAtQ,EAAA0F,KAAA1F,EAAA8a,KAAA,SAAAqF,EAAAha,GACA,OAAAga,EAAAD,EAAAC,GACA,MAAAha,OAAAnG,EAAA0F,OACAua,GAAAC,KAEAlgB,EAAA0F,KAAAS,EACAnG,EAAAme,SAAA,SACA8B,GAAAC,SAXA,CAaOhH,EAAApT,SAKP,IAEA,OADAiX,MAAA/C,KAA2BjY,EAAAvF,SAAAugB,IAC3BR,EAAA+C,MAAArG,EAAAgB,IAAAC,EAAA6C,MACG,MAAAjN,GAEH,GADAA,EAAAsQ,SAAA,+DACArD,GAAAhb,EAAAvF,UAAA6jB,OACA,uCACAzE,EAAA9L,EAAAsQ,QAAA,OACA,SAEA,MAAAtQ,GAhIA4I,EAAA9X,KAAA8X,EAwIA3W,EAAAyC,QACAzC,EAAAyO,WAAA,SAAAuM,GAEA,OADA/C,EAAAjY,EAAAvF,SAAAugB,GACAhb,GAGAA,EAAAue,YAAA,WACA,OACAnB,QAAA,KACAhP,QAAA,EACAoJ,KAAA,EACAgF,WAAA,EACAC,aAAA,GACAlO,UAAA,KACA8N,WAAA,YACAV,QAAA,EACApE,UAAA,EACA8C,SAAA,IAAAC,EACAb,UAAA,EACAC,UAAA,KACA4E,QAAA,EACAjF,YAAA,EACA4C,aAAA,EACAxE,QAAA,EACAiF,OAAA,IAIA1c,EAAAvF,SAAAuF,EAAAue,cAMAve,EAAAwa,SACAxa,EAAAjF,OAAAyf,EAAA+C,MAEAvd,EAAAsa,WACAta,EAAAua,eAEAva,EAAAkX,QACAlX,EAAAoY,MAAAlB,EAAAgB,IAEAlY,EAAAoa,cACApa,EAAAwe,YAAApE,EAAAqB,OAEAzb,EAAAud,MAAAvd,EAGAP,EAAAC,QAAAM,GA79CC,CAm+CAvD,MAAA,qBAAA4F,0ECv+CD3C,EAAA+e,aACA/e,EAAAgf,cACAhf,EAAAif,gBAOA,IALA,IAAAC,KACAC,KACAC,EAAA,qBAAAC,sBAAApf,MAEAyE,EAAA,mEACAL,EAAA,EAAAib,EAAA5a,EAAA5F,OAAkCuF,EAAAib,IAASjb,EAC3C6a,EAAA7a,GAAAK,EAAAL,GACA8a,EAAAza,EAAA6G,WAAAlH,MAQA,SAAAkb,EAAAC,GACA,IAAAF,EAAAE,EAAA1gB,OAEA,GAAAwgB,EAAA,IACA,UAAArF,MAAA,kDAKA,IAAAwF,EAAAD,EAAA1Z,QAAA,MACA,IAAA2Z,MAAAH,GAEA,IAAAI,EAAAD,IAAAH,EACA,EACA,EAAAG,EAAA,EAEA,OAAAA,EAAAC,GAIA,SAAAX,EAAAS,GACA,IAAAG,EAAAJ,EAAAC,GACAC,EAAAE,EAAA,GACAD,EAAAC,EAAA,GACA,UAAAF,EAAAC,GAAA,EAAAA,EAGA,SAAAE,EAAAJ,EAAAC,EAAAC,GACA,UAAAD,EAAAC,GAAA,EAAAA,EAGA,SAAAV,EAAAQ,GAeA,IAdA,IAAAK,EACAF,EAAAJ,EAAAC,GACAC,EAAAE,EAAA,GACAD,EAAAC,EAAA,GAEAxf,EAAA,IAAAif,EAAAQ,EAAAJ,EAAAC,EAAAC,IAEAI,EAAA,EAGAR,EAAAI,EAAA,EACAD,EAAA,EACAA,EAEApb,EAAA,EAAiBA,EAAAib,EAASjb,GAAA,EAC1Bwb,EACAV,EAAAK,EAAAjU,WAAAlH,KAAA,GACA8a,EAAAK,EAAAjU,WAAAlH,EAAA,QACA8a,EAAAK,EAAAjU,WAAAlH,EAAA,OACA8a,EAAAK,EAAAjU,WAAAlH,EAAA,IACAlE,EAAA2f,KAAAD,GAAA,OACA1f,EAAA2f,KAAAD,GAAA,MACA1f,EAAA2f,KAAA,IAAAD,EAmBA,OAhBA,IAAAH,IACAG,EACAV,EAAAK,EAAAjU,WAAAlH,KAAA,EACA8a,EAAAK,EAAAjU,WAAAlH,EAAA,OACAlE,EAAA2f,KAAA,IAAAD,GAGA,IAAAH,IACAG,EACAV,EAAAK,EAAAjU,WAAAlH,KAAA,GACA8a,EAAAK,EAAAjU,WAAAlH,EAAA,OACA8a,EAAAK,EAAAjU,WAAAlH,EAAA,OACAlE,EAAA2f,KAAAD,GAAA,MACA1f,EAAA2f,KAAA,IAAAD,GAGA1f,EAGA,SAAA4f,EAAAC,GACA,OAAAd,EAAAc,GAAA,OACAd,EAAAc,GAAA,OACAd,EAAAc,GAAA,MACAd,EAAA,GAAAc,GAGA,SAAAC,EAAAC,EAAA7Y,EAAAE,GAGA,IAFA,IAAAsY,EACA9D,KACA1X,EAAAgD,EAAqBhD,EAAAkD,EAASlD,GAAA,EAC9Bwb,GACAK,EAAA7b,IAAA,cACA6b,EAAA7b,EAAA,cACA,IAAA6b,EAAA7b,EAAA,IACA0X,EAAA3O,KAAA2S,EAAAF,IAEA,OAAA9D,EAAArR,KAAA,IAGA,SAAAuU,EAAAiB,GAQA,IAPA,IAAAL,EACAP,EAAAY,EAAAphB,OACAqhB,EAAAb,EAAA,EACAc,KACAC,EAAA,MAGAhc,EAAA,EAAAic,EAAAhB,EAAAa,EAA0C9b,EAAAic,EAAUjc,GAAAgc,EACpDD,EAAAhT,KAAA6S,EACAC,EAAA7b,IAAAgc,EAAAC,IAAAjc,EAAAgc,IAsBA,OAjBA,IAAAF,GACAN,EAAAK,EAAAZ,EAAA,GACAc,EAAAhT,KACA8R,EAAAW,GAAA,GACAX,EAAAW,GAAA,MACA,OAEG,IAAAM,IACHN,GAAAK,EAAAZ,EAAA,OAAAY,EAAAZ,EAAA,GACAc,EAAAhT,KACA8R,EAAAW,GAAA,IACAX,EAAAW,GAAA,MACAX,EAAAW,GAAA,MACA,MAIAO,EAAA1V,KAAA,IAnIAyU,EAAA,IAAA5T,WAAA,OACA4T,EAAA,IAAA5T,WAAA,8BChBA,SAAA5X,GAEAA,EAAAC,EAAA,UAFA,CAOC,SAAAC,GACD,aAEA,IAAA0sB,EAAA,2DACAC,EAAA,sDACAC,EAAA,UAuCA,SAAAC,EAAA3sB,EAAA6P,GACA,IAAA+c,EAAA/c,EAAAW,KAAAqc,EAAA,EAAAC,EAAA,EACAC,EAAAP,EAAAphB,KAAApL,EAAA6B,QAAA+qB,IAAAI,EAAAD,EAAA,GAEA,GACAF,GAAA,EACA,IAAAI,EAAAL,EAAAC,EACAK,EAAAltB,EAAA6B,QAAAorB,GAAAE,EAAAX,EAAAphB,KAAA8hB,GAEA,GAAAC,EAAA,CACA,IAAAC,EAAAD,EAAA,GACAE,EAAAhG,SAAA0F,EAAA,OAAAF,EAAAC,EACAQ,EAAAjG,SAAA8F,EAAA,OAAAI,EAAAD,EAEA,GAAAN,IAAAI,GAAAI,MAAAF,GAUS,CACT,GAAAN,EAAAjiB,OAAAqiB,EAAAriB,OAAA,OAGA,GAAAiiB,EAAAjiB,OAAAqiB,EAAAriB,QAAA,IAAA8hB,EAAA,OACAC,GAAA,OAdAO,IAAAC,IAAAC,EAAAD,EAAA,GACAD,EAAAC,IAAAC,EAAAF,EAAA,GACArtB,EAAAyT,aACAyZ,EAAAvrB,QAAA6qB,EAAAY,EAAAG,EAAAJ,EAAA,GAAAA,EAAA,KAEA3c,KAAAyc,EAAAxlB,GAAA,IAEA+I,KAAAyc,EAAAxlB,GAAAylB,EAAAniB,gBAUKoiB,GArELrtB,EAAA2tB,SAAAC,qCAAA,SAAA1tB,GACA,GAAAA,EAAAY,UAAA,uBAAAd,EAAAgL,KAEA,IADA,IAAA6iB,EAAA3tB,EAAA4tB,iBAAAC,KACAvd,EAAA,EAAmBA,EAAAqd,EAAA5iB,OAAmBuF,IAAA,CACtC,IAAAT,EAAA8d,EAAArd,GAAAwd,KACAC,EAAA/tB,EAAAguB,cAAAne,EAAAW,MACAyd,GAAA,IAAAF,EAAA3K,KACA8K,EAAA,IAAAH,EAAAvlB,MAEAgI,EAAAxQ,EAAA6B,QAAAgO,EAAAW,MAAA5I,EAAA4kB,EAAAphB,KAAAoF,GACA2d,EAAA,QAAA/lB,KAAAoI,EAAA+C,MAAA,EAAA1D,EAAApI,KACA,IAAAkmB,EAAArd,GAAA5O,UAAAusB,IAAAC,IAAAtmB,GAAAumB,EAEA,YADAnuB,EAAAouB,YAAA,oBAGA,GAAA3B,EAAArkB,KAAAoI,GACA,QAAApI,KAAAoI,IAAAxQ,EAAAyT,aAAA,IACAjD,KAAAX,EAAAW,KAAA/I,GAAA,IAEA+I,KAAAX,EAAAW,KAAA/I,GAAAoI,EAAApI,GAAA,IAEAomB,EAAAvd,GAAA,SACO,CACP,IAAApH,EAAAtB,EAAA,GAAAymB,EAAAzmB,EAAA,GACA0mB,IAAA5B,EAAAtkB,KAAAR,EAAA,KAAAA,EAAA,GAAAmK,QAAA,SACAsS,EAAAiK,EAAAjH,SAAAzf,EAAA,SAAAA,EAAA,GAAAA,EAAA,GAAAjG,QAAA,SACAksB,EAAAvd,GAAA,KAAApH,EAAAmb,EAAAgK,EAEAC,GAAA3B,EAAA3sB,EAAA6P,IAIA7P,EAAAuuB,kBAAAV,6BC9CA,SAAAjuB,GAEAA,EAAAC,EAAA,QAAAA,EAAA,QAAAA,EAAA,UAFA,CAOC,SAAAC,GACD,aAEA,IAAA0uB,EAAA,gnCAEA1uB,EAAA2G,WAAA,eAAAM,EAAA0nB,GACA,IAAAC,EAAA,EACA,SAAAC,EAAA1uB,GAEA,OADAA,EAAA0Q,MAAA,EACA,KAEA,IAAAie,GACAtkB,WAAA,WACA,OACAqG,MAAA,EACAke,WAAA,EACAC,UAAA,IAGAC,UAAA,SAAAC,GACA,OACAre,KAAAqe,EAAAre,KACAke,UAAAG,EAAAH,UACAC,SAAAE,EAAAF,WAGAtkB,MAAA,SAAApD,EAAAnH,GAIA,GAHAA,EAAAgvB,cAAA,KAGAhvB,EAAA4uB,UACA,OAAAznB,EAAAQ,MAAA,UACA3H,EAAA4uB,WAAA,EACA,OAEAznB,EAAA8nB,YACA,MAKA,GAHA9nB,EAAAqD,QACAxK,EAAA0Q,MAAA,GAEAvJ,EAAAqD,OAAArD,EAAAQ,MAAA,SAGA,OAFAR,EAAA8nB,YACAjvB,EAAA4uB,WAAA,EACA,KAGA,SAAAznB,EAAAoa,OAAA,CACApa,EAAAM,OACA,IAAAynB,EAAA/nB,EAAAyI,IACAzI,EAAAU,SAAA,KACA,IAAAsnB,EAAA,EAAAhoB,EAAAyI,IAAAsf,EASA,OARAlvB,EAAA0Q,KAIAye,IAAAV,IACAzuB,EAAA0Q,MAAA,IAJA+d,EAAAU,EACAnvB,EAAA0Q,MAAA,GAMA,KACO,GAAA1Q,EAAA0Q,KAEP,OADAvJ,EAAAM,OACA,KAGA,GAAAN,EAAAuD,WAEA,OADA1K,EAAA6uB,UAAA,EACA,KAEA,IAAA1nB,EAAAqD,OAAAxK,EAAA6uB,YACA7uB,EAAA6uB,UAAA,GACA,IAAAL,EAAA/S,aAAA,CACA,GAAAtU,EAAAQ,MAAA,gFAKA,OADA3H,EAAAgvB,eAAA,EACA,OACW,GAAA7nB,EAAAQ,MAAA,wDAKX,OADA3H,EAAAgvB,eAAA,EACA,OAIA,OAAA7nB,EAAAQ,MAAA4mB,IACA,MAAApnB,EAAAioB,OAAA9b,MAAAnM,EAAAkM,MAAA,EAAAlM,EAAAkM,SACA,GAAAlM,EAAAkM,OAAA,KAAAlL,KAAAhB,EAAAioB,OAAAxJ,OAAAze,EAAAkM,MAAA,MAKArT,EAAAgvB,eAAA,EACA,SAEA7nB,EAAAM,OACA,OAEAinB,aAGAW,GACAC,WAAA,EACA7e,eAAA,EACA8e,OAAA,GAEA,QAAAC,KAAAhB,EACAa,EAAAG,GAAAhB,EAAAgB,GAGA,OADAH,EAAAxjB,KAAA,WACAhM,EAAA6hB,YAAA7hB,EAAA4hB,QAAA3a,EAAAuoB,GAAAV,IAEC,YAED9uB,EAAA8L,WAAA,6CC/HA,SAAA8jB,EAAAC,GAWA,IAAAvP,GAEA,WACA,aAgCAA,EAAA,SAAAwP,EAAAC,EAAAC,EAAAC,GACAA,QAEA/mB,KAAA4mB,WAAA,KAEA5mB,KAAA4a,SACA5a,KAAAgnB,mBAEAhnB,KAAAinB,iBACAjnB,KAAAknB,qBAEAlnB,KAAAmnB,oBAEAnnB,KAAAwgB,MAAAuG,EAAAvG,UAEAxgB,KAAAonB,YAEApnB,KAAAmU,QAAA,EAEA,IAEAkT,EAGA/f,EAAA+R,EAAAiO,EAAAC,EALAnV,EAAApS,KA0CA,SAAAwnB,EAAA7b,EAAA8b,GACA,IAAAC,EAAAtV,EAAAuV,UAAAhc,EAAA,KAAAob,EAAAa,WAEAb,EAAAa,UACAF,EAAAG,KAAA,SAAA5gB,GACAwgB,EAAAxgB,KAIAwgB,EAAAC,GAIA,SAAAI,EAAA7gB,GACA4f,EAAA5f,EAEA6f,GACAiB,IAIA,SAAAC,EAAA/gB,GACA6f,EAAA7f,EAEA4f,GACAkB,IAIA,SAAAA,IAMA,IALA3V,EAAAwI,MAAAxI,EAAA6V,UAAApB,GAGAzU,EAAA8U,qBAEA5f,EAAA,EAAAggB,EAAAlV,EAAA6U,cAAAllB,OAA+CuF,EAAAggB,EAAUhgB,IAAA,CACzD,IAAA4gB,EAAA9V,EAAA6U,cAAA3f,GAEA,IAAA+R,EAAA,EAAAkO,EAAAW,EAAAnmB,OAAmCsX,EAAAkO,EAAWlO,IAC9CjH,EAAA8U,kBAAAgB,EAAA7O,OAcA,IAAA/R,IARA,mBAAA8K,EAAAoO,QACApO,EAAA8U,kBAAA9U,EAAAoO,MAAA2H,oBAGA/V,EAAA4U,gBAAA5U,EAAAgW,UAAAtB,GAIA1U,EAAA8U,kBACA,IAAA9U,EAAA8U,kBAAA5f,GAAAvF,eACAqQ,EAAA8U,kBAAA5f,GAOA,IAAAA,EAAA,EAAAggB,EAAAlV,EAAA6U,cAAAllB,OAA+CuF,EAAAggB,EAAUhgB,IAAA,CACzD,IAAA+gB,EAAAjW,EAAA6U,cAAA3f,GAEAghB,EAAA,GAEA,IAAAjP,EAAA,EAAAkO,EAAAc,EAAAtmB,OAAuCsX,EAAAkO,EAAWlO,IAAA,CAClD,IAAAkP,EAAAF,EAAAhP,GAEAkP,KAAAnW,EAAA8U,kBACAoB,GAAA,IAAAlW,EAAA8U,kBAAAqB,GAAA5a,KAAA,SAGA2a,GAAAC,EAIAnW,EAAA6U,cAAA3f,GAAA,IAAAqV,OAAA2L,EAAA,KAGAlW,EAAA+B,QAAA,EAEA4S,EAAAa,WAAAb,EAAAyB,gBACAzB,EAAAyB,eAAApW,GAIA,OA3HAwU,IACAxU,EAAAwU,aAGAC,GAAAC,EACAiB,IAGA,qBAAAniB,QAAA,WAAAA,QAAA,cAAAA,OAAA6iB,QAAA,WAAA7iB,OAAA6iB,OAAAC,WAEArB,EADAN,EAAA4B,eACA5B,EAAA4B,eAGA,oBAGA9B,GAAAW,EAAAiB,OAAAC,UAAAE,OAAAvB,EAAA,IAAAT,EAAA,IAAAA,EAAA,QAAAkB,GACAhB,GAAAU,EAAAiB,OAAAC,UAAAE,OAAAvB,EAAA,IAAAT,EAAA,IAAAA,EAAA,QAAAoB,KAIAX,EADAN,EAAA4B,eACA5B,EAAA4B,eAGAjC,EAAA,gBAMAG,GAAAW,EAAAH,EAAA,IAAAT,EAAA,IAAAA,EAAA,OAAAkB,GACAhB,GAAAU,EAAAH,EAAA,IAAAT,EAAA,IAAAA,EAAA,OAAAoB,KA4FAhoB,MAGAoX,EAAA7F,WAOAsX,KAAA,SAAAxH,GACA,QAAA/Z,KAAA+Z,EACAA,EAAAjhB,eAAAkH,KACAtH,KAAAsH,GAAA+Z,EAAA/Z,IAIA,OAAAtH,MAcA2nB,UAAA,SAAAN,EAAAyB,EAAAC,GAGA,GAFAD,KAAA,OAEA,qBAAApR,eAAA,CACA,IAAAsR,EACAC,EAAA,IAAAvR,eAyBA,OAxBAuR,EAAAtR,KAAA,MAAA0P,EAAA0B,GAEAA,IACAC,EAAA,IAAAE,QAAA,SAAAC,EAAAC,GACAH,EAAArR,OAAA,WACA,MAAAqR,EAAA1Y,OACA4Y,EAAAF,EAAAlR,cAGAqR,EAAAH,EAAAI,aAIAJ,EAAAK,QAAA,WACAF,EAAAH,EAAAI,gBAKAJ,EAAAM,kBACAN,EAAAM,iBAAA,uBAAqCT,GAErCG,EAAA9Q,KAAA,MAEA4Q,EAAAC,EAAAC,EAAAlR,aAIA,IAAAyR,EAAA3yB,EAAA,IAEA,IACA,GAAA2yB,EAAAC,WAAApC,GAAA,CACA,IAAAqC,EAAAF,EAAAG,SAAAtC,GAEAuC,EAAAJ,EAAAK,SAAAxC,EAAA,KAEAyC,EAAA,IAAAnD,EAAA+C,EAAAxc,MAIA,OAFAsc,EAAAO,SAAAH,EAAAE,EAAA,EAAAA,EAAA/nB,OAAA,MAEA+nB,EAAA/mB,SAAA+lB,EAAA,EAAAgB,EAAA/nB,QAGAoO,QAAAC,IAAA,QAAAiX,EAAA,oBAEI,MAAA/V,GAEJ,OADAnB,QAAAC,IAAAkB,GACA,KAYA2W,UAAA,SAAAhhB,GACA,IAEAO,EAAAwiB,EAAAC,EAAAC,EACA5iB,EAAA+R,EAAAiO,EAAAC,EAHA3M,KAMA3T,EAAAjH,KAAAmqB,qBAAAljB,GAEA,IAAAmjB,EAAAnjB,EAAAG,MAAA,MAEA,IAAAE,EAAA,EAAAggB,EAAA8C,EAAAroB,OAAkCuF,EAAAggB,EAAUhgB,IAAA,CAC5CE,EAAA4iB,EAAA9iB,GAEA,IAAA+iB,EAAA7iB,EAAAJ,MAAA,OAEAkjB,EAAAD,EAAA,GAEA,UAAAC,GAAA,OAAAA,EAAA,CACA,IAAAC,EAAAF,EAAA,GACAG,EAAAH,EAAA,GACAJ,EAAA5L,SAAAgM,EAAA,OAEA,IAAAI,KAEA,IAAApR,EAAA/R,EAAA,EAAAigB,EAAAjgB,EAAA,EAAA2iB,EAA+C5Q,EAAAkO,EAAWlO,IAAA,CAC1D2Q,EAAAI,EAAA/Q,GAEA6Q,EAAAF,EAAA5iB,MAAA,OACA,IAAAsjB,EAAAR,EAAA,GAEAS,EAAAT,EAAA,GAAA9iB,MAAA,KAEAwjB,EAAAD,EAAA,GACA,MAAAC,MAAA,IAEA,IAAAC,EAAA7qB,KAAA8qB,eAAAH,EAAA,IAEAI,EAAAb,EAAA,GAEAc,KACAA,EAAAC,IAAAL,EAEAC,EAAA9oB,OAAA,IAAAipB,EAAAH,uBAEA,MAAAE,IAEAC,EAAApsB,MADA,QAAA0rB,EACA,IAAA3N,OAAAoO,EAAA,KAGA,IAAApO,OAAA,IAAAoO,IAIA,KAAAL,IAEAM,EAAAE,OADA,QAAAZ,EACA,IAAA3N,OAAA+N,EAAA,KAGAA,GAIAD,EAAApa,KAAA2a,GAGApQ,EAAA2P,IAAuB3sB,KAAA0sB,EAAAE,YAAA,KAAAA,EAAAC,WAEvBnjB,GAAA2iB,OAEA,oBAAAK,EAAA,CAGA,IAFAL,EAAA5L,SAAAgM,EAAA,OAEAhR,EAAA/R,EAAA,EAAAigB,EAAAjgB,EAAA,EAAA2iB,EAA+C5Q,EAAAkO,EAAWlO,IAC1D7R,EAAA4iB,EAAA/Q,GAEA6Q,EAAA1iB,EAAAJ,MAAA,OACApH,KAAAinB,cAAA5W,KAAA6Z,EAAA,IAGA5iB,GAAA2iB,MAEA,QAAAK,GACAJ,EAAA1iB,EAAAJ,MAAA,OAEA,IAAA8iB,EAAAnoB,QACA/B,KAAAmnB,iBAAA9W,MAAA6Z,EAAA,GAAAA,EAAA,MAUAlqB,KAAAwgB,MAAA8J,GAAAD,EAAA,GAIA,OAAAzP,GAUAuP,qBAAA,SAAAljB,GAiBA,OAXAA,IAAAtO,QAAA,iBAGAsO,IAAAtO,QAAA,cAAAA,QAAA,cAGAsO,IAAAtO,QAAA,UAA6B,MAG7BsO,IAAAtO,QAAA,aAAAA,QAAA,aAEAsO,GAWAmhB,UAAA,SAAAnhB,GACAA,EAAAjH,KAAAmrB,mBAAAlkB,GAEA,IAAAmjB,EAAAnjB,EAAAG,MAAA,MACA4f,KAEA,SAAAoE,EAAA3S,EAAAmC,GAEAoM,EAAA5mB,eAAAqY,KACAuO,EAAAvO,GAAA,MAGAmC,EAAA7Y,OAAA,IACA,OAAAilB,EAAAvO,KACAuO,EAAAvO,OAGAuO,EAAAvO,GAAApI,KAAAuK,IAKA,QAAAtT,EAAA,EAAAggB,EAAA8C,EAAAroB,OAAsCuF,EAAAggB,EAAUhgB,IAAA,CAChD,IAAAE,EAAA4iB,EAAA9iB,GAEA+b,EAAA7b,EAAAJ,MAAA,OAEAqR,EAAA4K,EAAA,GAGA,GAAAA,EAAAthB,OAAA,GACA,IAAAspB,EAAArrB,KAAA8qB,eAAAzH,EAAA,IAGA,cAAArjB,KAAAwgB,QAAA,GAAA6K,EAAAtiB,QAAA/I,KAAAwgB,MAAA8K,YACAF,EAAA3S,EAAA4S,GAGA,QAAAhS,EAAA,EAAAkO,EAAA8D,EAAAtpB,OAAkDsX,EAAAkO,EAAWlO,IAAA,CAC7D,IAAA1R,EAAA0jB,EAAAhS,GAEA6O,EAAAloB,KAAA4a,MAAAjT,GAEA,GAAAugB,EAGA,IAFA,IAAAqD,EAAAvrB,KAAAwrB,WAAA/S,EAAAyP,GAEAuD,EAAA,EAAAC,EAAAH,EAAAxpB,OAAgD0pB,EAAAC,EAAaD,IAAA,CAC7D,IAAAE,EAAAJ,EAAAE,GAIA,GAFAL,EAAAO,MAEAzD,EAAAsC,YACA,QAAAoB,EAAAvS,EAAA,EAA2BuS,EAAArE,EAAWqE,IAAA,CACtC,IAAAC,EAAAR,EAAAO,GAEAE,EAAA9rB,KAAA4a,MAAAiR,GAEA,GAAAC,GACAA,EAAAtB,aAAAtC,EAAAtqB,MAAAkuB,EAAAluB,KAGA,IAFA,IAAAmuB,EAAA/rB,KAAAwrB,WAAAG,EAAAG,GAEAE,EAAA,EAAAC,EAAAF,EAAAhqB,OAA4DiqB,EAAAC,EAAeD,IAAA,CAC3E,IAAAE,EAAAH,EAAAC,GACAZ,EAAAc,QASAvkB,KAAA3H,KAAAknB,mBACAlnB,KAAAknB,kBAAAvf,GAAA0I,KAAAoI,SAKA2S,EAAA3S,EAAA2G,WAIA,OAAA4H,GAWAmE,mBAAA,SAAAlkB,GAOA,OAFAA,IAAAtO,QAAA,eAEAsO,GAGA6jB,eAAA,SAAAqB,GACA,IAAAA,EACA,SAEA,cAAAnsB,KAAAwgB,OACA,OAAA2L,EAAA/kB,MAAA,IAEA,YAAApH,KAAAwgB,MAAA4L,KAAA,CAGA,IAFA,IAAA5L,KAEAlZ,EAAA,EAAAggB,EAAA6E,EAAApqB,OAA2CuF,EAAAggB,EAAUhgB,GAAA,EACrDkZ,EAAAnQ,KAAA8b,EAAA1mB,OAAA6B,EAAA,IAGA,OAAAkZ,EAEA,cAAAxgB,KAAAwgB,MAAA4L,KACAD,EAAA/kB,MAAA,UADA,GAaAokB,WAAA,SAAA/S,EAAAyP,GAIA,IAHA,IAAAuC,EAAAvC,EAAAuC,QACAc,KAEAjkB,EAAA,EAAAggB,EAAAmD,EAAA1oB,OAAwCuF,EAAAggB,EAAUhgB,IAAA,CAClD,IAAA0jB,EAAAP,EAAAnjB,GAEA,IAAA0jB,EAAApsB,OAAA6Z,EAAA7Z,MAAAosB,EAAApsB,OAAA,CACA,IAAA+sB,EAAAlT,EAeA,GAbAuS,EAAAE,SACAS,IAAAhzB,QAAAqyB,EAAAE,OAAA,KAGA,QAAAhD,EAAAtqB,KACA+tB,GAAAX,EAAAC,IAGAU,EAAAX,EAAAC,IAAAU,EAGAJ,EAAAlb,KAAAsb,GAEA,wBAAAX,EACA,QAAA3R,EAAA,EAAAkO,EAAAyD,EAAAH,oBAAA9oB,OAA8DsX,EAAAkO,EAAWlO,IAAA,CACzE,IAAAgT,EAAArsB,KAAA4a,MAAAoQ,EAAAH,oBAAAxR,IAEAgT,IACAd,IAAAxd,OAAA/N,KAAAwrB,WAAAG,EAAAU,OAcA,OAAAd,GAcAhmB,MAAA,SAAA+mB,GACA,IAAAtsB,KAAAmU,OACA,8BAIA,IAAAoY,EAAAD,EAAA3zB,QAAA,aAAAA,QAAA,aAEA,GAAAqH,KAAAwsB,WAAAD,GACA,SAIA,GAAAA,EAAAE,gBAAAF,EAAA,CAGA,IAAAG,EAAAH,EAAA,GAAAA,EAAA5S,UAAA,GAAAP,cAEA,GAAApZ,KAAA2sB,QAAAD,EAAA,YAEA,SAGA,GAAA1sB,KAAAwsB,WAAAE,GACA,SAIA,IAAAE,EAAAL,EAAAnT,cAEA,GAAAwT,IAAAL,EAAA,CACA,GAAAvsB,KAAA2sB,QAAAC,EAAA,YAEA,SAIA,GAAA5sB,KAAAwsB,WAAAI,GACA,SAIA,UAUAJ,WAAA,SAAA/T,GACA,IAAAzY,KAAAmU,OACA,8BAGA,IAEA7M,EAAAggB,EAFAuF,EAAA7sB,KAAAgnB,gBAAAvO,GAIA,wBAAAoU,GAEA,mBAAA7sB,KAAAwgB,OAAA/H,EAAA1W,QAAA/B,KAAAwgB,MAAAsM,YACA,IAAAxlB,EAAA,EAAAggB,EAAAtnB,KAAAinB,cAAAllB,OAAiDuF,EAAAggB,EAAUhgB,IAC3D,GAAAmR,EAAA7Z,MAAAoB,KAAAinB,cAAA3f,IACA,aAKA,WAAAulB,EAGA,SAEA,qBAAAA,EACA,IAAAvlB,EAAA,EAAAggB,EAAAuF,EAAA9qB,OAAuCuF,EAAAggB,EAAUhgB,IACjD,IAAAtH,KAAA2sB,QAAAlU,EAAA,iBAAAoU,EAAAvlB,IACA,SAKA,UAWAqlB,QAAA,SAAAlU,EAAAsU,EAAAC,GACA,IAAAhtB,KAAAmU,OACA,8BAGA,SAAA4Y,KAAA/sB,KAAAwgB,QACA,qBAAAwM,IACAA,EAAA9pB,MAAAqO,UAAAxD,OAAAwJ,SAAAvX,KAAAgnB,gBAAAvO,KAGAuU,IAAA,IAAAA,EAAAjkB,QAAA/I,KAAAwgB,MAAAuM,OAmBAE,SAAA,GAEAC,QAAA,SAAAzU,EAAA0U,GACA,IAAAntB,KAAAmU,OACA,8BAKA,GAFAgZ,KAAA,EAEAntB,KAAAonB,SAAAhnB,eAAAqY,GAAA,CACA,IAAA2U,EAAAptB,KAAAonB,SAAA3O,GAAA,SAIA,GAAA0U,GAAAC,GAAAptB,KAAAonB,SAAA3O,GAAA,eAAA1W,OAAAqrB,EACA,OAAAptB,KAAAonB,SAAA3O,GAAA,eAAAlO,MAAA,EAAA4iB,GAIA,GAAAntB,KAAAuF,MAAAkT,GAAA,SAGA,QAAAnR,EAAA,EAAAggB,EAAAtnB,KAAAmnB,iBAAAplB,OAAsDuF,EAAAggB,EAAUhgB,IAAA,CAChE,IAAA+lB,EAAArtB,KAAAmnB,iBAAA7f,GAEA,QAAAmR,EAAA1P,QAAAskB,EAAA,KACA,IAAAC,EAAA7U,EAAA9f,QAAA00B,EAAA,GAAAA,EAAA,IAEA,GAAArtB,KAAAuF,MAAA+nB,GACA,OAAAA,IAKA,IAAAlb,EAAApS,KAwBA,SAAAutB,EAAAC,GACA,IAEA/B,EAAAnkB,EAAA+R,EAAAqS,EAAApE,EAAAC,EAFAkG,KAIA,IAAAhC,EAAA,EAAAC,EAAA8B,EAAAzrB,OAAsC0pB,EAAAC,EAAaD,IAAA,CACnD,IAAAhT,EAAA+U,EAAA/B,GAEA,IAAAnkB,EAAA,EAAAggB,EAAA7O,EAAA1W,OAAA,EAAuCuF,EAAAggB,EAAUhgB,IAAA,CACjD,IAAA0e,GAAAvN,EAAAkB,UAAA,EAAArS,GAAAmR,EAAAkB,UAAArS,IAWA,GATA0e,EAAA,IACAyH,EAAApd,KAAA2V,EAAA,GAAAA,EAAA,GAAArM,UAAA,IAIAqM,EAAA,GAAAjkB,OAAA,GAAAikB,EAAA,QAAAA,EAAA,OACAyH,EAAApd,KAAA2V,EAAA,GAAAA,EAAA,MAAAA,EAAA,MAAAA,EAAA,GAAArM,UAAA,IAGAqM,EAAA,GACA,IAAA3M,EAAA,EAAAkO,EAAAnV,EAAA6a,SAAAlrB,OAA+CsX,EAAAkO,EAAWlO,IAE1DjH,EAAA6a,SAAA5T,IAAA2M,EAAA,GAAArM,UAAA,MACA8T,EAAApd,KAAA2V,EAAA,GAAA5T,EAAA6a,SAAA5T,GAAA2M,EAAA,GAAArM,UAAA,IAKA,GAAAqM,EAAA,GACA,IAAA3M,EAAA,EAAAkO,EAAAnV,EAAA6a,SAAAlrB,OAA+CsX,EAAAkO,EAAWlO,IAC1DoU,EAAApd,KAAA2V,EAAA,GAAA5T,EAAA6a,SAAA5T,GAAA2M,EAAA,KAMA,OAAAyH,EAGA,SAAAC,EAAAF,GAGA,IAFA,IAAAC,KAEAnmB,EAAA,EAAAggB,EAAAkG,EAAAzrB,OAAuCuF,EAAAggB,EAAUhgB,IACjD8K,EAAA7M,MAAAioB,EAAAlmB,KACAmmB,EAAApd,KAAAmd,EAAAlmB,IAIA,OAAAmmB,EAGA,SAAAE,EAAAlV,GAEA,IAKAnR,EAAAggB,EALAsG,EAAAL,GAAA9U,IACAoV,EAAAN,EAAAK,GAEAE,EAAAJ,EAAAE,EAAA7f,OAAA8f,IAKAE,KAEA,IAAAzmB,EAAA,EAAAggB,EAAAwG,EAAA/rB,OAAyCuF,EAAAggB,EAAUhgB,IACnDwmB,EAAAxmB,KAAAymB,EAIAA,EAAAD,EAAAxmB,KAAA,EAHAymB,EAAAD,EAAAxmB,IAAA,EAOA,IAAA0mB,KAEA,IAAA1mB,KAAAymB,EACAA,EAAA3tB,eAAAkH,IACA0mB,EAAA3d,MAAA/I,EAAAymB,EAAAzmB,KAIA,SAAA2mB,EAAAzoB,EAAAuW,GACA,OAAAvW,EAAA,GAAAuW,EAAA,IACA,EAGA,EAGAiS,EAAAE,KAAAD,GAAAjN,UAEA,IAAAyM,KAEAU,EAAA,YASA,IAPA1V,EAAAgU,gBAAAhU,EACA0V,EAAA,YAEA1V,EAAAhT,OAAA,KAAAgnB,cAAAhU,EAAAhT,OAAA,GAAA2T,gBAAAX,IACA0V,EAAA,eAGA7mB,EAAA,EAAAggB,EAAA7H,KAAA2O,IAAAjB,EAAAa,EAAAjsB,QAAiEuF,EAAAggB,EAAUhgB,IAC3E,cAAA6mB,EACAH,EAAA1mB,GAAA,GAAA0mB,EAAA1mB,GAAA,GAAAmlB,cAEA,gBAAA0B,IACAH,EAAA1mB,GAAA,GAAA0mB,EAAA1mB,GAAA,GAAA7B,OAAA,KAAAgnB,cAAAuB,EAAA1mB,GAAA,GAAA7B,OAAA,IAGA2M,EAAAua,QAAAqB,EAAA1mB,GAAA,iBACAmmB,EAAApd,KAAA2d,EAAA1mB,GAAA,IAIA,OAAAmmB,EAQA,OAlJArb,EAAA6a,SAAA,6BA6IAjtB,KAAAonB,SAAA3O,IACA4V,YAAAV,EAAAlV,GACA0U,SAGAntB,KAAAonB,SAAA3O,GAAA,kBA74BA,GAo5BAzV,EAAAC,QAAAmU,2DC95BA,SAAAxgB,GAEAA,EAAAC,EAAA,UAFA,CAOC,SAAAC,GACD,aASA,SAAAw3B,EAAAt3B,GACA,IAAAmR,EAAAnR,EAAAyB,oBACAzB,EAAAC,MAAAs3B,mBAAkC5Y,UAAA/P,OAAA4oB,YAAAC,WAAA7oB,OAAA8oB,YAClCC,MAAAxmB,EAAA1Q,MAAAk3B,MAAAxZ,OAAAhN,EAAA1Q,MAAA0d,QACAhN,EAAA1Q,MAAAk3B,MAAA,GACAxmB,EAAA1Q,MAAA0d,OAAA,OACAhN,EAAAtQ,WAAA,yBACAN,SAAAq3B,gBAAAn3B,MAAAyQ,SAAA,SACAlR,EAAA2V,UAGA,SAAAkiB,EAAA73B,GACA,IAAAmR,EAAAnR,EAAAyB,oBACA0P,EAAAtQ,UAAAsQ,EAAAtQ,UAAAc,QAAA,iCACApB,SAAAq3B,gBAAAn3B,MAAAyQ,SAAA,GACA,IAAAgR,EAAAliB,EAAAC,MAAAs3B,kBACApmB,EAAA1Q,MAAAk3B,MAAAzV,EAAAyV,MAAkCxmB,EAAA1Q,MAAA0d,OAAA+D,EAAA/D,OAClCvP,OAAAiQ,SAAAqD,EAAAuV,WAAAvV,EAAAvD,WACA3e,EAAA2V,UAzBA7V,EAAAgC,aAAA,yBAAA9B,EAAA+B,EAAAC,GACAA,GAAAlC,EAAAoC,OAAAF,GAAA,IACAA,IAAAD,IACAA,EAAAu1B,EAAAt3B,GACA63B,EAAA73B,8BCjBAiM,EAAA6rB,KAAA,SAAAhF,EAAAiF,EAAAC,EAAAC,EAAAC,GACA,IAAA5d,EAAAhD,EACA6gB,EAAA,EAAAD,EAAAD,EAAA,EACAG,GAAA,GAAAD,GAAA,EACAE,EAAAD,GAAA,EACAE,GAAA,EACAhoB,EAAA0nB,EAAAE,EAAA,IACA3a,EAAAya,GAAA,IACAhJ,EAAA8D,EAAAiF,EAAAznB,GAOA,IALAA,GAAAiN,EAEAjD,EAAA0U,GAAA,IAAAsJ,GAAA,EACAtJ,KAAAsJ,EACAA,GAAAH,EACQG,EAAA,EAAWhe,EAAA,IAAAA,EAAAwY,EAAAiF,EAAAznB,MAAAiN,EAAA+a,GAAA,GAKnB,IAHAhhB,EAAAgD,GAAA,IAAAge,GAAA,EACAhe,KAAAge,EACAA,GAAAL,EACQK,EAAA,EAAWhhB,EAAA,IAAAA,EAAAwb,EAAAiF,EAAAznB,MAAAiN,EAAA+a,GAAA,GAEnB,OAAAhe,EACAA,EAAA,EAAA+d,MACG,IAAA/d,IAAA8d,EACH,OAAA9gB,EAAAihB,IAAAC,KAAAxJ,GAAA,KAEA1X,GAAAmR,KAAAgQ,IAAA,EAAAR,GACA3d,GAAA+d,EAEA,OAAArJ,GAAA,KAAA1X,EAAAmR,KAAAgQ,IAAA,EAAAne,EAAA2d,IAGAhsB,EAAAysB,MAAA,SAAA5F,EAAApd,EAAAqiB,EAAAC,EAAAC,EAAAC,GACA,IAAA5d,EAAAhD,EAAAqhB,EACAR,EAAA,EAAAD,EAAAD,EAAA,EACAG,GAAA,GAAAD,GAAA,EACAE,EAAAD,GAAA,EACAn0B,EAAA,KAAAg0B,EAAAxP,KAAAgQ,IAAA,OAAAhQ,KAAAgQ,IAAA,SACAnoB,EAAA0nB,EAAA,EAAAE,EAAA,EACA3a,EAAAya,EAAA,KACAhJ,EAAAtZ,EAAA,OAAAA,GAAA,EAAAA,EAAA,MAmCA,IAjCAA,EAAA+S,KAAAmQ,IAAAljB,GAEA8X,MAAA9X,QAAA8iB,KACAlhB,EAAAkW,MAAA9X,GAAA,IACA4E,EAAA8d,IAEA9d,EAAAmO,KAAAoQ,MAAApQ,KAAArP,IAAA1D,GAAA+S,KAAAqQ,KACApjB,GAAAijB,EAAAlQ,KAAAgQ,IAAA,GAAAne,IAAA,IACAA,IACAqe,GAAA,GAGAjjB,GADA4E,EAAA+d,GAAA,EACAp0B,EAAA00B,EAEA10B,EAAAwkB,KAAAgQ,IAAA,IAAAJ,GAEA3iB,EAAAijB,GAAA,IACAre,IACAqe,GAAA,GAGAre,EAAA+d,GAAAD,GACA9gB,EAAA,EACAgD,EAAA8d,GACK9d,EAAA+d,GAAA,GACL/gB,GAAA5B,EAAAijB,EAAA,GAAAlQ,KAAAgQ,IAAA,EAAAR,GACA3d,GAAA+d,IAEA/gB,EAAA5B,EAAA+S,KAAAgQ,IAAA,EAAAJ,EAAA,GAAA5P,KAAAgQ,IAAA,EAAAR,GACA3d,EAAA,IAIQ2d,GAAA,EAAWnF,EAAAiF,EAAAznB,GAAA,IAAAgH,EAAAhH,GAAAiN,EAAAjG,GAAA,IAAA2gB,GAAA,GAInB,IAFA3d,KAAA2d,EAAA3gB,EACA6gB,GAAAF,EACQE,EAAA,EAAUrF,EAAAiF,EAAAznB,GAAA,IAAAgK,EAAAhK,GAAAiN,EAAAjD,GAAA,IAAA6d,GAAA,GAElBrF,EAAAiF,EAAAznB,EAAAiN,IAAA,IAAAyR,0BC/EA,SAAApvB,GAEAA,EAAAC,EAAA,QAAAA,EAAA,QAAAA,EAAA,UAFA,CAOC,SAAAC,GACD,aAEAA,EAAA2G,WAAA,oBAAAsyB,EAAAC,GAEA,IAAA/xB,EAAAnH,EAAA4hB,QAAAqX,EAAA,aACAE,EAAA,QAAAhyB,EAAA6E,KAEA,SAAA4V,EAAA5V,GACA,GAAAhM,EAAA8iB,eAAA,CACA,IAAAsW,EAAAp5B,EAAA8iB,eAAA9W,GACAotB,IAAAptB,EAAAotB,EAAArX,MAAAqX,EAAAnX,MAAA,IAEA,IAAA7G,EAAApb,EAAA4hB,QAAAqX,EAAAjtB,GACA,cAAAoP,EAAApP,KAAA,KAAAoP,OAKA/L,IAAA6pB,EAAArf,sBACAqf,EAAArf,qBAAA,QAIAxK,IAAA6pB,EAAAG,qBACAH,EAAAG,mBAAA,QAGAhqB,IAAA6pB,EAAAzJ,YAAAyJ,EAAAzJ,WAAA,QAGApgB,IAAA6pB,EAAAtoB,gBACAsoB,EAAAtoB,eAAA,QAEAvB,IAAA6pB,EAAAxJ,QACAwJ,EAAAxJ,OAAA,QAEArgB,IAAA6pB,EAAAI,8BACAJ,EAAAI,6BAAA,QAEAjqB,IAAA6pB,EAAAK,MACAL,EAAAK,KAAA,QAGAlqB,IAAA6pB,EAAAM,qBACAN,EAAAM,uBAEA,IAAAC,GACA9zB,OAAA,SACAkL,KAAA,UACAnI,MAAA,QACAgxB,MAAA,aACAC,MAAA,aACAC,MAAA,UACA32B,GAAA,KACA6N,MAAA,QACA+oB,aAAA,iBACAC,YAAA,eACAC,WAAA,aACAC,WAAA,OACAC,UAAA,OACAC,SAAA,OACAC,SAAA,SACAxT,GAAA,KACAD,OAAA,SACA9V,cAAA,gBACA8e,MAAA,WAGA,QAAA0K,KAAAX,EACAA,EAAAnwB,eAAA8wB,IAAAlB,EAAAM,mBAAAY,KACAX,EAAAW,GAAAlB,EAAAM,mBAAAY,IAIA,IAAAC,EAAA,6BACA3N,EAAA,+BACA4N,EAAA,oBACAC,EAAArB,EAAAsB,2BAAA,uBACAC,EAAA,0BACAC,EAAA,2BACAC,EAAA,uCACAC,EAAA,sBACAC,EAAA,8CACAC,EAAA,OAEA,SAAAC,EAAAzzB,EAAAnH,EAAAmO,GAEA,OADAnO,EAAAmO,EAAAnO,EAAAkmB,OAAA/X,EACAA,EAAAhH,EAAAnH,GAGA,SAAA66B,EAAA1zB,EAAAnH,EAAAmO,GAEA,OADAnO,EAAAmO,EAAAnO,EAAA8iB,MAAA3U,EACAA,EAAAhH,EAAAnH,GAGA,SAAA86B,EAAAvqB,GACA,OAAAA,IAAA,KAAApI,KAAAoI,EAAA6e,QAKA,SAAAV,EAAA1uB,GAyBA,OAvBAA,EAAA+6B,WAAA,EACA/6B,EAAAg6B,UAAA,EACAh6B,EAAA+5B,UAAA,EAEA/5B,EAAAwmB,IAAA,EAEAxmB,EAAAumB,QAAA,EAEAvmB,EAAAyQ,eAAA,EAEAzQ,EAAAuI,MAAA,EAEAvI,EAAAqS,cAAA,EACArS,EAAAmO,GAAA6sB,IACAh7B,EAAAmO,EAAA8sB,EACAj7B,EAAA8iB,MAAAoY,GAGAl7B,EAAAm7B,cAAA,EACAn7B,EAAAo7B,sBAAA,EAEAp7B,EAAAq7B,SAAAr7B,EAAAs7B,SACAt7B,EAAAs7B,UAAsBn0B,OAAA,MACtB,KAGA,SAAA+zB,EAAA/zB,EAAAnH,GACA,IAAAu7B,EAAAp0B,EAAAmB,WAAAtI,EAAAyK,YACA+wB,EAAAV,EAAA96B,EAAAq7B,SAAAl0B,QACAs0B,EAAAz7B,EAAAqS,aACAqpB,EAAA17B,EAAAq7B,SAAAv4B,GACA64B,GAAA,IAAA37B,EAAAmjB,KACAyY,GAAA57B,EAAA67B,UAAA77B,EAAA67B,UAAA/wB,OAAA,SAEA9K,EAAAqS,cAAA,EAEA,IAAAypB,EAAA97B,EAAAyK,YAEA,UAAAzK,EAAA+7B,kBACA/7B,EAAA+7B,gBAAA/7B,EAAAyK,YACAkxB,GAAA,CAEA37B,EAAAwmB,IAAA,EACAxmB,EAAAumB,QAAA,EACAvmB,EAAA0Q,MAAA,EACA1Q,EAAAyQ,eAAA,EAEAzQ,EAAAmjB,KAAA,KAIA,MAAA2Y,EAAA97B,EAAA67B,UAAA77B,EAAA67B,UAAA/wB,OAAA,GACA9K,EAAA67B,UAAA7R,MACAhqB,EAAA67B,UAAA/wB,OACA9K,EAAAyK,YAAAzK,EAAA67B,UAAA77B,EAAA67B,UAAA/wB,OAAA,GAGA9K,EAAAmjB,MAAA,GAGA,IAAAnjB,EAAAmjB,OACAnjB,EAAA+7B,gBAAAD,EAAA97B,EAAA67B,UAAA77B,EAAA67B,UAAA/wB,OAAA,IAMA,IAAAkxB,GACAR,IAAAE,IAAA17B,EAAAq7B,SAAA71B,UACAm2B,IAAAF,KACAz7B,EAAAq7B,SAAAY,cAGAC,IAAA,IAAAl8B,EAAAmjB,MAAAuY,GAAAF,IACAx7B,EAAAyK,aAAAmxB,GAAAz0B,EAAAQ,MAAAuyB,GAEAvyB,EAAA,KACA,GAAA3H,EAAA+7B,iBAAA,IAAAN,GAAAz7B,EAAAq7B,SAAAY,eACAj8B,EAAAq7B,SAAA71B,QAAAg2B,GAGA,OAFAr0B,EAAA8nB,YACAjvB,EAAAqS,cAAA,EACAinB,EAAA5oB,KACK,GAAAvJ,EAAAuD,WACL,YACK,GAAA6wB,GAAAv7B,EAAAyK,aAAAmxB,IAAAj0B,EAAAR,EAAAQ,MAAAyyB,KAAAzyB,EAAA,GAAAmD,QAAA,EAML,OALA9K,EAAAuI,MAAA,EACAvI,EAAAwF,OAAAmC,EAAA,GAAAmD,OACA9K,EAAAs7B,SAAA91B,QAAA,EACAuzB,EAAArf,sBAAA1Z,EAAA45B,WAAA,UACA55B,EAAAmO,EAAAnO,EAAAkmB,OACAiW,EAAAn8B,GACK,GAAAA,EAAAyK,aAAAmxB,GAAAz0B,EAAAO,IAAA,KAIL,OAHA1H,EAAAuI,MAAAgzB,EAAA,EAAAv7B,EAAAuI,MAAA,EACAwwB,EAAArf,sBAAA1Z,EAAA45B,WAAA,SACAzyB,EAAAuD,WACAyxB,EAAAn8B,GACK,IAAAk8B,IAAAl8B,EAAAo8B,QAAAb,GAAAv7B,EAAAyK,aAAAmxB,IAAAj0B,EAAAR,EAAAQ,MAAA4kB,IAAA,CACL,IAAA8P,EAAA10B,EAAA,aAcA,OAZA3H,EAAAyK,YAAAqxB,EAAA30B,EAAAwC,UAAAmB,OACA9K,EAAAmjB,MAAA,EACAnjB,EAAAuI,MAAA,EAGAvI,EAAA67B,UAAAziB,KAAApZ,EAAAyK,aAEAsuB,EAAAzJ,WAAAnoB,EAAAQ,MAAAwyB,GAAA,KACAn6B,EAAAs8B,UAAA,GAEAt8B,EAAAmO,EAAAnO,EAAAkmB,OACA6S,EAAArf,sBAAA1Z,EAAA45B,YAAA,eAAAyC,IACAF,EAAAn8B,GACK,OAAAu7B,GAAAv7B,EAAAyK,aAAAmxB,IAAAj0B,EAAAR,EAAAQ,MAAA6yB,GAAA,KACLx6B,EAAAuI,MAAA,EACAvI,EAAAu8B,YAAA,IAAA7W,OAAA/d,EAAA,WAEA3H,EAAAw8B,UAAAzD,EAAAI,6BAAA1X,EAAA9Z,EAAA,IACA3H,EAAAw8B,YAAAx8B,EAAAy8B,WAAA58B,EAAAwK,WAAArK,EAAAw8B,YACAx8B,EAAAmO,EAAAnO,EAAA8iB,MAAA4Z,EACA3D,EAAArf,sBAAA1Z,EAAA45B,WAAA,cACA55B,EAAA0Q,MAAA,EACAyrB,EAAAn8B,IAKAA,EAAAo8B,UAEAJ,GAAAL,GAAA37B,EAAAuI,QAAA,IAAAvI,EAAAmjB,MACAnjB,EAAA0Q,MAAAwrB,GAAAzB,EAAAtyB,KAAAhB,EAAAioB,WACAznB,EAAAR,EAAAylB,UAAA,MAAAjlB,UAAA2yB,KAGAt6B,EAAAo8B,QAIAp8B,EAAAwF,OAAAxF,EAAAo8B,OAEAp8B,EAAAo8B,OAAA,EACAj1B,EAAA8nB,YACA8J,EAAArf,sBAAA1Z,EAAA45B,WAAA,YAPA55B,EAAAwF,OAAA,KAAAmC,EAAA,GAAAie,OAAA,OACA5lB,EAAAo8B,OAAAp8B,EAAAwF,QAQAxF,EAAAs7B,SAAA91B,QAAA,EACAxF,EAAAmO,EAAAnO,EAAAkmB,OACAiW,EAAAn8B,IACKk8B,GACL/0B,EAAA8nB,YACAjvB,EAAA8C,IAAA,EACA9C,EAAAs7B,SAAAx4B,IAAA,EACAw2B,EAAAx2B,IACK,MAAAqE,EAAAoa,OACLqZ,EAAAzzB,EAAAnH,EAAA28B,GAGA/B,EAAAzzB,EAAAnH,IAAAkmB,QAGA,SAAA8U,EAAA7zB,EAAAnH,GACA,IAAAQ,EAAAwG,EAAAuD,MAAApD,EAAAnH,EAAA48B,WACA,IAAA5D,EAAA,CACA,IAAA6D,EAAAh9B,EAAAi9B,UAAA91B,EAAAhH,EAAA48B,YACA,OAAAC,EAAA5hB,KAAApP,MAAA,OAAAgxB,EAAA78B,MAAAkI,WACA20B,EAAA78B,MAAAgJ,SAAA6zB,EAAA78B,MAAAsH,SAAA8C,UACApK,EAAA+8B,WAAA51B,EAAAwC,UAAAmI,QAAA,WACA9R,EAAAmO,EAAA8sB,EACAj7B,EAAA8iB,MAAAoY,EACAl7B,EAAA48B,UAAA,MAGA,OAAAp8B,EAGA,SAAAk8B,EAAAv1B,EAAAnH,GACA,IAKAg9B,EALAC,EAAAj9B,EAAA67B,UAAA77B,EAAA67B,UAAA/wB,OAAA,MACAoyB,EAAAl9B,EAAAyK,YAAAwyB,EACAE,EAAAF,EAAA,EACA,OAAAj9B,EAAAu8B,aAAAv8B,EAAAyK,aAAA0yB,IAAAD,GAAA/1B,EAAAQ,MAAA3H,EAAAu8B,eACAxD,EAAArf,sBAAA1Z,EAAA45B,WAAA,cAEAsD,IAAAF,EAAAb,EAAAn8B,IACAA,EAAAw8B,UAAAx8B,EAAAy8B,WAAA,KACAz8B,EAAA8iB,MAAAoY,EACAl7B,EAAAmO,EAAA8sB,EACAj7B,EAAAu8B,YAAA,KACAv8B,EAAA0Q,KAAA,EACA1Q,EAAAs7B,SAAAW,eAAA,EACAiB,EAAArC,EAAA1zB,EAAAnH,IAAA8iB,OACAka,GACKh9B,EAAAw8B,UACLx8B,EAAAw8B,UAAAjyB,MAAApD,EAAAnH,EAAAy8B,aAEAt1B,EAAA8nB,YACAqK,EAAA5oB,MAKA,SAAAyrB,EAAAn8B,GACA,IAAA6R,KAEA,GAAA7R,EAAA45B,WAAA,CACA/nB,EAAAuH,KAAAkgB,EAAAM,YAEA,kBAAA55B,EAAA45B,aAAA55B,EAAA45B,YAAA55B,EAAA45B,aAEA,QAAAvpB,EAAA,EAAqBA,EAAArQ,EAAA45B,WAAA9uB,OAA6BuF,IAClDwB,EAAAuH,KAAAkgB,EAAAM,WAAA,IAAA55B,EAAA45B,WAAAvpB,IAEA,WAAArQ,EAAA45B,WAAAvpB,IACAwB,EAAAuH,KAAAkgB,EAAAM,WAAA,IAAA55B,EAAA45B,WAAAvpB,GAAA,IAAArQ,EAAAwF,QAKA,UAAAxF,EAAA45B,WAAAvpB,MACA0oB,EAAAG,oBAAAH,EAAAG,oBAAAl5B,EAAAuI,MACAsJ,EAAAuH,KAAAkgB,EAAAM,WAAA,IAAA55B,EAAA45B,WAAAvpB,GAAA,IAAArQ,EAAAuI,OAEAsJ,EAAAuH,KAAA,UAMA,GAAApZ,EAAAo9B,SAEA,OADAvrB,EAAAuH,KAAA,QACAvH,EAAA/G,OAAA+G,EAAA6E,KAAA,UAEA,GAAA1W,EAAAq9B,WAEA,OADAxrB,EAAAuH,KAAA,YACAvH,EAAA/G,OAAA+G,EAAA6E,KAAA,UA8BA,GA3BA1W,EAAAg6B,SACAnoB,EAAAuH,KAAAkgB,EAAAU,SAAA,QAEAh6B,EAAAumB,QAAyB1U,EAAAuH,KAAAkgB,EAAA/S,QACzBvmB,EAAAwmB,IAAqB3U,EAAAuH,KAAAkgB,EAAA9S,IACrBxmB,EAAAyQ,eAAgCoB,EAAAuH,KAAAkgB,EAAA7oB,eAChCzQ,EAAAuvB,OAAwB1d,EAAAuH,KAAAkgB,EAAA/J,OACxBvvB,EAAA+5B,UAA2BloB,EAAAuH,KAAAkgB,EAAAS,UAC3B/5B,EAAA0Q,MAAuBmB,EAAAuH,KAAAkgB,EAAA5oB,MACvB1Q,EAAA2Q,OAAwBkB,EAAAuH,KAAAkgB,EAAA3oB,OACxB3Q,EAAA05B,cAA+B7nB,EAAAuH,KAAAkgB,EAAAI,aAAA,QAC/B15B,EAAA25B,aAA8B9nB,EAAAuH,KAAAkgB,EAAAK,cAG9B35B,EAAAwF,QAAuBqM,EAAAuH,KAAAkgB,EAAA9zB,OAAA8zB,EAAA9zB,OAAA,IAAAxF,EAAAwF,QAEvBxF,EAAAuI,QACAsJ,EAAAuH,KAAAkgB,EAAA/wB,QAGAwwB,EAAAG,oBAAAH,EAAAG,oBAAAl5B,EAAAuI,MACAsJ,EAAAuH,KAAAkgB,EAAA/wB,MAAA,IAAAvI,EAAAuI,OAEAsJ,EAAAuH,KAAAkgB,EAAA/wB,MAAA,IAAAwwB,EAAAG,sBAIA,IAAAl5B,EAAAmjB,KAAA,CACA,IAAAma,GAAAt9B,EAAA67B,UAAA/wB,OAAA,KACAwyB,EAEO,IAAAA,EACPzrB,EAAAuH,KAAAkgB,EAAAE,OAEA3nB,EAAAuH,KAAAkgB,EAAAG,OAJA5nB,EAAAuH,KAAAkgB,EAAAC,OAcA,OANAv5B,EAAAo7B,qBACAvpB,EAAAuH,KAAA,2BACKpZ,EAAAm7B,eACLtpB,EAAAuH,KAAA,mBAAApZ,EAAAm7B,cAAA,YAGAtpB,EAAA/G,OAAA+G,EAAA6E,KAAA,UAGA,SAAA6mB,EAAAp2B,EAAAnH,GACA,GAAAmH,EAAAQ,MAAA4yB,GAAA,GACA,OAAA4B,EAAAn8B,GAKA,SAAAi7B,EAAA9zB,EAAAnH,GACA,IAAAQ,EAAAR,EAAAiQ,KAAA9I,EAAAnH,GACA,wBAAAQ,EACA,OAAAA,EAEA,GAAAR,EAAAmjB,KAEA,OADAnjB,EAAAmjB,KAAA,KACAgZ,EAAAn8B,GAGA,GAAAA,EAAAs8B,SAAA,CACA,IAAAc,EAAA,MAAAj2B,EAAAQ,MAAAwyB,GAAA,MAKA,OAJAiD,EAAAp9B,EAAAo9B,UAAA,EACAp9B,EAAAq9B,YAAA,EACAtE,EAAArf,sBAAA1Z,EAAA45B,WAAA,QACA55B,EAAAs8B,UAAA,EACAH,EAAAn8B,GAMA,GAHAA,EAAAo9B,UAAA,EACAp9B,EAAAq9B,YAAA,EAEAr9B,EAAAwF,QAAA2B,EAAAQ,MAAA,WAEA,OADAoxB,EAAArf,sBAAA1Z,EAAA45B,WAAA,UACAuC,EAAAn8B,GAGA,IAAAwH,EAAAL,EAAAM,OAGA,GAAAzH,EAAA+6B,UAAA,CACA/6B,EAAA+6B,WAAA,EACA,IAAAyC,EAAAh2B,EACA,MAAAA,IACAg2B,EAAA,KAEAA,KAAA,IAAA97B,QAAA,yBAAuD,QACvD,IAAA2lB,EAAA,aAAAmW,EAAA,yBAAAA,EACA,GAAAr2B,EAAAQ,MAAA,IAAA+d,OAAA2B,IAAA,GACA,OAAAiS,EAAAU,SAKA,SAAAxyB,EAAA,CACA,IAAAi2B,EAAAz9B,EAAA45B,WACAb,EAAArf,sBAAA1Z,EAAA45B,WAAA,QACAzyB,EAAAU,SAAA,KACA,IAAAyP,EAAAnQ,EAAAwC,UAAAmB,OACA,MAAA9K,EAAA0Q,MAAA1Q,EAAAuI,OAAA,GAAA+O,EAGO,IAAAA,GAAAtX,EAAA0Q,KAAA,CACP,IAAAgtB,EAAAvB,EAAAn8B,GAEA,OADAA,EAAA0Q,KAAA,EACAgtB,EAGA,OADA19B,EAAA45B,WAAA6D,EACAtB,EAAAn8B,GAPA,OADAA,EAAA0Q,KAAA4G,EACA6kB,EAAAn8B,GASK,GAAAA,EAAA0Q,KACL,OAAAyrB,EAAAn8B,GAGA,UAAAwH,IACAL,EAAAM,OACAsxB,EAAArf,qBAAA,CACA,IAAA/S,EAAAw1B,EAAAn8B,GACA29B,EAAArE,EAAAM,WAAA,UACA,OAAAjzB,IAAA,IAAAg3B,IAIA,SAAAn2B,GAAAL,EAAAQ,MAAA,4BAIA,OAHA3H,EAAA25B,aAAA,EACA35B,EAAA2Q,OAAA,EACAooB,EAAArf,sBAAA1Z,EAAA45B,WAAA,SACAuC,EAAAn8B,GAGA,SAAAwH,GAAAxH,EAAA25B,aAAAxyB,EAAAQ,MAAA,kCAIA,OAHA3H,EAAA25B,aAAA,EACA35B,EAAA05B,cAAA,EACAX,EAAArf,sBAAA1Z,EAAA45B,WAAA,SACAuC,EAAAn8B,GAGA,SAAAwH,GAAAxH,EAAA05B,aAAA,CACAX,EAAArf,sBAAA1Z,EAAA45B,WAAA,SACAjzB,EAAAw1B,EAAAn8B,GAIA,OAHAA,EAAA05B,cAAA,EACA15B,EAAA2Q,OAAA,EACA3Q,EAAAkmB,OAAAlmB,EAAAmO,EAAA6rB,EACArzB,EAGA,SAAAa,IAAAxH,EAAA2Q,MAGA,OAFA3Q,EAAA+5B,UAAA,EACAhB,EAAArf,sBAAA1Z,EAAA45B,WAAA,QACAuC,EAAAn8B,GAGA,SAAAwH,GAAAxH,EAAA+5B,SAAA,CACAhB,EAAArf,sBAAA1Z,EAAA45B,WAAA,QACAjzB,EAAAw1B,EAAAn8B,GAGA,OAFAA,EAAA+5B,UAAA,EACA/5B,EAAAkmB,OAAAlmB,EAAAmO,EAAAhH,EAAAQ,MAAA,wBAAAqyB,EAAAiB,EACAt0B,EAGA,SAAAa,GAAAL,EAAAQ,MAAA,4CACA3H,EAAAmO,EAAAnO,EAAAkmB,OAAA2T,EACAd,EAAArf,sBAAA1Z,EAAA45B,WAAA,QACAjzB,EAAAw1B,EAAAn8B,GAMA,OALA2G,EACAA,GAAA,IAEAA,EAAA,GAEAA,EAAA2yB,EAAAO,WAGA,SAAAryB,GAAAL,EAAAQ,MAAA,kCACA3H,EAAAmO,EAAAnO,EAAAkmB,OAAA2T,EACAd,EAAArf,sBAAA1Z,EAAA45B,WAAA,QACAjzB,EAAAw1B,EAAAn8B,GAMA,OALA2G,EACAA,GAAA,IAEAA,EAAA,GAEAA,EAAA2yB,EAAAQ,UAGA,GAAAf,EAAAK,KAAA,MAAA5xB,GAAAL,EAAAQ,MAAA,uEACA,IAAA4L,EAAApM,EAAAioB,OAAAtd,QAAA,IAAA3K,EAAAyI,KACA,OAAA2D,EAAA,CACA,IAAAqqB,EAAAz2B,EAAAioB,OAAA1M,UAAAvb,EAAAkM,MAAAE,GACA,uCAAiDpL,KAAAy1B,KAAA59B,EAAA+8B,WAAA,GAIjD,OAFA51B,EAAA02B,OAAA,GACA79B,EAAA48B,UAAA/8B,EAAAwK,WAAArD,GACA6zB,EAAA1zB,EAAAnH,EAAAg7B,GAGA,GAAAjC,EAAAK,KAAA,MAAA5xB,GAAAL,EAAAQ,MAAA,YAEA,OADA3H,EAAA+8B,WAAA,EACA,MACK,SAAAv1B,GAAA,MAAAA,EAAA,CACL,IAAA8jB,EAAA,EAAA4D,EAAA,GAAA/nB,EAAAyI,IAAA,IAAAzI,EAAAioB,OAAAxJ,OAAAze,EAAAyI,IAAA,GACA,MAAA0b,EAAA,GAAAnkB,EAAAO,IAAAF,GAAA8jB,IACA,IAAA8C,EAAAjnB,EAAAoa,QAAA,IAEAuc,GAAA,KAAA31B,KAAAimB,MAAAsM,EAAAvyB,KAAAimB,IAAA,KAAAjmB,KAAA+mB,IAAAwL,EAAAvyB,KAAA+mB,IACA6O,GAAA,KAAA51B,KAAA+mB,MAAAwL,EAAAvyB,KAAA+mB,IAAA,KAAA/mB,KAAAimB,IAAAsM,EAAAvyB,KAAAimB,IACA4P,EAAA,KAAAC,EAAA,KAaA,GAZA3S,EAAA,IACAtrB,EAAAwmB,KAAAsX,GAAA,MAAAt2B,GAAAu2B,IAAArD,EAAAvyB,KAAA+mB,GAEAlvB,EAAAwmB,IAAAhf,IAAAu2B,GAAA,MAAAv2B,GAAAs2B,IAAApD,EAAAvyB,KAAAimB,KACA4P,GAAA,GAFAA,GAAA,GAIA1S,EAAA,IACAtrB,EAAAumB,SAAAuX,GAAA,MAAAt2B,GAAAu2B,IAAArD,EAAAvyB,KAAA+mB,GAEAlvB,EAAAumB,QAAA/e,IAAAu2B,GAAA,MAAAv2B,GAAAs2B,IAAApD,EAAAvyB,KAAAimB,KACA6P,GAAA,GAFAA,GAAA,GAIA,MAAAA,GAAA,MAAAD,EAAA,CACAjF,EAAArf,sBAAA1Z,EAAA45B,WAAA,MAAAoE,EAAA,eAAAC,EAAA,mBACA,IAAAD,IAAAh+B,EAAAwmB,GAAAhf,IACA,IAAAy2B,IAAAj+B,EAAAumB,OAAA/e,GACAk2B,EAAAvB,EAAAn8B,GAGA,OAFA,IAAAg+B,IAAAh+B,EAAAwmB,IAAA,IACA,IAAAyX,IAAAj+B,EAAAumB,QAAA,GACAmX,QAEK,SAAAl2B,IACLL,EAAAO,IAAA,MAAAP,EAAAO,IAAA,OACA,SAAAP,EAAAoa,OACA,OAAA4a,EAAAn8B,GAEAmH,EAAA02B,OAAA,GAKA,GAAA9E,EAAAtoB,cACA,SAAAjJ,GAAAL,EAAAU,SAAAL,GAAA,CACA,GAAAxH,EAAAyQ,cAAA,CACAsoB,EAAArf,sBAAA1Z,EAAA45B,WAAA,iBACA8D,EAAAvB,EAAAn8B,GAEA,OADAA,EAAAyQ,eAAA,EACAitB,EACS,GAAAv2B,EAAAQ,MAAA,aAGT,OAFA3H,EAAAyQ,eAAA,EACAsoB,EAAArf,sBAAA1Z,EAAA45B,WAAA,iBACAuC,EAAAn8B,QAEO,SAAAwH,GACPL,EAAAQ,MAAA,WACA,SAAAR,EAAAoa,OACA,OAAA4a,EAAAn8B,GAEAmH,EAAA02B,OAAA,GAMA,GAAA9E,EAAAxJ,OAAA,MAAA/nB,GAAAL,EAAAQ,MAAA,kBACA3H,EAAAuvB,OAAA,EACAwJ,EAAArf,sBAAA1Z,EAAA45B,WAAA,SACA,IAAAsE,EAAA/B,EAAAn8B,GAEA,OADAA,EAAAuvB,OAAA,EACA2O,EAWA,MARA,MAAA12B,IACAL,EAAAQ,MAAA,WACA3H,EAAAm7B,gBACOn7B,EAAAm7B,gBACPn7B,EAAAo7B,sBAAA,IAIAe,EAAAn8B,GAGA,SAAA65B,EAAA1yB,EAAAnH,GACA,IAAAwH,EAAAL,EAAAM,OAEA,SAAAD,EAAA,CACAxH,EAAAmO,EAAAnO,EAAAkmB,OAAA+U,EACAlC,EAAArf,sBAAA1Z,EAAA45B,WAAA,QACA,IAAAjzB,EAAAw1B,EAAAn8B,GAMA,OALA2G,EACAA,GAAA,IAEAA,EAAA,GAEAA,EAAA2yB,EAAAO,WAKA,OAFA1yB,EAAAQ,MAAA,aAEA2xB,EAAAO,WAGA,SAAAG,EAAA7yB,EAAAnH,GAEA,GAAAmH,EAAAuD,WACA,YAEA,IAAAlD,EAAAL,EAAAM,OACA,YAAAD,GAAA,MAAAA,GACAxH,EAAAmO,EAAAnO,EAAAkmB,OAAAiY,EAAA,MAAA32B,EAAA,SACAuxB,EAAArf,sBAAA1Z,EAAA45B,WAAA,eACA55B,EAAAg6B,UAAA,EACAmC,EAAAn8B,IAEA,QAGA,IAAAo+B,GACAC,IAAA,oDACAC,IAAA,qDAGA,SAAAH,EAAAI,GACA,gBAAAp3B,EAAAnH,GACA,IAAAwH,EAAAL,EAAAM,OAEA,GAAAD,IAAA+2B,EAAA,CACAv+B,EAAAmO,EAAAnO,EAAAkmB,OAAA+U,EACAlC,EAAArf,sBAAA1Z,EAAA45B,WAAA,eACA,IAAA4E,EAAArC,EAAAn8B,GAEA,OADAA,EAAAg6B,UAAA,EACAwE,EAKA,OAFAr3B,EAAAQ,MAAAy2B,EAAAG,IACAv+B,EAAAg6B,UAAA,EACAmC,EAAAn8B,IAIA,SAAA28B,EAAAx1B,EAAAnH,GACA,OAAAmH,EAAAQ,MAAA,0BACA3H,EAAAmO,EAAAswB,EACAt3B,EAAAM,OACAsxB,EAAArf,sBAAA1Z,EAAA45B,WAAA,QACA55B,EAAA+5B,UAAA,EACAoC,EAAAn8B,IAEA46B,EAAAzzB,EAAAnH,EAAAi7B,GAGA,SAAAwD,EAAAt3B,EAAAnH,GACA,GAAAmH,EAAAQ,MAAA,YACA3H,EAAAmO,EAAAnO,EAAAkmB,OAAAwY,EACA3F,EAAArf,sBAAA1Z,EAAA45B,WAAA,QACA,IAAAoD,EAAAb,EAAAn8B,GAEA,OADAA,EAAA+5B,UAAA,EACAiD,EAKA,OAFA71B,EAAAQ,MAAA,sBAEA2xB,EAAAS,SAGA,SAAA2E,EAAAv3B,EAAAnH,GAEA,OAAAmH,EAAAuD,WACA,MAGAvD,EAAAQ,MAAA,mBAEAuH,IAAA/H,EAAAoa,OACAvhB,EAAA+6B,WAAA,EAEA5zB,EAAAQ,MAAA,0FAEA3H,EAAAmO,EAAAnO,EAAAkmB,OAAA+U,EACA3B,EAAAU,SAAA,QAGA,IAAA/e,GACA5Q,WAAA,WACA,OACA8D,EAAA+sB,EAEAG,UAAmBl0B,OAAA,MACnBm0B,UAAmBn0B,OAAA,MAEnB2b,MAAAoY,EACA0B,UAAA,KACAnyB,YAAA,EAEAyb,OAAA+U,EACAhrB,KAAAstB,EAEA3D,YAAA,EACAG,UAAA,EACAC,UAAA,EACAe,WAAA,EACArqB,KAAA,EACA8V,IAAA,EACAD,QAAA,EACA/gB,OAAA,EACA42B,OAAA,EACAt5B,IAAA,EACAw5B,UAAA,EACAnZ,MAAA,EACA0Y,aACAtzB,MAAA,EACA4yB,cAAA,EACAC,sBAAA,EACA3qB,eAAA,EACA8e,OAAA,EACAgN,YAAA,OAIAzN,UAAA,SAAAC,GACA,OACA5gB,EAAA4gB,EAAA5gB,EAEAktB,SAAAtM,EAAAsM,SACAC,SAAAvM,EAAAuM,SAEAxY,MAAAiM,EAAAjM,MACA8Z,UAAA7N,EAAA6N,WAAA/8B,EAAAivB,UAAA9nB,EAAA+nB,EAAA6N,WACAnyB,YAAAskB,EAAAtkB,YAEA+xB,UAAAzN,EAAAyN,UACAC,WAAA1N,EAAAyN,UAAA38B,EAAAivB,UAAAC,EAAAyN,UAAAzN,EAAA0N,YAAA,KAEAvW,OAAA6I,EAAA7I,OACAjW,KAAA8e,EAAA9e,KACA2pB,YAAA,EACAG,SAAAhL,EAAAgL,SACAgB,UAAAhM,EAAAgM,UACAf,SAAAjL,EAAAiL,SACAtpB,KAAAqe,EAAAre,KACA8V,GAAAuI,EAAAvI,GACAD,OAAAwI,EAAAxI,OACA9V,cAAAse,EAAAte,cACA8e,MAAAR,EAAAQ,MACA/pB,OAAAupB,EAAAvpB,OACA42B,OAAArN,EAAAqN,OACAt5B,GAAAisB,EAAAjsB,GACAw5B,SAAAvN,EAAAuN,SACAnZ,KAAA4L,EAAA5L,KACA0Y,UAAA9M,EAAA8M,UAAAvoB,MAAA,GACA/K,MAAAwmB,EAAAxmB,MACA8J,aAAA0c,EAAA1c,aACA8oB,cAAApM,EAAAoM,cACAC,qBAAArM,EAAAqM,qBACA2B,UAAAhO,EAAAgO,UACAR,YAAAxN,EAAAwN,cAIAhyB,MAAA,SAAApD,EAAAnH,GAKA,GAFAA,EAAA45B,YAAA,EAEAzyB,GAAAnH,EAAAs7B,SAAAn0B,OAAA,CAIA,GAHAnH,EAAAwF,OAAA,EACAxF,EAAA8C,IAAA,EAEAqE,EAAAQ,MAAA,YAEA,OADA+mB,EAAA1uB,GACA,KAaA,GAVAA,EAAAq7B,SAAAr7B,EAAAs7B,SACAt7B,EAAAs7B,UAA0Bn0B,UAG1BnH,EAAAs8B,UAAA,EAGAt8B,EAAAm7B,cAAA,EACAn7B,EAAAo7B,sBAAA,GAEAp7B,EAAAy8B,aACAz8B,EAAAmO,EAAAnO,EAAA8iB,MACA9iB,EAAAmO,GAAA6sB,GAAA,CACA,IAAAvwB,EAAAtD,EAAAQ,MAAA,cAAAjG,QAAA,MAAAi5B,GAAA7vB,OAGA,GAFA9K,EAAAyK,cACAzK,EAAA+7B,gBAAA,KACAtxB,EAAA,eAIA,OAAAzK,EAAAmO,EAAAhH,EAAAnH,IAGA88B,UAAA,SAAA98B,GACA,OAAAA,EAAA8iB,OAAAkY,GAA4Ch7B,QAAA48B,UAAA3hB,KAAAjU,GAC5ChH,EAAAy8B,YAAoCz8B,QAAAy8B,WAAAxhB,KAAAjb,EAAAw8B,YACtBx8B,QAAAib,SAGdhS,OAAA,SAAAjJ,EAAA2K,EAAA4F,GACA,OAAAvQ,EAAA8iB,OAAAkY,GAAAh0B,EAAAiC,OAAAjC,EAAAiC,OAAAjJ,EAAA48B,UAAAjyB,EAAA4F,GACAvQ,EAAAy8B,YAAAz8B,EAAAw8B,UAAAvzB,OAAAjJ,EAAAw8B,UAAAvzB,OAAAjJ,EAAAy8B,WAAA9xB,EAAA4F,GACA1Q,EAAAgL,MAGA6jB,YAEAyN,UAEAwC,cAAA,iBACAC,KAAA,YAEA,OAAA3jB,GACC,OAEDpb,EAAA8L,WAAA,4BAEA9L,EAAA8L,WAAA,uDC51BA,SAAAhM,GAEAA,EAAAC,EAAA,UAFA,CAOC,SAAAC,GACD,aAkBA,SAAAg/B,EAAA9+B,GACAA,EAAAC,MAAA8+B,iBACA/+B,EAAAiU,UAAA,WAA+B+qB,EAAAh/B,KAG/B,SAAAuB,EAAAvB,GACAA,EAAAC,MAAA8+B,iBAAA/+B,EAAAC,MAAA8+B,gBAAAh0B,QACA/K,EAAAiU,UAAA,WAA+BgrB,EAAAj/B,KAvB/BF,EAAAgC,aAAA,gCAAA9B,EAAA+B,EAAAC,GACA,IAAAC,EAAAD,MAAAlC,EAAAoC,KACAH,IAAAE,GACAjC,EAAAC,MAAA8+B,mBACA/+B,EAAAC,MAAAi/B,qBAAA,iBAAAn9B,IAAA,0BACAo9B,EAAAn/B,GACAA,EAAAmC,GAAA,iBAAA28B,GACA9+B,EAAAmC,GAAA,SAAAZ,KACKQ,GAAAE,IACLjC,EAAAoC,IAAA,iBAAA08B,GACA9+B,EAAAoC,IAAA,SAAAb,GACA09B,EAAAj/B,GACAA,EAAAC,MAAA8+B,gBAAA/+B,EAAAC,MAAAi/B,qBAAA,QAcA,IAAAE,EAAA,EACAC,EAAAv/B,EAAAu/B,IACAC,EAAAx/B,EAAAy/B,OAEA,SAAAC,EAAAx/B,EAAAy/B,EAAAC,EAAAC,GACA,MAAAL,EAAAG,EAAAC,GAGA,IAFA,IAAAE,EAAA5/B,EAAAC,MAAA8+B,gBACAc,EAAA7/B,EAAAC,MAAAi/B,qBACA1uB,EAAAivB,EAAAjvB,OAA+B,CAC/B,IAAA8C,EAAA9C,GAAAivB,EAAAjvB,KAAAivB,EAAAJ,EAAA7uB,EAAA,GACAsvB,EAAAtvB,EAAA4uB,EAAAW,EAAAD,GAAAJ,EAAAlvB,KACAgD,EAAAusB,EAAAL,EAAAL,EAAAS,EAAA,GACAE,EAAAhgC,EAAAigC,SAAA3sB,EAAAE,GAA0C3S,UAAAg/B,IAG1C,GAFA,MAAAF,EAAAC,EAAAvmB,KAAA2mB,GACAJ,EAAArV,OAAAoV,IAAA,EAAAK,GACAD,EAAA,MACAvvB,EAAAsvB,GAIA,SAAAb,EAAAj/B,GAEA,IADA,IAAA4/B,EAAA5/B,EAAAC,MAAA8+B,gBACAzuB,EAAA,EAAmBA,EAAAsvB,EAAA70B,SAAkBuF,EAAAsvB,EAAAtvB,GAAA2uB,QACrCW,EAAA70B,OAAA,EAGA,SAAAo0B,EAAAn/B,GACAi/B,EAAAj/B,GAEA,IADA,IAAA2tB,EAAA3tB,EAAA4tB,iBACAtd,EAAA,EAAmBA,EAAAqd,EAAA5iB,OAAmBuF,IACtCkvB,EAAAx/B,EAAA2tB,EAAArd,GAAAmvB,OAAA9R,EAAArd,GAAAovB,MAGA,SAAAV,EAAAh/B,GACA,IAAAA,EAAAkgC,oBAAA,OAAAjB,EAAAj/B,GACA,GAAAA,EAAA4tB,iBAAA7iB,OAAA,SAAAo0B,EAAAn/B,GAEA,IAAAy/B,EAAAz/B,EAAA8P,UAAA,SAAA4vB,EAAA1/B,EAAA8P,UAAA,OAEA8vB,EAAA5/B,EAAAC,MAAA8+B,gBACA,IAAAa,EAAA70B,OAAA,OAAAy0B,EAAAx/B,EAAAy/B,EAAAC,GAEA,IAAAS,EAAAP,EAAA,GAAAQ,OAAAC,EAAAT,IAAA70B,OAAA,GAAAq1B,OACA,IAAAD,IAAAE,GAAAX,EAAAlvB,KAAAivB,EAAAjvB,MAAA4uB,GACAE,EAAAG,EAAAY,EAAAX,KAAA,GAAAJ,EAAAI,EAAAS,EAAAV,OAAA,EACA,OAAAN,EAAAn/B,GAEA,MAAAs/B,EAAAG,EAAAU,EAAAV,MAAA,EACAG,EAAAU,QAAArB,QACAkB,EAAAP,EAAA,GAAAQ,OAEAd,EAAAG,EAAAU,EAAAV,MAAA,IACAU,EAAAT,GAAAlvB,KAAAivB,EAAAjvB,KAAA4uB,GACAQ,EAAAU,QAAArB,QACAO,EAAAx/B,EAAAy/B,EAAAU,EAAAT,GAAA,IAEAF,EAAAx/B,EAAAy/B,EAAAU,EAAAV,KAAA,IAIA,MAAAH,EAAAI,EAAAW,EAAAX,IAAA,EACAE,EAAA3V,MAAAgV,QACAoB,EAAAT,IAAA70B,OAAA,GAAAq1B,OAEAd,EAAAI,EAAAW,EAAAX,IAAA,IACAA,EAAAlvB,KAAA6vB,EAAAZ,KAAAjvB,KAAA4uB,GACAQ,EAAA3V,MAAAgV,QACAO,EAAAx/B,EAAAqgC,EAAAZ,KAAAC,IAEAF,EAAAx/B,EAAAqgC,EAAAX,iCCtGA,SAAA9/B,GAEAA,EAAAC,EAAA,UAFA,CAOC,SAAAC,GACD,aAEAA,EAAA6hB,YAAA,SAAAlf,EAAA8e,EAAAgf,GACA,OACAj2B,WAAA,WACA,OACA7H,KAAA3C,EAAAwK,WAAA7H,GACA8e,QAAAzhB,EAAAwK,WAAAiX,GACAif,QAAA,EAAAC,QAAA,KACAC,WAAA,EAAAC,WAAA,KACAC,WAAA,OAGA7R,UAAA,SAAA9uB,GACA,OACAwC,KAAA3C,EAAAivB,UAAAtsB,EAAAxC,EAAAwC,MACA8e,QAAAzhB,EAAAivB,UAAAxN,EAAAthB,EAAAshB,SACAif,QAAAvgC,EAAAugC,QAAAC,QAAA,KACAC,WAAAzgC,EAAAygC,WAAAC,WAAA,OAIAn2B,MAAA,SAAApD,EAAAnH,GAoBA,OAnBAmH,GAAAnH,EAAA2gC,YACAnY,KAAA2O,IAAAn3B,EAAAugC,QAAAvgC,EAAAygC,YAAAt5B,EAAAkM,SACArT,EAAA2gC,WAAAx5B,EACAnH,EAAAugC,QAAAvgC,EAAAygC,WAAAt5B,EAAAkM,OAGAlM,EAAAkM,OAAArT,EAAAugC,UACAvgC,EAAAwgC,QAAAh+B,EAAA+H,MAAApD,EAAAnH,EAAAwC,MACAxC,EAAAugC,QAAAp5B,EAAAyI,KAEAzI,EAAAkM,OAAArT,EAAAygC,aACAt5B,EAAAyI,IAAAzI,EAAAkM,MACArT,EAAA0gC,WAAApf,EAAA/W,MAAApD,EAAAnH,EAAAshB,SACAthB,EAAAygC,WAAAt5B,EAAAyI,KAEAzI,EAAAyI,IAAA4Y,KAAA2O,IAAAn3B,EAAAugC,QAAAvgC,EAAAygC,YAIA,MAAAzgC,EAAA0gC,WAAA1gC,EAAAwgC,QACA,MAAAxgC,EAAAwgC,SACAxgC,EAAAshB,QAAA0N,eACAsR,GAAA,MAAAtgC,EAAAshB,QAAA0N,cACAhvB,EAAAwgC,QAAA,IAAAxgC,EAAA0gC,WACA1gC,EAAA0gC,YAGAz3B,OAAAzG,EAAAyG,QAAA,SAAAjJ,EAAA2K,GACA,OAAAnI,EAAAyG,OAAAjJ,EAAAwC,KAAAmI,IAEAi2B,cAAAp+B,EAAAo+B,cAEA9D,UAAA,SAAA98B,GAAgC,OAASA,QAAAwC,KAAAyY,KAAAzY,IAEzCksB,UAAA,SAAA1uB,GACA,IAAA6gC,EAAAC,EAIA,OAHAt+B,EAAAksB,YAAAmS,EAAAr+B,EAAAksB,UAAA1uB,EAAAwC,OACA8e,EAAAoN,YAAAoS,EAAAxf,EAAAoN,UAAA1uB,EAAAshB,UAEA,MAAAwf,EACAD,EACAP,GAAA,MAAAO,IAAA,IAAAC,oECpFA,SAAAle;;;;;;;AAUA,IAAAme,EAAAnhC,EAAA,QACAohC,EAAAphC,EAAA,QACAsM,EAAAtM,EAAA,QAuCA,SAAAqhC,IACA,IACA,IAAA90B,EAAA,IAAAkf,WAAA,GAEA,OADAlf,EAAA+0B,WAAqBA,UAAA7V,WAAA/Q,UAAA6mB,IAAA,WAAmD,YACxE,KAAAh1B,EAAAg1B,OACA,oBAAAh1B,EAAAi1B,UACA,IAAAj1B,EAAAi1B,SAAA,KAAArW,WACG,MAAA1Q,GACH,UAIA,SAAAgnB,IACA,OAAA3R,EAAA4R,oBACA,WACA,WAGA,SAAAC,EAAAC,EAAA12B,GACA,GAAAu2B,IAAAv2B,EACA,UAAA22B,WAAA,8BAcA,OAZA/R,EAAA4R,qBAEAE,EAAA,IAAAnW,WAAAvgB,GACA02B,EAAAN,UAAAxR,EAAApV,YAGA,OAAAknB,IACAA,EAAA,IAAA9R,EAAA5kB,IAEA02B,EAAA12B,UAGA02B,EAaA,SAAA9R,EAAAgS,EAAAC,EAAA72B,GACA,IAAA4kB,EAAA4R,uBAAAv4B,gBAAA2mB,GACA,WAAAA,EAAAgS,EAAAC,EAAA72B,GAIA,qBAAA42B,EAAA,CACA,qBAAAC,EACA,UAAA1b,MACA,qEAGA,OAAA2b,EAAA74B,KAAA24B,GAEA,OAAAlC,EAAAz2B,KAAA24B,EAAAC,EAAA72B,GAWA,SAAA00B,EAAAgC,EAAA/rB,EAAAksB,EAAA72B,GACA,qBAAA2K,EACA,UAAAosB,UAAA,yCAGA,2BAAAC,aAAArsB,aAAAqsB,YACAC,EAAAP,EAAA/rB,EAAAksB,EAAA72B,GAGA,kBAAA2K,EACAusB,EAAAR,EAAA/rB,EAAAksB,GAGAM,EAAAT,EAAA/rB,GA4BA,SAAAysB,EAAAjsB,GACA,qBAAAA,EACA,UAAA4rB,UAAA,oCACG,GAAA5rB,EAAA,EACH,UAAAwrB,WAAA,wCAIA,SAAAU,EAAAX,EAAAvrB,EAAAmsB,EAAAC,GAEA,OADAH,EAAAjsB,GACAA,GAAA,EACAsrB,EAAAC,EAAAvrB,QAEA/G,IAAAkzB,EAIA,kBAAAC,EACAd,EAAAC,EAAAvrB,GAAAmsB,OAAAC,GACAd,EAAAC,EAAAvrB,GAAAmsB,QAEAb,EAAAC,EAAAvrB,GAWA,SAAA2rB,EAAAJ,EAAAvrB,GAGA,GAFAisB,EAAAjsB,GACAurB,EAAAD,EAAAC,EAAAvrB,EAAA,MAAA6P,EAAA7P,KACAyZ,EAAA4R,oBACA,QAAAjxB,EAAA,EAAmBA,EAAA4F,IAAU5F,EAC7BmxB,EAAAnxB,GAAA,EAGA,OAAAmxB,EAgBA,SAAAQ,EAAAR,EAAApS,EAAAiT,GAKA,GAJA,kBAAAA,GAAA,KAAAA,IACAA,EAAA,SAGA3S,EAAA4S,WAAAD,GACA,UAAAR,UAAA,8CAGA,IAAA/2B,EAAA,EAAAigB,EAAAqE,EAAAiT,GACAb,EAAAD,EAAAC,EAAA12B,GAEA,IAAAy3B,EAAAf,EAAA/I,MAAArJ,EAAAiT,GASA,OAPAE,IAAAz3B,IAIA02B,IAAAluB,MAAA,EAAAivB,IAGAf,EAGA,SAAAgB,EAAAhB,EAAA7B,GACA,IAAA70B,EAAA60B,EAAA70B,OAAA,MAAAgb,EAAA6Z,EAAA70B,QACA02B,EAAAD,EAAAC,EAAA12B,GACA,QAAAuF,EAAA,EAAiBA,EAAAvF,EAAYuF,GAAA,EAC7BmxB,EAAAnxB,GAAA,IAAAsvB,EAAAtvB,GAEA,OAAAmxB,EAGA,SAAAO,EAAAP,EAAA7B,EAAA8C,EAAA33B,GAGA,GAFA60B,EAAA5U,WAEA0X,EAAA,GAAA9C,EAAA5U,WAAA0X,EACA,UAAAhB,WAAA,6BAGA,GAAA9B,EAAA5U,WAAA0X,GAAA33B,GAAA,GACA,UAAA22B,WAAA,6BAmBA,OAfA9B,OADAzwB,IAAAuzB,QAAAvzB,IAAApE,EACA,IAAAugB,WAAAsU,QACGzwB,IAAApE,EACH,IAAAugB,WAAAsU,EAAA8C,GAEA,IAAApX,WAAAsU,EAAA8C,EAAA33B,GAGA4kB,EAAA4R,qBAEAE,EAAA7B,EACA6B,EAAAN,UAAAxR,EAAApV,WAGAknB,EAAAgB,EAAAhB,EAAA7B,GAEA6B,EAGA,SAAAS,EAAAT,EAAApX,GACA,GAAAsF,EAAAgT,SAAAtY,GAAA,CACA,IAAAkB,EAAA,EAAAxF,EAAAsE,EAAAtf,QAGA,OAFA02B,EAAAD,EAAAC,EAAAlW,GAEA,IAAAkW,EAAA12B,OACA02B,GAGApX,EAAAuY,KAAAnB,EAAA,IAAAlW,GACAkW,GAGA,GAAApX,EAAA,CACA,wBAAA0X,aACA1X,EAAAyI,kBAAAiP,aAAA,WAAA1X,EACA,wBAAAA,EAAAtf,QAAA83B,GAAAxY,EAAAtf,QACAy2B,EAAAC,EAAA,GAEAgB,EAAAhB,EAAApX,GAGA,cAAAA,EAAAzjB,MAAAuF,EAAAke,EAAApa,MACA,OAAAwyB,EAAAhB,EAAApX,EAAApa,MAIA,UAAA6xB,UAAA,sFAGA,SAAA/b,EAAAhb,GAGA,GAAAA,GAAAu2B,IACA,UAAAI,WAAA,0DACAJ,IAAAv1B,SAAA,cAEA,SAAAhB,EAGA,SAAA+3B,EAAA/3B,GAIA,OAHAA,OACAA,EAAA,GAEA4kB,EAAAyS,OAAAr3B,GA+EA,SAAAigB,EAAAqE,EAAAiT,GACA,GAAA3S,EAAAgT,SAAAtT,GACA,OAAAA,EAAAtkB,OAEA,wBAAAg3B,aAAA,oBAAAA,YAAAgB,SACAhB,YAAAgB,OAAA1T,iBAAA0S,aACA,OAAA1S,EAAArE,WAEA,kBAAAqE,IACAA,EAAA,GAAAA,GAGA,IAAA9D,EAAA8D,EAAAtkB,OACA,OAAAwgB,EAAA,SAIA,IADA,IAAAyX,GAAA,IAEA,OAAAV,GACA,YACA,aACA,aACA,OAAA/W,EACA,WACA,YACA,UAAApc,EACA,OAAA8zB,EAAA5T,GAAAtkB,OACA,WACA,YACA,cACA,eACA,SAAAwgB,EACA,UACA,OAAAA,IAAA,EACA,aACA,OAAA2X,EAAA7T,GAAAtkB,OACA,QACA,GAAAi4B,EAAA,OAAAC,EAAA5T,GAAAtkB,OACAu3B,GAAA,GAAAA,GAAAlgB,cACA4gB,GAAA,GAMA,SAAAG,EAAAb,EAAAhvB,EAAAE,GACA,IAAAwvB,GAAA,EAcA,SALA7zB,IAAAmE,KAAA,KACAA,EAAA,GAIAA,EAAAtK,KAAA+B,OACA,SAOA,SAJAoE,IAAAqE,KAAAxK,KAAA+B,UACAyI,EAAAxK,KAAA+B,QAGAyI,GAAA,EACA,SAOA,GAHAA,KAAA,EACAF,KAAA,EAEAE,GAAAF,EACA,SAGAgvB,MAAA,QAEA,QACA,OAAAA,GACA,UACA,OAAAc,EAAAp6B,KAAAsK,EAAAE,GAEA,WACA,YACA,OAAA6vB,EAAAr6B,KAAAsK,EAAAE,GAEA,YACA,OAAA8vB,EAAAt6B,KAAAsK,EAAAE,GAEA,aACA,aACA,OAAA+vB,EAAAv6B,KAAAsK,EAAAE,GAEA,aACA,OAAAgwB,EAAAx6B,KAAAsK,EAAAE,GAEA,WACA,YACA,cACA,eACA,OAAAiwB,EAAAz6B,KAAAsK,EAAAE,GAEA,QACA,GAAAwvB,EAAA,UAAAlB,UAAA,qBAAAQ,GACAA,KAAA,IAAAlgB,cACA4gB,GAAA,GASA,SAAAU,EAAA3e,EAAAoC,EAAA7P,GACA,IAAAhH,EAAAyU,EAAAoC,GACApC,EAAAoC,GAAApC,EAAAzN,GACAyN,EAAAzN,GAAAhH,EAmIA,SAAAqzB,EAAA7Q,EAAA/wB,EAAA2gC,EAAAJ,EAAAz9B,GAEA,OAAAiuB,EAAA/nB,OAAA,SAmBA,GAhBA,kBAAA23B,GACAJ,EAAAI,EACAA,EAAA,GACGA,EAAA,WACHA,EAAA,WACGA,GAAA,aACHA,GAAA,YAEAA,KACAlV,MAAAkV,KAEAA,EAAA79B,EAAA,EAAAiuB,EAAA/nB,OAAA,GAIA23B,EAAA,IAAAA,EAAA5P,EAAA/nB,OAAA23B,GACAA,GAAA5P,EAAA/nB,OAAA,CACA,GAAAlG,EAAA,SACA69B,EAAA5P,EAAA/nB,OAAA,OACG,GAAA23B,EAAA,GACH,IAAA79B,EACA,SADA69B,EAAA,EAUA,GALA,kBAAA3gC,IACAA,EAAA4tB,EAAA8P,KAAA19B,EAAAugC,IAIA3S,EAAAgT,SAAA5gC,GAEA,WAAAA,EAAAgJ,QACA,EAEA64B,EAAA9Q,EAAA/wB,EAAA2gC,EAAAJ,EAAAz9B,GACG,qBAAA9C,EAEH,OADAA,GAAA,IACA4tB,EAAA4R,qBACA,oBAAAjW,WAAA/Q,UAAAxI,QACAlN,EACAymB,WAAA/Q,UAAAxI,QAAA1F,KAAAymB,EAAA/wB,EAAA2gC,GAEApX,WAAA/Q,UAAAmI,YAAArW,KAAAymB,EAAA/wB,EAAA2gC,GAGAkB,EAAA9Q,GAAA/wB,GAAA2gC,EAAAJ,EAAAz9B,GAGA,UAAAi9B,UAAA,wCAGA,SAAA8B,EAAAx3B,EAAArK,EAAA2gC,EAAAJ,EAAAz9B,GACA,IA0BAyL,EA1BAuzB,EAAA,EACAC,EAAA13B,EAAArB,OACAg5B,EAAAhiC,EAAAgJ,OAEA,QAAAoE,IAAAmzB,IACAA,EAAAjiB,OAAAiiB,GAAAlgB,cACA,SAAAkgB,GAAA,UAAAA,GACA,YAAAA,GAAA,aAAAA,GAAA,CACA,GAAAl2B,EAAArB,OAAA,GAAAhJ,EAAAgJ,OAAA,EACA,SAEA84B,EAAA,EACAC,GAAA,EACAC,GAAA,EACArB,GAAA,EAIA,SAAA5K,EAAAkM,EAAA1zB,GACA,WAAAuzB,EACAG,EAAA1zB,GAEA0zB,EAAAC,aAAA3zB,EAAAuzB,GAKA,GAAAh/B,EAAA,CACA,IAAAq/B,GAAA,EACA,IAAA5zB,EAAAoyB,EAAwBpyB,EAAAwzB,EAAexzB,IACvC,GAAAwnB,EAAA1rB,EAAAkE,KAAAwnB,EAAA/1B,GAAA,IAAAmiC,EAAA,EAAA5zB,EAAA4zB,IAEA,IADA,IAAAA,MAAA5zB,GACAA,EAAA4zB,EAAA,IAAAH,EAAA,OAAAG,EAAAL,OAEA,IAAAK,IAAA5zB,KAAA4zB,GACAA,GAAA,OAKA,IADAxB,EAAAqB,EAAAD,IAAApB,EAAAoB,EAAAC,GACAzzB,EAAAoyB,EAAwBpyB,GAAA,EAAQA,IAAA,CAEhC,IADA,IAAA4oB,GAAA,EACA7W,EAAA,EAAqBA,EAAA0hB,EAAe1hB,IACpC,GAAAyV,EAAA1rB,EAAAkE,EAAA+R,KAAAyV,EAAA/1B,EAAAsgB,GAAA,CACA6W,GAAA,EACA,MAGA,GAAAA,EAAA,OAAA5oB,EAIA,SAeA,SAAA6zB,EAAAH,EAAA3U,EAAA0I,EAAAhtB,GACAgtB,EAAAqM,OAAArM,IAAA,EACA,IAAAsM,EAAAL,EAAAj5B,OAAAgtB,EACAhtB,GAGAA,EAAAq5B,OAAAr5B,GACAA,EAAAs5B,IACAt5B,EAAAs5B,IAJAt5B,EAAAs5B,EASA,IAAAC,EAAAjV,EAAAtkB,OACA,GAAAu5B,EAAA,gBAAAxC,UAAA,sBAEA/2B,EAAAu5B,EAAA,IACAv5B,EAAAu5B,EAAA,GAEA,QAAAh0B,EAAA,EAAiBA,EAAAvF,IAAYuF,EAAA,CAC7B,IAAAi0B,EAAAld,SAAAgI,EAAA5gB,OAAA,EAAA6B,EAAA,OACA,GAAAkd,MAAA+W,GAAA,OAAAj0B,EACA0zB,EAAAjM,EAAAznB,GAAAi0B,EAEA,OAAAj0B,EAGA,SAAAk0B,EAAAR,EAAA3U,EAAA0I,EAAAhtB,GACA,OAAA05B,GAAAxB,EAAA5T,EAAA2U,EAAAj5B,OAAAgtB,GAAAiM,EAAAjM,EAAAhtB,GAGA,SAAA25B,EAAAV,EAAA3U,EAAA0I,EAAAhtB,GACA,OAAA05B,GAAAE,EAAAtV,GAAA2U,EAAAjM,EAAAhtB,GAGA,SAAA65B,EAAAZ,EAAA3U,EAAA0I,EAAAhtB,GACA,OAAA25B,EAAAV,EAAA3U,EAAA0I,EAAAhtB,GAGA,SAAA85B,EAAAb,EAAA3U,EAAA0I,EAAAhtB,GACA,OAAA05B,GAAAvB,EAAA7T,GAAA2U,EAAAjM,EAAAhtB,GAGA,SAAA+5B,EAAAd,EAAA3U,EAAA0I,EAAAhtB,GACA,OAAA05B,GAAAM,EAAA1V,EAAA2U,EAAAj5B,OAAAgtB,GAAAiM,EAAAjM,EAAAhtB,GAkFA,SAAAy4B,EAAAQ,EAAA1wB,EAAAE,GACA,WAAAF,GAAAE,IAAAwwB,EAAAj5B,OACAi2B,EAAA9V,cAAA8Y,GAEAhD,EAAA9V,cAAA8Y,EAAAzwB,MAAAD,EAAAE,IAIA,SAAA6vB,EAAAW,EAAA1wB,EAAAE,GACAA,EAAAiV,KAAA2O,IAAA4M,EAAAj5B,OAAAyI,GACA,IAAAwxB,KAEA10B,EAAAgD,EACA,MAAAhD,EAAAkD,EAAA,CACA,IAQAyxB,EAAAC,EAAAC,EAAAC,EARAC,EAAArB,EAAA1zB,GACAg1B,EAAA,KACAC,EAAAF,EAAA,MACAA,EAAA,MACAA,EAAA,MACA,EAEA,GAAA/0B,EAAAi1B,GAAA/xB,EAGA,OAAA+xB,GACA,OACAF,EAAA,MACAC,EAAAD,GAEA,MACA,OACAJ,EAAAjB,EAAA1zB,EAAA,GACA,WAAA20B,KACAG,GAAA,GAAAC,IAAA,KAAAJ,EACAG,EAAA,MACAE,EAAAF,IAGA,MACA,OACAH,EAAAjB,EAAA1zB,EAAA,GACA40B,EAAAlB,EAAA1zB,EAAA,GACA,WAAA20B,IAAA,WAAAC,KACAE,GAAA,GAAAC,IAAA,OAAAJ,IAAA,KAAAC,EACAE,EAAA,OAAAA,EAAA,OAAAA,EAAA,SACAE,EAAAF,IAGA,MACA,OACAH,EAAAjB,EAAA1zB,EAAA,GACA40B,EAAAlB,EAAA1zB,EAAA,GACA60B,EAAAnB,EAAA1zB,EAAA,GACA,WAAA20B,IAAA,WAAAC,IAAA,WAAAC,KACAC,GAAA,GAAAC,IAAA,OAAAJ,IAAA,OAAAC,IAAA,KAAAC,EACAC,EAAA,OAAAA,EAAA,UACAE,EAAAF,IAMA,OAAAE,GAGAA,EAAA,MACAC,EAAA,GACKD,EAAA,QAELA,GAAA,MACAN,EAAA3rB,KAAAisB,IAAA,eACAA,EAAA,WAAAA,GAGAN,EAAA3rB,KAAAisB,GACAh1B,GAAAi1B,EAGA,OAAAC,EAAAR,GA98BA/4B,EAAA0jB,SACA1jB,EAAA62B,aACA72B,EAAAw5B,kBAAA,GA0BA9V,EAAA4R,yBAAApyB,IAAA0T,EAAA0e,oBACA1e,EAAA0e,oBACAL,IAKAj1B,EAAAq1B,eAkEA3R,EAAA+V,SAAA,KAGA/V,EAAAgW,SAAA,SAAAv5B,GAEA,OADAA,EAAA+0B,UAAAxR,EAAApV,UACAnO,GA2BAujB,EAAA8P,KAAA,SAAA/pB,EAAAksB,EAAA72B,GACA,OAAA00B,EAAA,KAAA/pB,EAAAksB,EAAA72B,IAGA4kB,EAAA4R,sBACA5R,EAAApV,UAAA4mB,UAAA7V,WAAA/Q,UACAoV,EAAAwR,UAAA7V,WACA,qBAAAsa,eAAAC,SACAlW,EAAAiW,OAAAC,WAAAlW,GAEA1Y,OAAA6uB,eAAAnW,EAAAiW,OAAAC,SACAnwB,MAAA,KACAqwB,cAAA,KAiCApW,EAAAyS,MAAA,SAAAlsB,EAAAmsB,EAAAC,GACA,OAAAF,EAAA,KAAAlsB,EAAAmsB,EAAAC,IAiBA3S,EAAAkS,YAAA,SAAA3rB,GACA,OAAA2rB,EAAA,KAAA3rB,IAKAyZ,EAAAqW,gBAAA,SAAA9vB,GACA,OAAA2rB,EAAA,KAAA3rB,IAiHAyZ,EAAAgT,SAAA,SAAA5d,GACA,cAAAA,MAAAkhB,YAGAtW,EAAAuW,QAAA,SAAA13B,EAAAuW,GACA,IAAA4K,EAAAgT,SAAAn0B,KAAAmhB,EAAAgT,SAAA5d,GACA,UAAA+c,UAAA,6BAGA,GAAAtzB,IAAAuW,EAAA,SAKA,IAHA,IAAA3F,EAAA5Q,EAAAzD,OACAo7B,EAAAphB,EAAAha,OAEAuF,EAAA,EAAAib,EAAA9C,KAAA2O,IAAAhY,EAAA+mB,GAAuC71B,EAAAib,IAASjb,EAChD,GAAA9B,EAAA8B,KAAAyU,EAAAzU,GAAA,CACA8O,EAAA5Q,EAAA8B,GACA61B,EAAAphB,EAAAzU,GACA,MAIA,OAAA8O,EAAA+mB,GAAA,EACAA,EAAA/mB,EAAA,EACA,GAGAuQ,EAAA4S,WAAA,SAAAD,GACA,OAAAjiB,OAAAiiB,GAAAlgB,eACA,UACA,WACA,YACA,YACA,aACA,aACA,aACA,WACA,YACA,cACA,eACA,SACA,QACA,WAIAuN,EAAA5Y,OAAA,SAAAqM,EAAArY,GACA,IAAAoB,EAAAiX,GACA,UAAA0e,UAAA,+CAGA,OAAA1e,EAAArY,OACA,OAAA4kB,EAAAyS,MAAA,GAGA,IAAA9xB,EACA,QAAAnB,IAAApE,EAEA,IADAA,EAAA,EACAuF,EAAA,EAAeA,EAAA8S,EAAArY,SAAiBuF,EAChCvF,GAAAqY,EAAA9S,GAAAvF,OAIA,IAAA+nB,EAAAnD,EAAAkS,YAAA92B,GACA8E,EAAA,EACA,IAAAS,EAAA,EAAaA,EAAA8S,EAAArY,SAAiBuF,EAAA,CAC9B,IAAA0zB,EAAA5gB,EAAA9S,GACA,IAAAqf,EAAAgT,SAAAqB,GACA,UAAAlC,UAAA,+CAEAkC,EAAApB,KAAA9P,EAAAjjB,GACAA,GAAAm0B,EAAAj5B,OAEA,OAAA+nB,GA8CAnD,EAAA3E,aA0EA2E,EAAApV,UAAA0rB,WAAA,EAQAtW,EAAApV,UAAA6rB,OAAA,WACA,IAAA7a,EAAAviB,KAAA+B,OACA,GAAAwgB,EAAA,MACA,UAAAmW,WAAA,6CAEA,QAAApxB,EAAA,EAAiBA,EAAAib,EAASjb,GAAA,EAC1BozB,EAAA16B,KAAAsH,IAAA,GAEA,OAAAtH,MAGA2mB,EAAApV,UAAA8rB,OAAA,WACA,IAAA9a,EAAAviB,KAAA+B,OACA,GAAAwgB,EAAA,MACA,UAAAmW,WAAA,6CAEA,QAAApxB,EAAA,EAAiBA,EAAAib,EAASjb,GAAA,EAC1BozB,EAAA16B,KAAAsH,IAAA,GACAozB,EAAA16B,KAAAsH,EAAA,EAAAA,EAAA,GAEA,OAAAtH,MAGA2mB,EAAApV,UAAA+rB,OAAA,WACA,IAAA/a,EAAAviB,KAAA+B,OACA,GAAAwgB,EAAA,MACA,UAAAmW,WAAA,6CAEA,QAAApxB,EAAA,EAAiBA,EAAAib,EAASjb,GAAA,EAC1BozB,EAAA16B,KAAAsH,IAAA,GACAozB,EAAA16B,KAAAsH,EAAA,EAAAA,EAAA,GACAozB,EAAA16B,KAAAsH,EAAA,EAAAA,EAAA,GACAozB,EAAA16B,KAAAsH,EAAA,EAAAA,EAAA,GAEA,OAAAtH,MAGA2mB,EAAApV,UAAAxO,SAAA,WACA,IAAAhB,EAAA,EAAA/B,KAAA+B,OACA,WAAAA,EAAA,GACA,IAAAoM,UAAApM,OAAAs4B,EAAAr6B,KAAA,EAAA+B,GACAo4B,EAAA5iB,MAAAvX,KAAAmO,YAGAwY,EAAApV,UAAAgsB,OAAA,SAAAxhB,GACA,IAAA4K,EAAAgT,SAAA5d,GAAA,UAAA+c,UAAA,6BACA,OAAA94B,OAAA+b,GACA,IAAA4K,EAAAuW,QAAAl9B,KAAA+b,IAGA4K,EAAApV,UAAAisB,QAAA,WACA,IAAAC,EAAA,GACAC,EAAAz6B,EAAAw5B,kBAKA,OAJAz8B,KAAA+B,OAAA,IACA07B,EAAAz9B,KAAA+C,SAAA,QAAA26B,GAAA9+B,MAAA,SAAkD+O,KAAA,KAClD3N,KAAA+B,OAAA27B,IAAAD,GAAA,UAEA,WAAAA,EAAA,KAGA9W,EAAApV,UAAA2rB,QAAA,SAAArvB,EAAAvD,EAAAE,EAAAmzB,EAAAC,GACA,IAAAjX,EAAAgT,SAAA9rB,GACA,UAAAirB,UAAA,6BAgBA,QAbA3yB,IAAAmE,IACAA,EAAA,QAEAnE,IAAAqE,IACAA,EAAAqD,IAAA9L,OAAA,QAEAoE,IAAAw3B,IACAA,EAAA,QAEAx3B,IAAAy3B,IACAA,EAAA59B,KAAA+B,QAGAuI,EAAA,GAAAE,EAAAqD,EAAA9L,QAAA47B,EAAA,GAAAC,EAAA59B,KAAA+B,OACA,UAAA22B,WAAA,sBAGA,GAAAiF,GAAAC,GAAAtzB,GAAAE,EACA,SAEA,GAAAmzB,GAAAC,EACA,SAEA,GAAAtzB,GAAAE,EACA,SAQA,GALAF,KAAA,EACAE,KAAA,EACAmzB,KAAA,EACAC,KAAA,EAEA59B,OAAA6N,EAAA,SASA,IAPA,IAAAuI,EAAAwnB,EAAAD,EACAR,EAAA3yB,EAAAF,EACAiY,EAAA9C,KAAA2O,IAAAhY,EAAA+mB,GAEAU,EAAA79B,KAAAuK,MAAAozB,EAAAC,GACAE,EAAAjwB,EAAAtD,MAAAD,EAAAE,GAEAlD,EAAA,EAAiBA,EAAAib,IAASjb,EAC1B,GAAAu2B,EAAAv2B,KAAAw2B,EAAAx2B,GAAA,CACA8O,EAAAynB,EAAAv2B,GACA61B,EAAAW,EAAAx2B,GACA,MAIA,OAAA8O,EAAA+mB,GAAA,EACAA,EAAA/mB,EAAA,EACA,GA6HAuQ,EAAApV,UAAA+F,SAAA,SAAAve,EAAA2gC,EAAAJ,GACA,WAAAt5B,KAAA+I,QAAAhQ,EAAA2gC,EAAAJ,IAGA3S,EAAApV,UAAAxI,QAAA,SAAAhQ,EAAA2gC,EAAAJ,GACA,OAAAqB,EAAA36B,KAAAjH,EAAA2gC,EAAAJ,GAAA,IAGA3S,EAAApV,UAAAmI,YAAA,SAAA3gB,EAAA2gC,EAAAJ,GACA,OAAAqB,EAAA36B,KAAAjH,EAAA2gC,EAAAJ,GAAA,IAkDA3S,EAAApV,UAAAme,MAAA,SAAArJ,EAAA0I,EAAAhtB,EAAAu3B,GAEA,QAAAnzB,IAAA4oB,EACAuK,EAAA,OACAv3B,EAAA/B,KAAA+B,OACAgtB,EAAA,OAEG,QAAA5oB,IAAApE,GAAA,kBAAAgtB,EACHuK,EAAAvK,EACAhtB,EAAA/B,KAAA+B,OACAgtB,EAAA,MAEG,KAAAgP,SAAAhP,GAWH,UAAA7R,MACA,2EAXA6R,GAAA,EACAgP,SAAAh8B,IACAA,GAAA,OACAoE,IAAAmzB,MAAA,UAEAA,EAAAv3B,EACAA,OAAAoE,GASA,IAAAk1B,EAAAr7B,KAAA+B,OAAAgtB,EAGA,SAFA5oB,IAAApE,KAAAs5B,KAAAt5B,EAAAs5B,GAEAhV,EAAAtkB,OAAA,IAAAA,EAAA,GAAAgtB,EAAA,IAAAA,EAAA/uB,KAAA+B,OACA,UAAA22B,WAAA,0CAGAY,MAAA,QAGA,IADA,IAAAU,GAAA,IAEA,OAAAV,GACA,UACA,OAAA6B,EAAAn7B,KAAAqmB,EAAA0I,EAAAhtB,GAEA,WACA,YACA,OAAAy5B,EAAAx7B,KAAAqmB,EAAA0I,EAAAhtB,GAEA,YACA,OAAA25B,EAAA17B,KAAAqmB,EAAA0I,EAAAhtB,GAEA,aACA,aACA,OAAA65B,EAAA57B,KAAAqmB,EAAA0I,EAAAhtB,GAEA,aAEA,OAAA85B,EAAA77B,KAAAqmB,EAAA0I,EAAAhtB,GAEA,WACA,YACA,cACA,eACA,OAAA+5B,EAAA97B,KAAAqmB,EAAA0I,EAAAhtB,GAEA,QACA,GAAAi4B,EAAA,UAAAlB,UAAA,qBAAAQ,GACAA,GAAA,GAAAA,GAAAlgB,cACA4gB,GAAA,IAKArT,EAAApV,UAAAysB,OAAA,WACA,OACApgC,KAAA,SACAqJ,KAAA/D,MAAAqO,UAAAhH,MAAAlH,KAAArD,KAAAi+B,MAAAj+B,KAAA,KAwFA,IAAAk+B,EAAA,KAEA,SAAA1B,EAAA2B,GACA,IAAA5b,EAAA4b,EAAAp8B,OACA,GAAAwgB,GAAA2b,EACA,OAAA7mB,OAAA+G,aAAA7G,MAAAF,OAAA8mB,GAIA,IAAAnC,EAAA,GACA10B,EAAA,EACA,MAAAA,EAAAib,EACAyZ,GAAA3kB,OAAA+G,aAAA7G,MACAF,OACA8mB,EAAA5zB,MAAAjD,KAAA42B,IAGA,OAAAlC,EAGA,SAAA1B,EAAAU,EAAA1wB,EAAAE,GACA,IAAAnD,EAAA,GACAmD,EAAAiV,KAAA2O,IAAA4M,EAAAj5B,OAAAyI,GAEA,QAAAlD,EAAAgD,EAAqBhD,EAAAkD,IAASlD,EAC9BD,GAAAgQ,OAAA+G,aAAA,IAAA4c,EAAA1zB,IAEA,OAAAD,EAGA,SAAAkzB,EAAAS,EAAA1wB,EAAAE,GACA,IAAAnD,EAAA,GACAmD,EAAAiV,KAAA2O,IAAA4M,EAAAj5B,OAAAyI,GAEA,QAAAlD,EAAAgD,EAAqBhD,EAAAkD,IAASlD,EAC9BD,GAAAgQ,OAAA+G,aAAA4c,EAAA1zB,IAEA,OAAAD,EAGA,SAAA+yB,EAAAY,EAAA1wB,EAAAE,GACA,IAAA+X,EAAAyY,EAAAj5B,SAEAuI,KAAA,KAAAA,EAAA,KACAE,KAAA,GAAAA,EAAA+X,KAAA/X,EAAA+X,GAGA,IADA,IAAAtD,EAAA,GACA3X,EAAAgD,EAAqBhD,EAAAkD,IAASlD,EAC9B2X,GAAAmf,EAAApD,EAAA1zB,IAEA,OAAA2X,EAGA,SAAAwb,EAAAO,EAAA1wB,EAAAE,GAGA,IAFA,IAAA6zB,EAAArD,EAAAzwB,MAAAD,EAAAE,GACAwxB,EAAA,GACA10B,EAAA,EAAiBA,EAAA+2B,EAAAt8B,OAAkBuF,GAAA,EACnC00B,GAAA3kB,OAAA+G,aAAAigB,EAAA/2B,GAAA,IAAA+2B,EAAA/2B,EAAA,IAEA,OAAA00B,EA0CA,SAAAsC,EAAAvP,EAAAjW,EAAA/W,GACA,GAAAgtB,EAAA,OAAAA,EAAA,YAAA2J,WAAA,sBACA,GAAA3J,EAAAjW,EAAA/W,EAAA,UAAA22B,WAAA,yCA+JA,SAAA6F,EAAAvD,EAAAtuB,EAAAqiB,EAAAjW,EAAA4kB,EAAAtP,GACA,IAAAzH,EAAAgT,SAAAqB,GAAA,UAAAlC,UAAA,+CACA,GAAApsB,EAAAgxB,GAAAhxB,EAAA0hB,EAAA,UAAAsK,WAAA,qCACA,GAAA3J,EAAAjW,EAAAkiB,EAAAj5B,OAAA,UAAA22B,WAAA,sBAkDA,SAAA8F,EAAAxD,EAAAtuB,EAAAqiB,EAAA0P,GACA/xB,EAAA,IAAAA,EAAA,MAAAA,EAAA,GACA,QAAApF,EAAA,EAAA+R,EAAAoG,KAAA2O,IAAA4M,EAAAj5B,OAAAgtB,EAAA,GAAuDznB,EAAA+R,IAAO/R,EAC9D0zB,EAAAjM,EAAAznB,IAAAoF,EAAA,QAAA+xB,EAAAn3B,EAAA,EAAAA,MACA,GAAAm3B,EAAAn3B,EAAA,EAAAA,GA8BA,SAAAo3B,EAAA1D,EAAAtuB,EAAAqiB,EAAA0P,GACA/xB,EAAA,IAAAA,EAAA,WAAAA,EAAA,GACA,QAAApF,EAAA,EAAA+R,EAAAoG,KAAA2O,IAAA4M,EAAAj5B,OAAAgtB,EAAA,GAAuDznB,EAAA+R,IAAO/R,EAC9D0zB,EAAAjM,EAAAznB,GAAAoF,IAAA,GAAA+xB,EAAAn3B,EAAA,EAAAA,GAAA,IAmJA,SAAAq3B,EAAA3D,EAAAtuB,EAAAqiB,EAAAjW,EAAA4kB,EAAAtP,GACA,GAAAW,EAAAjW,EAAAkiB,EAAAj5B,OAAA,UAAA22B,WAAA,sBACA,GAAA3J,EAAA,YAAA2J,WAAA,sBAGA,SAAAkG,EAAA5D,EAAAtuB,EAAAqiB,EAAA0P,EAAAI,GAKA,OAJAA,GACAF,EAAA3D,EAAAtuB,EAAAqiB,EAAA,gDAEAkJ,EAAAvI,MAAAsL,EAAAtuB,EAAAqiB,EAAA0P,EAAA,MACA1P,EAAA,EAWA,SAAA+P,EAAA9D,EAAAtuB,EAAAqiB,EAAA0P,EAAAI,GAKA,OAJAA,GACAF,EAAA3D,EAAAtuB,EAAAqiB,EAAA,kDAEAkJ,EAAAvI,MAAAsL,EAAAtuB,EAAAqiB,EAAA0P,EAAA,MACA1P,EAAA,EA/cApI,EAAApV,UAAAhH,MAAA,SAAAD,EAAAE,GACA,IAoBAu0B,EApBAxc,EAAAviB,KAAA+B,OAqBA,GApBAuI,MACAE,OAAArE,IAAAqE,EAAA+X,IAAA/X,EAEAF,EAAA,GACAA,GAAAiY,EACAjY,EAAA,IAAAA,EAAA,IACGA,EAAAiY,IACHjY,EAAAiY,GAGA/X,EAAA,GACAA,GAAA+X,EACA/X,EAAA,IAAAA,EAAA,IACGA,EAAA+X,IACH/X,EAAA+X,GAGA/X,EAAAF,IAAAE,EAAAF,GAGAqc,EAAA4R,oBACAwG,EAAA/+B,KAAAq4B,SAAA/tB,EAAAE,GACAu0B,EAAA5G,UAAAxR,EAAApV,cACG,CACH,IAAAytB,EAAAx0B,EAAAF,EACAy0B,EAAA,IAAApY,EAAAqY,OAAA74B,GACA,QAAAmB,EAAA,EAAmBA,EAAA03B,IAAc13B,EACjCy3B,EAAAz3B,GAAAtH,KAAAsH,EAAAgD,GAIA,OAAAy0B,GAWApY,EAAApV,UAAA0tB,WAAA,SAAAlQ,EAAA/M,EAAA6c,GACA9P,GAAA,EACA/M,GAAA,EACA6c,GAAAP,EAAAvP,EAAA/M,EAAAhiB,KAAA+B,QAEA,IAAAhJ,EAAAiH,KAAA+uB,GACAmQ,EAAA,EACA53B,EAAA,EACA,QAAAA,EAAA0a,IAAAkd,GAAA,KACAnmC,GAAAiH,KAAA+uB,EAAAznB,GAAA43B,EAGA,OAAAnmC,GAGA4tB,EAAApV,UAAA4tB,WAAA,SAAApQ,EAAA/M,EAAA6c,GACA9P,GAAA,EACA/M,GAAA,EACA6c,GACAP,EAAAvP,EAAA/M,EAAAhiB,KAAA+B,QAGA,IAAAhJ,EAAAiH,KAAA+uB,IAAA/M,GACAkd,EAAA,EACA,MAAAld,EAAA,IAAAkd,GAAA,KACAnmC,GAAAiH,KAAA+uB,IAAA/M,GAAAkd,EAGA,OAAAnmC,GAGA4tB,EAAApV,UAAA6tB,UAAA,SAAArQ,EAAA8P,GAEA,OADAA,GAAAP,EAAAvP,EAAA,EAAA/uB,KAAA+B,QACA/B,KAAA+uB,IAGApI,EAAApV,UAAA8tB,aAAA,SAAAtQ,EAAA8P,GAEA,OADAA,GAAAP,EAAAvP,EAAA,EAAA/uB,KAAA+B,QACA/B,KAAA+uB,GAAA/uB,KAAA+uB,EAAA,OAGApI,EAAApV,UAAA0pB,aAAA,SAAAlM,EAAA8P,GAEA,OADAA,GAAAP,EAAAvP,EAAA,EAAA/uB,KAAA+B,QACA/B,KAAA+uB,IAAA,EAAA/uB,KAAA+uB,EAAA,IAGApI,EAAApV,UAAA+tB,aAAA,SAAAvQ,EAAA8P,GAGA,OAFAA,GAAAP,EAAAvP,EAAA,EAAA/uB,KAAA+B,SAEA/B,KAAA+uB,GACA/uB,KAAA+uB,EAAA,MACA/uB,KAAA+uB,EAAA,QACA,SAAA/uB,KAAA+uB,EAAA,IAGApI,EAAApV,UAAAguB,aAAA,SAAAxQ,EAAA8P,GAGA,OAFAA,GAAAP,EAAAvP,EAAA,EAAA/uB,KAAA+B,QAEA,SAAA/B,KAAA+uB,IACA/uB,KAAA+uB,EAAA,OACA/uB,KAAA+uB,EAAA,MACA/uB,KAAA+uB,EAAA,KAGApI,EAAApV,UAAAiuB,UAAA,SAAAzQ,EAAA/M,EAAA6c,GACA9P,GAAA,EACA/M,GAAA,EACA6c,GAAAP,EAAAvP,EAAA/M,EAAAhiB,KAAA+B,QAEA,IAAAhJ,EAAAiH,KAAA+uB,GACAmQ,EAAA,EACA53B,EAAA,EACA,QAAAA,EAAA0a,IAAAkd,GAAA,KACAnmC,GAAAiH,KAAA+uB,EAAAznB,GAAA43B,EAMA,OAJAA,GAAA,IAEAnmC,GAAAmmC,IAAAnmC,GAAA0mB,KAAAgQ,IAAA,IAAAzN,IAEAjpB,GAGA4tB,EAAApV,UAAAkuB,UAAA,SAAA1Q,EAAA/M,EAAA6c,GACA9P,GAAA,EACA/M,GAAA,EACA6c,GAAAP,EAAAvP,EAAA/M,EAAAhiB,KAAA+B,QAEA,IAAAuF,EAAA0a,EACAkd,EAAA,EACAnmC,EAAAiH,KAAA+uB,IAAAznB,GACA,MAAAA,EAAA,IAAA43B,GAAA,KACAnmC,GAAAiH,KAAA+uB,IAAAznB,GAAA43B,EAMA,OAJAA,GAAA,IAEAnmC,GAAAmmC,IAAAnmC,GAAA0mB,KAAAgQ,IAAA,IAAAzN,IAEAjpB,GAGA4tB,EAAApV,UAAAmuB,SAAA,SAAA3Q,EAAA8P,GAEA,OADAA,GAAAP,EAAAvP,EAAA,EAAA/uB,KAAA+B,QACA,IAAA/B,KAAA+uB,IACA,OAAA/uB,KAAA+uB,GAAA,GADA/uB,KAAA+uB,IAIApI,EAAApV,UAAAouB,YAAA,SAAA5Q,EAAA8P,GACAA,GAAAP,EAAAvP,EAAA,EAAA/uB,KAAA+B,QACA,IAAAhJ,EAAAiH,KAAA+uB,GAAA/uB,KAAA+uB,EAAA,MACA,aAAAh2B,EAAA,WAAAA,KAGA4tB,EAAApV,UAAAquB,YAAA,SAAA7Q,EAAA8P,GACAA,GAAAP,EAAAvP,EAAA,EAAA/uB,KAAA+B,QACA,IAAAhJ,EAAAiH,KAAA+uB,EAAA,GAAA/uB,KAAA+uB,IAAA,EACA,aAAAh2B,EAAA,WAAAA,KAGA4tB,EAAApV,UAAAsuB,YAAA,SAAA9Q,EAAA8P,GAGA,OAFAA,GAAAP,EAAAvP,EAAA,EAAA/uB,KAAA+B,QAEA/B,KAAA+uB,GACA/uB,KAAA+uB,EAAA,MACA/uB,KAAA+uB,EAAA,OACA/uB,KAAA+uB,EAAA,QAGApI,EAAApV,UAAAuuB,YAAA,SAAA/Q,EAAA8P,GAGA,OAFAA,GAAAP,EAAAvP,EAAA,EAAA/uB,KAAA+B,QAEA/B,KAAA+uB,IAAA,GACA/uB,KAAA+uB,EAAA,OACA/uB,KAAA+uB,EAAA,MACA/uB,KAAA+uB,EAAA,IAGApI,EAAApV,UAAAwuB,YAAA,SAAAhR,EAAA8P,GAEA,OADAA,GAAAP,EAAAvP,EAAA,EAAA/uB,KAAA+B,QACAk2B,EAAAnJ,KAAA9uB,KAAA+uB,GAAA,SAGApI,EAAApV,UAAAyuB,YAAA,SAAAjR,EAAA8P,GAEA,OADAA,GAAAP,EAAAvP,EAAA,EAAA/uB,KAAA+B,QACAk2B,EAAAnJ,KAAA9uB,KAAA+uB,GAAA,SAGApI,EAAApV,UAAA0uB,aAAA,SAAAlR,EAAA8P,GAEA,OADAA,GAAAP,EAAAvP,EAAA,EAAA/uB,KAAA+B,QACAk2B,EAAAnJ,KAAA9uB,KAAA+uB,GAAA,SAGApI,EAAApV,UAAA2uB,aAAA,SAAAnR,EAAA8P,GAEA,OADAA,GAAAP,EAAAvP,EAAA,EAAA/uB,KAAA+B,QACAk2B,EAAAnJ,KAAA9uB,KAAA+uB,GAAA,SASApI,EAAApV,UAAA4uB,YAAA,SAAAzzB,EAAAqiB,EAAA/M,EAAA6c,GAIA,GAHAnyB,KACAqiB,GAAA,EACA/M,GAAA,GACA6c,EAAA,CACA,IAAAuB,EAAA3gB,KAAAgQ,IAAA,IAAAzN,GAAA,EACAuc,EAAAv+B,KAAA0M,EAAAqiB,EAAA/M,EAAAoe,EAAA,GAGA,IAAAlB,EAAA,EACA53B,EAAA,EACAtH,KAAA+uB,GAAA,IAAAriB,EACA,QAAApF,EAAA0a,IAAAkd,GAAA,KACAl/B,KAAA+uB,EAAAznB,GAAAoF,EAAAwyB,EAAA,IAGA,OAAAnQ,EAAA/M,GAGA2E,EAAApV,UAAA8uB,YAAA,SAAA3zB,EAAAqiB,EAAA/M,EAAA6c,GAIA,GAHAnyB,KACAqiB,GAAA,EACA/M,GAAA,GACA6c,EAAA,CACA,IAAAuB,EAAA3gB,KAAAgQ,IAAA,IAAAzN,GAAA,EACAuc,EAAAv+B,KAAA0M,EAAAqiB,EAAA/M,EAAAoe,EAAA,GAGA,IAAA94B,EAAA0a,EAAA,EACAkd,EAAA,EACAl/B,KAAA+uB,EAAAznB,GAAA,IAAAoF,EACA,QAAApF,GAAA,IAAA43B,GAAA,KACAl/B,KAAA+uB,EAAAznB,GAAAoF,EAAAwyB,EAAA,IAGA,OAAAnQ,EAAA/M,GAGA2E,EAAApV,UAAA+uB,WAAA,SAAA5zB,EAAAqiB,EAAA8P,GAMA,OALAnyB,KACAqiB,GAAA,EACA8P,GAAAN,EAAAv+B,KAAA0M,EAAAqiB,EAAA,SACApI,EAAA4R,sBAAA7rB,EAAA+S,KAAAoQ,MAAAnjB,IACA1M,KAAA+uB,GAAA,IAAAriB,EACAqiB,EAAA,GAWApI,EAAApV,UAAAgvB,cAAA,SAAA7zB,EAAAqiB,EAAA8P,GAUA,OATAnyB,KACAqiB,GAAA,EACA8P,GAAAN,EAAAv+B,KAAA0M,EAAAqiB,EAAA,WACApI,EAAA4R,qBACAv4B,KAAA+uB,GAAA,IAAAriB,EACA1M,KAAA+uB,EAAA,GAAAriB,IAAA,GAEA8xB,EAAAx+B,KAAA0M,EAAAqiB,GAAA,GAEAA,EAAA,GAGApI,EAAApV,UAAAivB,cAAA,SAAA9zB,EAAAqiB,EAAA8P,GAUA,OATAnyB,KACAqiB,GAAA,EACA8P,GAAAN,EAAAv+B,KAAA0M,EAAAqiB,EAAA,WACApI,EAAA4R,qBACAv4B,KAAA+uB,GAAAriB,IAAA,EACA1M,KAAA+uB,EAAA,OAAAriB,GAEA8xB,EAAAx+B,KAAA0M,EAAAqiB,GAAA,GAEAA,EAAA,GAUApI,EAAApV,UAAAkvB,cAAA,SAAA/zB,EAAAqiB,EAAA8P,GAYA,OAXAnyB,KACAqiB,GAAA,EACA8P,GAAAN,EAAAv+B,KAAA0M,EAAAqiB,EAAA,gBACApI,EAAA4R,qBACAv4B,KAAA+uB,EAAA,GAAAriB,IAAA,GACA1M,KAAA+uB,EAAA,GAAAriB,IAAA,GACA1M,KAAA+uB,EAAA,GAAAriB,IAAA,EACA1M,KAAA+uB,GAAA,IAAAriB,GAEAgyB,EAAA1+B,KAAA0M,EAAAqiB,GAAA,GAEAA,EAAA,GAGApI,EAAApV,UAAAmvB,cAAA,SAAAh0B,EAAAqiB,EAAA8P,GAYA,OAXAnyB,KACAqiB,GAAA,EACA8P,GAAAN,EAAAv+B,KAAA0M,EAAAqiB,EAAA,gBACApI,EAAA4R,qBACAv4B,KAAA+uB,GAAAriB,IAAA,GACA1M,KAAA+uB,EAAA,GAAAriB,IAAA,GACA1M,KAAA+uB,EAAA,GAAAriB,IAAA,EACA1M,KAAA+uB,EAAA,OAAAriB,GAEAgyB,EAAA1+B,KAAA0M,EAAAqiB,GAAA,GAEAA,EAAA,GAGApI,EAAApV,UAAAovB,WAAA,SAAAj0B,EAAAqiB,EAAA/M,EAAA6c,GAGA,GAFAnyB,KACAqiB,GAAA,GACA8P,EAAA,CACA,IAAA1R,EAAA1N,KAAAgQ,IAAA,IAAAzN,EAAA,GAEAuc,EAAAv+B,KAAA0M,EAAAqiB,EAAA/M,EAAAmL,EAAA,GAAAA,GAGA,IAAA7lB,EAAA,EACA43B,EAAA,EACA0B,EAAA,EACA5gC,KAAA+uB,GAAA,IAAAriB,EACA,QAAApF,EAAA0a,IAAAkd,GAAA,KACAxyB,EAAA,OAAAk0B,GAAA,IAAA5gC,KAAA+uB,EAAAznB,EAAA,KACAs5B,EAAA,GAEA5gC,KAAA+uB,EAAAznB,IAAAoF,EAAAwyB,GAAA,GAAA0B,EAAA,IAGA,OAAA7R,EAAA/M,GAGA2E,EAAApV,UAAAsvB,WAAA,SAAAn0B,EAAAqiB,EAAA/M,EAAA6c,GAGA,GAFAnyB,KACAqiB,GAAA,GACA8P,EAAA,CACA,IAAA1R,EAAA1N,KAAAgQ,IAAA,IAAAzN,EAAA,GAEAuc,EAAAv+B,KAAA0M,EAAAqiB,EAAA/M,EAAAmL,EAAA,GAAAA,GAGA,IAAA7lB,EAAA0a,EAAA,EACAkd,EAAA,EACA0B,EAAA,EACA5gC,KAAA+uB,EAAAznB,GAAA,IAAAoF,EACA,QAAApF,GAAA,IAAA43B,GAAA,KACAxyB,EAAA,OAAAk0B,GAAA,IAAA5gC,KAAA+uB,EAAAznB,EAAA,KACAs5B,EAAA,GAEA5gC,KAAA+uB,EAAAznB,IAAAoF,EAAAwyB,GAAA,GAAA0B,EAAA,IAGA,OAAA7R,EAAA/M,GAGA2E,EAAApV,UAAAuvB,UAAA,SAAAp0B,EAAAqiB,EAAA8P,GAOA,OANAnyB,KACAqiB,GAAA,EACA8P,GAAAN,EAAAv+B,KAAA0M,EAAAqiB,EAAA,YACApI,EAAA4R,sBAAA7rB,EAAA+S,KAAAoQ,MAAAnjB,IACAA,EAAA,IAAAA,EAAA,IAAAA,EAAA,GACA1M,KAAA+uB,GAAA,IAAAriB,EACAqiB,EAAA,GAGApI,EAAApV,UAAAwvB,aAAA,SAAAr0B,EAAAqiB,EAAA8P,GAUA,OATAnyB,KACAqiB,GAAA,EACA8P,GAAAN,EAAAv+B,KAAA0M,EAAAqiB,EAAA,gBACApI,EAAA4R,qBACAv4B,KAAA+uB,GAAA,IAAAriB,EACA1M,KAAA+uB,EAAA,GAAAriB,IAAA,GAEA8xB,EAAAx+B,KAAA0M,EAAAqiB,GAAA,GAEAA,EAAA,GAGApI,EAAApV,UAAAyvB,aAAA,SAAAt0B,EAAAqiB,EAAA8P,GAUA,OATAnyB,KACAqiB,GAAA,EACA8P,GAAAN,EAAAv+B,KAAA0M,EAAAqiB,EAAA,gBACApI,EAAA4R,qBACAv4B,KAAA+uB,GAAAriB,IAAA,EACA1M,KAAA+uB,EAAA,OAAAriB,GAEA8xB,EAAAx+B,KAAA0M,EAAAqiB,GAAA,GAEAA,EAAA,GAGApI,EAAApV,UAAA0vB,aAAA,SAAAv0B,EAAAqiB,EAAA8P,GAYA,OAXAnyB,KACAqiB,GAAA,EACA8P,GAAAN,EAAAv+B,KAAA0M,EAAAqiB,EAAA,0BACApI,EAAA4R,qBACAv4B,KAAA+uB,GAAA,IAAAriB,EACA1M,KAAA+uB,EAAA,GAAAriB,IAAA,EACA1M,KAAA+uB,EAAA,GAAAriB,IAAA,GACA1M,KAAA+uB,EAAA,GAAAriB,IAAA,IAEAgyB,EAAA1+B,KAAA0M,EAAAqiB,GAAA,GAEAA,EAAA,GAGApI,EAAApV,UAAA2vB,aAAA,SAAAx0B,EAAAqiB,EAAA8P,GAaA,OAZAnyB,KACAqiB,GAAA,EACA8P,GAAAN,EAAAv+B,KAAA0M,EAAAqiB,EAAA,0BACAriB,EAAA,IAAAA,EAAA,WAAAA,EAAA,GACAia,EAAA4R,qBACAv4B,KAAA+uB,GAAAriB,IAAA,GACA1M,KAAA+uB,EAAA,GAAAriB,IAAA,GACA1M,KAAA+uB,EAAA,GAAAriB,IAAA,EACA1M,KAAA+uB,EAAA,OAAAriB,GAEAgyB,EAAA1+B,KAAA0M,EAAAqiB,GAAA,GAEAA,EAAA,GAgBApI,EAAApV,UAAA4vB,aAAA,SAAAz0B,EAAAqiB,EAAA8P,GACA,OAAAD,EAAA5+B,KAAA0M,EAAAqiB,GAAA,EAAA8P,IAGAlY,EAAApV,UAAA6vB,aAAA,SAAA10B,EAAAqiB,EAAA8P,GACA,OAAAD,EAAA5+B,KAAA0M,EAAAqiB,GAAA,EAAA8P,IAWAlY,EAAApV,UAAA8vB,cAAA,SAAA30B,EAAAqiB,EAAA8P,GACA,OAAAC,EAAA9+B,KAAA0M,EAAAqiB,GAAA,EAAA8P,IAGAlY,EAAApV,UAAA+vB,cAAA,SAAA50B,EAAAqiB,EAAA8P,GACA,OAAAC,EAAA9+B,KAAA0M,EAAAqiB,GAAA,EAAA8P,IAIAlY,EAAApV,UAAAqoB,KAAA,SAAA/rB,EAAA0zB,EAAAj3B,EAAAE,GAQA,GAPAF,MAAA,GACAE,GAAA,IAAAA,MAAAxK,KAAA+B,QACAw/B,GAAA1zB,EAAA9L,SAAAw/B,EAAA1zB,EAAA9L,QACAw/B,MAAA,GACA/2B,EAAA,GAAAA,EAAAF,IAAAE,EAAAF,GAGAE,IAAAF,EAAA,SACA,OAAAuD,EAAA9L,QAAA,IAAA/B,KAAA+B,OAAA,SAGA,GAAAw/B,EAAA,EACA,UAAA7I,WAAA,6BAEA,GAAApuB,EAAA,GAAAA,GAAAtK,KAAA+B,OAAA,UAAA22B,WAAA,6BACA,GAAAluB,EAAA,YAAAkuB,WAAA,2BAGAluB,EAAAxK,KAAA+B,SAAAyI,EAAAxK,KAAA+B,QACA8L,EAAA9L,OAAAw/B,EAAA/2B,EAAAF,IACAE,EAAAqD,EAAA9L,OAAAw/B,EAAAj3B,GAGA,IACAhD,EADAib,EAAA/X,EAAAF,EAGA,GAAAtK,OAAA6N,GAAAvD,EAAAi3B,KAAA/2B,EAEA,IAAAlD,EAAAib,EAAA,EAAqBjb,GAAA,IAAQA,EAC7BuG,EAAAvG,EAAAi6B,GAAAvhC,KAAAsH,EAAAgD,QAEG,GAAAiY,EAAA,MAAAoE,EAAA4R,oBAEH,IAAAjxB,EAAA,EAAeA,EAAAib,IAASjb,EACxBuG,EAAAvG,EAAAi6B,GAAAvhC,KAAAsH,EAAAgD,QAGAgY,WAAA/Q,UAAAiwB,IAAAn+B,KACAwK,EACA7N,KAAAq4B,SAAA/tB,IAAAiY,GACAgf,GAIA,OAAAhf,GAOAoE,EAAApV,UAAA8nB,KAAA,SAAAtgC,EAAAuR,EAAAE,EAAA8uB,GAEA,qBAAAvgC,EAAA,CASA,GARA,kBAAAuR,GACAgvB,EAAAhvB,EACAA,EAAA,EACAE,EAAAxK,KAAA+B,QACK,kBAAAyI,IACL8uB,EAAA9uB,EACAA,EAAAxK,KAAA+B,QAEA,IAAAhJ,EAAAgJ,OAAA,CACA,IAAA4F,EAAA5O,EAAAyV,WAAA,GACA7G,EAAA,MACA5O,EAAA4O,GAGA,QAAAxB,IAAAmzB,GAAA,kBAAAA,EACA,UAAAR,UAAA,6BAEA,qBAAAQ,IAAA3S,EAAA4S,WAAAD,GACA,UAAAR,UAAA,qBAAAQ,OAEG,kBAAAvgC,IACHA,GAAA,KAIA,GAAAuR,EAAA,GAAAtK,KAAA+B,OAAAuI,GAAAtK,KAAA+B,OAAAyI,EACA,UAAAkuB,WAAA,sBAGA,GAAAluB,GAAAF,EACA,OAAAtK,KAQA,IAAAsH,EACA,GANAgD,KAAA,EACAE,OAAArE,IAAAqE,EAAAxK,KAAA+B,OAAAyI,IAAA,EAEAzR,MAAA,GAGA,kBAAAA,EACA,IAAAuO,EAAAgD,EAAmBhD,EAAAkD,IAASlD,EAC5BtH,KAAAsH,GAAAvO,MAEG,CACH,IAAAslC,EAAA1X,EAAAgT,SAAA5gC,GACAA,EACAkhC,EAAA,IAAAtT,EAAA5tB,EAAAugC,GAAAv2B,YACAwf,EAAA8b,EAAAt8B,OACA,IAAAuF,EAAA,EAAeA,EAAAkD,EAAAF,IAAiBhD,EAChCtH,KAAAsH,EAAAgD,GAAA+zB,EAAA/2B,EAAAib,GAIA,OAAAviB,MAMA,IAAAyhC,EAAA,qBAEA,SAAAC,EAAAjE,GAIA,GAFAA,EAAAkE,EAAAlE,GAAA9kC,QAAA8oC,EAAA,IAEAhE,EAAA17B,OAAA,WAEA,MAAA07B,EAAA17B,OAAA,MACA07B,GAAA,IAEA,OAAAA,EAGA,SAAAkE,EAAAlE,GACA,OAAAA,EAAAre,KAAAqe,EAAAre,OACAqe,EAAA9kC,QAAA,iBAGA,SAAAylC,EAAAjgB,GACA,OAAAA,EAAA,OAAAA,EAAApb,SAAA,IACAob,EAAApb,SAAA,IAGA,SAAAk3B,EAAA5T,EAAAub,GAEA,IAAAtF,EADAsF,KAAApS,IAMA,IAJA,IAAAztB,EAAAskB,EAAAtkB,OACA8/B,EAAA,KACAxD,KAEA/2B,EAAA,EAAiBA,EAAAvF,IAAYuF,EAAA,CAI7B,GAHAg1B,EAAAjW,EAAA7X,WAAAlH,GAGAg1B,EAAA,OAAAA,EAAA,OAEA,IAAAuF,EAAA,CAEA,GAAAvF,EAAA,QAEAsF,GAAA,OAAAvD,EAAAhuB,KAAA,aACA,SACS,GAAA/I,EAAA,IAAAvF,EAAA,EAET6/B,GAAA,OAAAvD,EAAAhuB,KAAA,aACA,SAIAwxB,EAAAvF,EAEA,SAIA,GAAAA,EAAA,QACAsF,GAAA,OAAAvD,EAAAhuB,KAAA,aACAwxB,EAAAvF,EACA,SAIAA,EAAA,OAAAuF,EAAA,UAAAvF,EAAA,YACKuF,IAELD,GAAA,OAAAvD,EAAAhuB,KAAA,aAMA,GAHAwxB,EAAA,KAGAvF,EAAA,KACA,IAAAsF,GAAA,WACAvD,EAAAhuB,KAAAisB,QACK,GAAAA,EAAA,MACL,IAAAsF,GAAA,WACAvD,EAAAhuB,KACAisB,GAAA,MACA,GAAAA,EAAA,UAEK,GAAAA,EAAA,OACL,IAAAsF,GAAA,WACAvD,EAAAhuB,KACAisB,GAAA,OACAA,GAAA,SACA,GAAAA,EAAA,SAEK,MAAAA,EAAA,SASL,UAAApf,MAAA,sBARA,IAAA0kB,GAAA,WACAvD,EAAAhuB,KACAisB,GAAA,OACAA,GAAA,UACAA,GAAA,SACA,GAAAA,EAAA,MAOA,OAAA+B,EAGA,SAAA1C,EAAA8B,GAEA,IADA,IAAAqE,KACAx6B,EAAA,EAAiBA,EAAAm2B,EAAA17B,SAAgBuF,EAEjCw6B,EAAAzxB,KAAA,IAAAotB,EAAAjvB,WAAAlH,IAEA,OAAAw6B,EAGA,SAAA/F,EAAA0B,EAAAmE,GAGA,IAFA,IAAAjS,EAAAoS,EAAAC,EACAF,KACAx6B,EAAA,EAAiBA,EAAAm2B,EAAA17B,SAAgBuF,EAAA,CACjC,IAAAs6B,GAAA,WAEAjS,EAAA8N,EAAAjvB,WAAAlH,GACAy6B,EAAApS,GAAA,EACAqS,EAAArS,EAAA,IACAmS,EAAAzxB,KAAA2xB,GACAF,EAAAzxB,KAAA0xB,GAGA,OAAAD,EAGA,SAAA5H,EAAAuD,GACA,OAAAzF,EAAA/V,YAAAyf,EAAAjE,IAGA,SAAAhC,GAAA/f,EAAAumB,EAAAlT,EAAAhtB,GACA,QAAAuF,EAAA,EAAiBA,EAAAvF,IAAYuF,EAAA,CAC7B,GAAAA,EAAAynB,GAAAkT,EAAAlgC,QAAAuF,GAAAoU,EAAA3Z,OAAA,MACAkgC,EAAA36B,EAAAynB,GAAArT,EAAApU,GAEA,OAAAA,EAGA,SAAAuyB,GAAA9gC,GACA,OAAAA,oDCxvDA,IAAAjC,EAAAD,EAAA,QAEAC,EAAA2tB,SAAAyd,yBAAA,SAAAlrC,GACA,IAAA2tB,EAAA3tB,EAAA4tB,iBACA/d,EAAA8d,EAAA,GAAAG,KACAC,EAAA/tB,EAAAguB,cAAAne,EAAAW,MACAyd,GAAA,IAAAF,EAAA3K,KAEA,GAAA6K,EACAjuB,EAAAouB,YAAA,mBAIA,GAAApuB,EAAAgP,QAAA+M,eACA/b,EAAAouB,YAAA,iBAEA,CACA,IAAA+c,EAAAj/B,MAAAlM,EAAAgP,QAAA8M,QAAA,GAAAnF,KAAA,KACA3W,EAAAiW,iBAAAk1B,KAIArrC,EAAA2tB,SAAA2d,gCAAA,SAAAprC,GACA,IAAA2tB,EAAA3tB,EAAA4tB,iBACA/d,EAAA8d,EAAA,GAAAG,KACAC,EAAA/tB,EAAAguB,cAAAne,EAAAW,MACAyd,GAAA,IAAAF,EAAA3K,KAEA,GAAA6K,EACAjuB,EAAAouB,YAAA,mBAIA,GAAApuB,EAAAgP,QAAA+M,eACA/b,EAAAouB,YAAA,iBAEA,CACA,IAAA+c,EAAAj/B,MAAAlM,EAAAgP,QAAA8M,QAAA,GAAAnF,KAAA,KACA3W,EAAAiW,iBAAAk1B","file":"js/3.637bf3ed.js","sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  CodeMirror.defineOption(\"placeholder\", \"\", function(cm, val, old) {\n    var prev = old && old != CodeMirror.Init;\n    if (val && !prev) {\n      cm.on(\"blur\", onBlur);\n      cm.on(\"change\", onChange);\n      cm.on(\"swapDoc\", onChange);\n      onChange(cm);\n    } else if (!val && prev) {\n      cm.off(\"blur\", onBlur);\n      cm.off(\"change\", onChange);\n      cm.off(\"swapDoc\", onChange);\n      clearPlaceholder(cm);\n      var wrapper = cm.getWrapperElement();\n      wrapper.className = wrapper.className.replace(\" CodeMirror-empty\", \"\");\n    }\n\n    if (val && !cm.hasFocus()) onBlur(cm);\n  });\n\n  function clearPlaceholder(cm) {\n    if (cm.state.placeholder) {\n      cm.state.placeholder.parentNode.removeChild(cm.state.placeholder);\n      cm.state.placeholder = null;\n    }\n  }\n  function setPlaceholder(cm) {\n    clearPlaceholder(cm);\n    var elt = cm.state.placeholder = document.createElement(\"pre\");\n    elt.style.cssText = \"height: 0; overflow: visible\";\n    elt.style.direction = cm.getOption(\"direction\");\n    elt.className = \"CodeMirror-placeholder\";\n    var placeHolder = cm.getOption(\"placeholder\")\n    if (typeof placeHolder == \"string\") placeHolder = document.createTextNode(placeHolder)\n    elt.appendChild(placeHolder)\n    cm.display.lineSpace.insertBefore(elt, cm.display.lineSpace.firstChild);\n  }\n\n  function onBlur(cm) {\n    if (isEmpty(cm)) setPlaceholder(cm);\n  }\n  function onChange(cm) {\n    var wrapper = cm.getWrapperElement(), empty = isEmpty(cm);\n    wrapper.className = wrapper.className.replace(\" CodeMirror-empty\", \"\") + (empty ? \" CodeMirror-empty\" : \"\");\n\n    if (empty) setPlaceholder(cm);\n    else clearPlaceholder(cm);\n  }\n\n  function isEmpty(cm) {\n    return (cm.lineCount() === 1) && (cm.getLine(0) === \"\");\n  }\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar htmlConfig = {\n  autoSelfClosers: {'area': true, 'base': true, 'br': true, 'col': true, 'command': true,\n                    'embed': true, 'frame': true, 'hr': true, 'img': true, 'input': true,\n                    'keygen': true, 'link': true, 'meta': true, 'param': true, 'source': true,\n                    'track': true, 'wbr': true, 'menuitem': true},\n  implicitlyClosed: {'dd': true, 'li': true, 'optgroup': true, 'option': true, 'p': true,\n                     'rp': true, 'rt': true, 'tbody': true, 'td': true, 'tfoot': true,\n                     'th': true, 'tr': true},\n  contextGrabbers: {\n    'dd': {'dd': true, 'dt': true},\n    'dt': {'dd': true, 'dt': true},\n    'li': {'li': true},\n    'option': {'option': true, 'optgroup': true},\n    'optgroup': {'optgroup': true},\n    'p': {'address': true, 'article': true, 'aside': true, 'blockquote': true, 'dir': true,\n          'div': true, 'dl': true, 'fieldset': true, 'footer': true, 'form': true,\n          'h1': true, 'h2': true, 'h3': true, 'h4': true, 'h5': true, 'h6': true,\n          'header': true, 'hgroup': true, 'hr': true, 'menu': true, 'nav': true, 'ol': true,\n          'p': true, 'pre': true, 'section': true, 'table': true, 'ul': true},\n    'rp': {'rp': true, 'rt': true},\n    'rt': {'rp': true, 'rt': true},\n    'tbody': {'tbody': true, 'tfoot': true},\n    'td': {'td': true, 'th': true},\n    'tfoot': {'tbody': true},\n    'th': {'td': true, 'th': true},\n    'thead': {'tbody': true, 'tfoot': true},\n    'tr': {'tr': true}\n  },\n  doNotIndent: {\"pre\": true},\n  allowUnquoted: true,\n  allowMissing: true,\n  caseFold: true\n}\n\nvar xmlConfig = {\n  autoSelfClosers: {},\n  implicitlyClosed: {},\n  contextGrabbers: {},\n  doNotIndent: {},\n  allowUnquoted: false,\n  allowMissing: false,\n  allowMissingTagName: false,\n  caseFold: false\n}\n\nCodeMirror.defineMode(\"xml\", function(editorConf, config_) {\n  var indentUnit = editorConf.indentUnit\n  var config = {}\n  var defaults = config_.htmlMode ? htmlConfig : xmlConfig\n  for (var prop in defaults) config[prop] = defaults[prop]\n  for (var prop in config_) config[prop] = config_[prop]\n\n  // Return variables for tokenizers\n  var type, setStyle;\n\n  function inText(stream, state) {\n    function chain(parser) {\n      state.tokenize = parser;\n      return parser(stream, state);\n    }\n\n    var ch = stream.next();\n    if (ch == \"<\") {\n      if (stream.eat(\"!\")) {\n        if (stream.eat(\"[\")) {\n          if (stream.match(\"CDATA[\")) return chain(inBlock(\"atom\", \"]]>\"));\n          else return null;\n        } else if (stream.match(\"--\")) {\n          return chain(inBlock(\"comment\", \"-->\"));\n        } else if (stream.match(\"DOCTYPE\", true, true)) {\n          stream.eatWhile(/[\\w\\._\\-]/);\n          return chain(doctype(1));\n        } else {\n          return null;\n        }\n      } else if (stream.eat(\"?\")) {\n        stream.eatWhile(/[\\w\\._\\-]/);\n        state.tokenize = inBlock(\"meta\", \"?>\");\n        return \"meta\";\n      } else {\n        type = stream.eat(\"/\") ? \"closeTag\" : \"openTag\";\n        state.tokenize = inTag;\n        return \"tag bracket\";\n      }\n    } else if (ch == \"&\") {\n      var ok;\n      if (stream.eat(\"#\")) {\n        if (stream.eat(\"x\")) {\n          ok = stream.eatWhile(/[a-fA-F\\d]/) && stream.eat(\";\");\n        } else {\n          ok = stream.eatWhile(/[\\d]/) && stream.eat(\";\");\n        }\n      } else {\n        ok = stream.eatWhile(/[\\w\\.\\-:]/) && stream.eat(\";\");\n      }\n      return ok ? \"atom\" : \"error\";\n    } else {\n      stream.eatWhile(/[^&<]/);\n      return null;\n    }\n  }\n  inText.isInText = true;\n\n  function inTag(stream, state) {\n    var ch = stream.next();\n    if (ch == \">\" || (ch == \"/\" && stream.eat(\">\"))) {\n      state.tokenize = inText;\n      type = ch == \">\" ? \"endTag\" : \"selfcloseTag\";\n      return \"tag bracket\";\n    } else if (ch == \"=\") {\n      type = \"equals\";\n      return null;\n    } else if (ch == \"<\") {\n      state.tokenize = inText;\n      state.state = baseState;\n      state.tagName = state.tagStart = null;\n      var next = state.tokenize(stream, state);\n      return next ? next + \" tag error\" : \"tag error\";\n    } else if (/[\\'\\\"]/.test(ch)) {\n      state.tokenize = inAttribute(ch);\n      state.stringStartCol = stream.column();\n      return state.tokenize(stream, state);\n    } else {\n      stream.match(/^[^\\s\\u00a0=<>\\\"\\']*[^\\s\\u00a0=<>\\\"\\'\\/]/);\n      return \"word\";\n    }\n  }\n\n  function inAttribute(quote) {\n    var closure = function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.next() == quote) {\n          state.tokenize = inTag;\n          break;\n        }\n      }\n      return \"string\";\n    };\n    closure.isInAttribute = true;\n    return closure;\n  }\n\n  function inBlock(style, terminator) {\n    return function(stream, state) {\n      while (!stream.eol()) {\n        if (stream.match(terminator)) {\n          state.tokenize = inText;\n          break;\n        }\n        stream.next();\n      }\n      return style;\n    };\n  }\n  function doctype(depth) {\n    return function(stream, state) {\n      var ch;\n      while ((ch = stream.next()) != null) {\n        if (ch == \"<\") {\n          state.tokenize = doctype(depth + 1);\n          return state.tokenize(stream, state);\n        } else if (ch == \">\") {\n          if (depth == 1) {\n            state.tokenize = inText;\n            break;\n          } else {\n            state.tokenize = doctype(depth - 1);\n            return state.tokenize(stream, state);\n          }\n        }\n      }\n      return \"meta\";\n    };\n  }\n\n  function Context(state, tagName, startOfLine) {\n    this.prev = state.context;\n    this.tagName = tagName;\n    this.indent = state.indented;\n    this.startOfLine = startOfLine;\n    if (config.doNotIndent.hasOwnProperty(tagName) || (state.context && state.context.noIndent))\n      this.noIndent = true;\n  }\n  function popContext(state) {\n    if (state.context) state.context = state.context.prev;\n  }\n  function maybePopContext(state, nextTagName) {\n    var parentTagName;\n    while (true) {\n      if (!state.context) {\n        return;\n      }\n      parentTagName = state.context.tagName;\n      if (!config.contextGrabbers.hasOwnProperty(parentTagName) ||\n          !config.contextGrabbers[parentTagName].hasOwnProperty(nextTagName)) {\n        return;\n      }\n      popContext(state);\n    }\n  }\n\n  function baseState(type, stream, state) {\n    if (type == \"openTag\") {\n      state.tagStart = stream.column();\n      return tagNameState;\n    } else if (type == \"closeTag\") {\n      return closeTagNameState;\n    } else {\n      return baseState;\n    }\n  }\n  function tagNameState(type, stream, state) {\n    if (type == \"word\") {\n      state.tagName = stream.current();\n      setStyle = \"tag\";\n      return attrState;\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return attrState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return tagNameState;\n    }\n  }\n  function closeTagNameState(type, stream, state) {\n    if (type == \"word\") {\n      var tagName = stream.current();\n      if (state.context && state.context.tagName != tagName &&\n          config.implicitlyClosed.hasOwnProperty(state.context.tagName))\n        popContext(state);\n      if ((state.context && state.context.tagName == tagName) || config.matchClosing === false) {\n        setStyle = \"tag\";\n        return closeState;\n      } else {\n        setStyle = \"tag error\";\n        return closeStateErr;\n      }\n    } else if (config.allowMissingTagName && type == \"endTag\") {\n      setStyle = \"tag bracket\";\n      return closeState(type, stream, state);\n    } else {\n      setStyle = \"error\";\n      return closeStateErr;\n    }\n  }\n\n  function closeState(type, _stream, state) {\n    if (type != \"endTag\") {\n      setStyle = \"error\";\n      return closeState;\n    }\n    popContext(state);\n    return baseState;\n  }\n  function closeStateErr(type, stream, state) {\n    setStyle = \"error\";\n    return closeState(type, stream, state);\n  }\n\n  function attrState(type, _stream, state) {\n    if (type == \"word\") {\n      setStyle = \"attribute\";\n      return attrEqState;\n    } else if (type == \"endTag\" || type == \"selfcloseTag\") {\n      var tagName = state.tagName, tagStart = state.tagStart;\n      state.tagName = state.tagStart = null;\n      if (type == \"selfcloseTag\" ||\n          config.autoSelfClosers.hasOwnProperty(tagName)) {\n        maybePopContext(state, tagName);\n      } else {\n        maybePopContext(state, tagName);\n        state.context = new Context(state, tagName, tagStart == state.indented);\n      }\n      return baseState;\n    }\n    setStyle = \"error\";\n    return attrState;\n  }\n  function attrEqState(type, stream, state) {\n    if (type == \"equals\") return attrValueState;\n    if (!config.allowMissing) setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrValueState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    if (type == \"word\" && config.allowUnquoted) {setStyle = \"string\"; return attrState;}\n    setStyle = \"error\";\n    return attrState(type, stream, state);\n  }\n  function attrContinuedState(type, stream, state) {\n    if (type == \"string\") return attrContinuedState;\n    return attrState(type, stream, state);\n  }\n\n  return {\n    startState: function(baseIndent) {\n      var state = {tokenize: inText,\n                   state: baseState,\n                   indented: baseIndent || 0,\n                   tagName: null, tagStart: null,\n                   context: null}\n      if (baseIndent != null) state.baseIndent = baseIndent\n      return state\n    },\n\n    token: function(stream, state) {\n      if (!state.tagName && stream.sol())\n        state.indented = stream.indentation();\n\n      if (stream.eatSpace()) return null;\n      type = null;\n      var style = state.tokenize(stream, state);\n      if ((style || type) && style != \"comment\") {\n        setStyle = null;\n        state.state = state.state(type || style, stream, state);\n        if (setStyle)\n          style = setStyle == \"error\" ? style + \" error\" : setStyle;\n      }\n      return style;\n    },\n\n    indent: function(state, textAfter, fullLine) {\n      var context = state.context;\n      // Indent multi-line strings (e.g. css).\n      if (state.tokenize.isInAttribute) {\n        if (state.tagStart == state.indented)\n          return state.stringStartCol + 1;\n        else\n          return state.indented + indentUnit;\n      }\n      if (context && context.noIndent) return CodeMirror.Pass;\n      if (state.tokenize != inTag && state.tokenize != inText)\n        return fullLine ? fullLine.match(/^(\\s*)/)[0].length : 0;\n      // Indent the starts of attribute names.\n      if (state.tagName) {\n        if (config.multilineTagIndentPastTag !== false)\n          return state.tagStart + state.tagName.length + 2;\n        else\n          return state.tagStart + indentUnit * (config.multilineTagIndentFactor || 1);\n      }\n      if (config.alignCDATA && /<!\\[CDATA\\[/.test(textAfter)) return 0;\n      var tagAfter = textAfter && /^<(\\/)?([\\w_:\\.-]*)/.exec(textAfter);\n      if (tagAfter && tagAfter[1]) { // Closing tag spotted\n        while (context) {\n          if (context.tagName == tagAfter[2]) {\n            context = context.prev;\n            break;\n          } else if (config.implicitlyClosed.hasOwnProperty(context.tagName)) {\n            context = context.prev;\n          } else {\n            break;\n          }\n        }\n      } else if (tagAfter) { // Opening tag spotted\n        while (context) {\n          var grabbers = config.contextGrabbers[context.tagName];\n          if (grabbers && grabbers.hasOwnProperty(tagAfter[2]))\n            context = context.prev;\n          else\n            break;\n        }\n      }\n      while (context && context.prev && !context.startOfLine)\n        context = context.prev;\n      if (context) return context.indent + indentUnit;\n      else return state.baseIndent || 0;\n    },\n\n    electricInput: /<\\/[\\s\\w:]+>$/,\n    blockCommentStart: \"<!--\",\n    blockCommentEnd: \"-->\",\n\n    configuration: config.htmlMode ? \"html\" : \"xml\",\n    helperType: config.htmlMode ? \"html\" : \"xml\",\n\n    skipAttribute: function(state) {\n      if (state.state == attrValueState)\n        state.state = attrState\n    }\n  };\n});\n\nCodeMirror.defineMIME(\"text/xml\", \"xml\");\nCodeMirror.defineMIME(\"application/xml\", \"xml\");\nif (!CodeMirror.mimeModes.hasOwnProperty(\"text/html\"))\n  CodeMirror.defineMIME(\"text/html\", {name: \"xml\", htmlMode: true});\n\n});\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*global require,module*/\n\"use strict\";\nvar CodeMirror = require(\"codemirror\");\nrequire(\"codemirror/addon/edit/continuelist.js\");\nrequire(\"./codemirror/tablist\");\nrequire(\"codemirror/addon/display/fullscreen.js\");\nrequire(\"codemirror/mode/markdown/markdown.js\");\nrequire(\"codemirror/addon/mode/overlay.js\");\nrequire(\"codemirror/addon/display/placeholder.js\");\nrequire(\"codemirror/addon/selection/mark-selection.js\");\nrequire(\"codemirror/mode/gfm/gfm.js\");\nrequire(\"codemirror/mode/xml/xml.js\");\nvar CodeMirrorSpellChecker = require(\"codemirror-spell-checker\");\nvar marked = require(\"marked\");\n\n\n// Some variables\nvar isMac = /Mac/.test(navigator.platform);\n\n// Mapping of actions that can be bound to keyboard shortcuts or toolbar buttons\nvar bindings = {\n\t\"toggleBold\": toggleBold,\n\t\"toggleItalic\": toggleItalic,\n\t\"drawLink\": drawLink,\n\t\"toggleHeadingSmaller\": toggleHeadingSmaller,\n\t\"toggleHeadingBigger\": toggleHeadingBigger,\n\t\"drawImage\": drawImage,\n\t\"toggleBlockquote\": toggleBlockquote,\n\t\"toggleOrderedList\": toggleOrderedList,\n\t\"toggleUnorderedList\": toggleUnorderedList,\n\t\"toggleCodeBlock\": toggleCodeBlock,\n\t\"togglePreview\": togglePreview,\n\t\"toggleStrikethrough\": toggleStrikethrough,\n\t\"toggleHeading1\": toggleHeading1,\n\t\"toggleHeading2\": toggleHeading2,\n\t\"toggleHeading3\": toggleHeading3,\n\t\"cleanBlock\": cleanBlock,\n\t\"drawTable\": drawTable,\n\t\"drawHorizontalRule\": drawHorizontalRule,\n\t\"undo\": undo,\n\t\"redo\": redo,\n\t\"toggleSideBySide\": toggleSideBySide,\n\t\"toggleFullScreen\": toggleFullScreen\n};\n\nvar shortcuts = {\n\t\"toggleBold\": \"Cmd-B\",\n\t\"toggleItalic\": \"Cmd-I\",\n\t\"drawLink\": \"Cmd-K\",\n\t\"toggleHeadingSmaller\": \"Cmd-H\",\n\t\"toggleHeadingBigger\": \"Shift-Cmd-H\",\n\t\"cleanBlock\": \"Cmd-E\",\n\t\"drawImage\": \"Cmd-Alt-I\",\n\t\"toggleBlockquote\": \"Cmd-'\",\n\t\"toggleOrderedList\": \"Cmd-Alt-L\",\n\t\"toggleUnorderedList\": \"Cmd-L\",\n\t\"toggleCodeBlock\": \"Cmd-Alt-C\",\n\t\"togglePreview\": \"Cmd-P\",\n\t\"toggleSideBySide\": \"F9\",\n\t\"toggleFullScreen\": \"F11\"\n};\n\nvar getBindingName = function(f) {\n\tfor(var key in bindings) {\n\t\tif(bindings[key] === f) {\n\t\t\treturn key;\n\t\t}\n\t}\n\treturn null;\n};\n\nvar isMobile = function() {\n\tvar check = false;\n\t(function(a) {\n\t\tif(/(android|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|mobile.+firefox|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows ce|xda|xiino|android|ipad|playbook|silk/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) check = true;\n\t})(navigator.userAgent || navigator.vendor || window.opera);\n\treturn check;\n};\n\n\n/**\n * Fix shortcut. Mac use Command, others use Ctrl.\n */\nfunction fixShortcut(name) {\n\tif(isMac) {\n\t\tname = name.replace(\"Ctrl\", \"Cmd\");\n\t} else {\n\t\tname = name.replace(\"Cmd\", \"Ctrl\");\n\t}\n\treturn name;\n}\n\n\n/**\n * Create icon element for toolbar.\n */\nfunction createIcon(options, enableTooltips, shortcuts) {\n\toptions = options || {};\n\tvar el = document.createElement(\"a\");\n\tenableTooltips = (enableTooltips == undefined) ? true : enableTooltips;\n\n\tif(options.title && enableTooltips) {\n\t\tel.title = createTootlip(options.title, options.action, shortcuts);\n\n\t\tif(isMac) {\n\t\t\tel.title = el.title.replace(\"Ctrl\", \"⌘\");\n\t\t\tel.title = el.title.replace(\"Alt\", \"⌥\");\n\t\t}\n\t}\n\n\tel.tabIndex = -1;\n\tel.className = options.className;\n\treturn el;\n}\n\nfunction createSep() {\n\tvar el = document.createElement(\"i\");\n\tel.className = \"separator\";\n\tel.innerHTML = \"|\";\n\treturn el;\n}\n\nfunction createTootlip(title, action, shortcuts) {\n\tvar actionName;\n\tvar tooltip = title;\n\n\tif(action) {\n\t\tactionName = getBindingName(action);\n\t\tif(shortcuts[actionName]) {\n\t\t\ttooltip += \" (\" + fixShortcut(shortcuts[actionName]) + \")\";\n\t\t}\n\t}\n\n\treturn tooltip;\n}\n\n/**\n * The state of CodeMirror at the given position.\n */\nfunction getState(cm, pos) {\n\tpos = pos || cm.getCursor(\"start\");\n\tvar stat = cm.getTokenAt(pos);\n\tif(!stat.type) return {};\n\n\tvar types = stat.type.split(\" \");\n\n\tvar ret = {},\n\t\tdata, text;\n\tfor(var i = 0; i < types.length; i++) {\n\t\tdata = types[i];\n\t\tif(data === \"strong\") {\n\t\t\tret.bold = true;\n\t\t} else if(data === \"variable-2\") {\n\t\t\ttext = cm.getLine(pos.line);\n\t\t\tif(/^\\s*\\d+\\.\\s/.test(text)) {\n\t\t\t\tret[\"ordered-list\"] = true;\n\t\t\t} else {\n\t\t\t\tret[\"unordered-list\"] = true;\n\t\t\t}\n\t\t} else if(data === \"atom\") {\n\t\t\tret.quote = true;\n\t\t} else if(data === \"em\") {\n\t\t\tret.italic = true;\n\t\t} else if(data === \"quote\") {\n\t\t\tret.quote = true;\n\t\t} else if(data === \"strikethrough\") {\n\t\t\tret.strikethrough = true;\n\t\t} else if(data === \"comment\") {\n\t\t\tret.code = true;\n\t\t} else if(data === \"link\") {\n\t\t\tret.link = true;\n\t\t} else if(data === \"tag\") {\n\t\t\tret.image = true;\n\t\t} else if(data.match(/^header(\\-[1-6])?$/)) {\n\t\t\tret[data.replace(\"header\", \"heading\")] = true;\n\t\t}\n\t}\n\treturn ret;\n}\n\n\n// Saved overflow setting\nvar saved_overflow = \"\";\n\n/**\n * Toggle full screen of the editor.\n */\nfunction toggleFullScreen(editor) {\n\t// Set fullscreen\n\tvar cm = editor.codemirror;\n\tcm.setOption(\"fullScreen\", !cm.getOption(\"fullScreen\"));\n\n\n\t// Prevent scrolling on body during fullscreen active\n\tif(cm.getOption(\"fullScreen\")) {\n\t\tsaved_overflow = document.body.style.overflow;\n\t\tdocument.body.style.overflow = \"hidden\";\n\t} else {\n\t\tdocument.body.style.overflow = saved_overflow;\n\t}\n\n\n\t// Update toolbar class\n\tvar wrap = cm.getWrapperElement();\n\n\tif(!/fullscreen/.test(wrap.previousSibling.className)) {\n\t\twrap.previousSibling.className += \" fullscreen\";\n\t} else {\n\t\twrap.previousSibling.className = wrap.previousSibling.className.replace(/\\s*fullscreen\\b/, \"\");\n\t}\n\n\n\t// Update toolbar button\n\tvar toolbarButton = editor.toolbarElements.fullscreen;\n\n\tif(!/active/.test(toolbarButton.className)) {\n\t\ttoolbarButton.className += \" active\";\n\t} else {\n\t\ttoolbarButton.className = toolbarButton.className.replace(/\\s*active\\s*/g, \"\");\n\t}\n\n\n\t// Hide side by side if needed\n\tvar sidebyside = cm.getWrapperElement().nextSibling;\n\tif(/editor-preview-active-side/.test(sidebyside.className))\n\t\ttoggleSideBySide(editor);\n}\n\n\n/**\n * Action for toggling bold.\n */\nfunction toggleBold(editor) {\n\t_toggleBlock(editor, \"bold\", editor.options.blockStyles.bold);\n}\n\n\n/**\n * Action for toggling italic.\n */\nfunction toggleItalic(editor) {\n\t_toggleBlock(editor, \"italic\", editor.options.blockStyles.italic);\n}\n\n\n/**\n * Action for toggling strikethrough.\n */\nfunction toggleStrikethrough(editor) {\n\t_toggleBlock(editor, \"strikethrough\", \"~~\");\n}\n\n/**\n * Action for toggling code block.\n */\nfunction toggleCodeBlock(editor) {\n\tvar fenceCharsToInsert = editor.options.blockStyles.code;\n\n\tfunction fencing_line(line) {\n\t\t/* return true, if this is a ``` or ~~~ line */\n\t\tif(typeof line !== \"object\") {\n\t\t\tthrow \"fencing_line() takes a 'line' object (not a line number, or line text).  Got: \" + typeof line + \": \" + line;\n\t\t}\n\t\treturn line.styles && line.styles[2] && line.styles[2].indexOf(\"formatting-code-block\") !== -1;\n\t}\n\n\tfunction token_state(token) {\n\t\t// base goes an extra level deep when mode backdrops are used, e.g. spellchecker on\n\t\treturn token.state.base.base || token.state.base;\n\t}\n\n\tfunction code_type(cm, line_num, line, firstTok, lastTok) {\n\t\t/*\n\t\t * Return \"single\", \"indented\", \"fenced\" or false\n\t\t *\n\t\t * cm and line_num are required.  Others are optional for efficiency\n\t\t *   To check in the middle of a line, pass in firstTok yourself.\n\t\t */\n\t\tline = line || cm.getLineHandle(line_num);\n\t\tfirstTok = firstTok || cm.getTokenAt({\n\t\t\tline: line_num,\n\t\t\tch: 1\n\t\t});\n\t\tlastTok = lastTok || (!!line.text && cm.getTokenAt({\n\t\t\tline: line_num,\n\t\t\tch: line.text.length - 1\n\t\t}));\n\t\tvar types = firstTok.type ? firstTok.type.split(\" \") : [];\n\t\tif(lastTok && token_state(lastTok).indentedCode) {\n\t\t\t// have to check last char, since first chars of first line aren\"t marked as indented\n\t\t\treturn \"indented\";\n\t\t} else if(types.indexOf(\"comment\") === -1) {\n\t\t\t// has to be after \"indented\" check, since first chars of first indented line aren\"t marked as such\n\t\t\treturn false;\n\t\t} else if(token_state(firstTok).fencedChars || token_state(lastTok).fencedChars || fencing_line(line)) {\n\t\t\treturn \"fenced\";\n\t\t} else {\n\t\t\treturn \"single\";\n\t\t}\n\t}\n\n\tfunction insertFencingAtSelection(cm, cur_start, cur_end, fenceCharsToInsert) {\n\t\tvar start_line_sel = cur_start.line + 1,\n\t\t\tend_line_sel = cur_end.line + 1,\n\t\t\tsel_multi = cur_start.line !== cur_end.line,\n\t\t\trepl_start = fenceCharsToInsert + \"\\n\",\n\t\t\trepl_end = \"\\n\" + fenceCharsToInsert;\n\t\tif(sel_multi) {\n\t\t\tend_line_sel++;\n\t\t}\n\t\t// handle last char including \\n or not\n\t\tif(sel_multi && cur_end.ch === 0) {\n\t\t\trepl_end = fenceCharsToInsert + \"\\n\";\n\t\t\tend_line_sel--;\n\t\t}\n\t\t_replaceSelection(cm, false, [repl_start, repl_end]);\n\t\tcm.setSelection({\n\t\t\tline: start_line_sel,\n\t\t\tch: 0\n\t\t}, {\n\t\t\tline: end_line_sel,\n\t\t\tch: 0\n\t\t});\n\t}\n\n\tvar cm = editor.codemirror,\n\t\tcur_start = cm.getCursor(\"start\"),\n\t\tcur_end = cm.getCursor(\"end\"),\n\t\ttok = cm.getTokenAt({\n\t\t\tline: cur_start.line,\n\t\t\tch: cur_start.ch || 1\n\t\t}), // avoid ch 0 which is a cursor pos but not token\n\t\tline = cm.getLineHandle(cur_start.line),\n\t\tis_code = code_type(cm, cur_start.line, line, tok);\n\tvar block_start, block_end, lineCount;\n\n\tif(is_code === \"single\") {\n\t\t// similar to some SimpleMDE _toggleBlock logic\n\t\tvar start = line.text.slice(0, cur_start.ch).replace(\"`\", \"\"),\n\t\t\tend = line.text.slice(cur_start.ch).replace(\"`\", \"\");\n\t\tcm.replaceRange(start + end, {\n\t\t\tline: cur_start.line,\n\t\t\tch: 0\n\t\t}, {\n\t\t\tline: cur_start.line,\n\t\t\tch: 99999999999999\n\t\t});\n\t\tcur_start.ch--;\n\t\tif(cur_start !== cur_end) {\n\t\t\tcur_end.ch--;\n\t\t}\n\t\tcm.setSelection(cur_start, cur_end);\n\t\tcm.focus();\n\t} else if(is_code === \"fenced\") {\n\t\tif(cur_start.line !== cur_end.line || cur_start.ch !== cur_end.ch) {\n\t\t\t// use selection\n\n\t\t\t// find the fenced line so we know what type it is (tilde, backticks, number of them)\n\t\t\tfor(block_start = cur_start.line; block_start >= 0; block_start--) {\n\t\t\t\tline = cm.getLineHandle(block_start);\n\t\t\t\tif(fencing_line(line)) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t\tvar fencedTok = cm.getTokenAt({\n\t\t\t\tline: block_start,\n\t\t\t\tch: 1\n\t\t\t});\n\t\t\tvar fence_chars = token_state(fencedTok).fencedChars;\n\t\t\tvar start_text, start_line;\n\t\t\tvar end_text, end_line;\n\t\t\t// check for selection going up against fenced lines, in which case we don't want to add more fencing\n\t\t\tif(fencing_line(cm.getLineHandle(cur_start.line))) {\n\t\t\t\tstart_text = \"\";\n\t\t\t\tstart_line = cur_start.line;\n\t\t\t} else if(fencing_line(cm.getLineHandle(cur_start.line - 1))) {\n\t\t\t\tstart_text = \"\";\n\t\t\t\tstart_line = cur_start.line - 1;\n\t\t\t} else {\n\t\t\t\tstart_text = fence_chars + \"\\n\";\n\t\t\t\tstart_line = cur_start.line;\n\t\t\t}\n\t\t\tif(fencing_line(cm.getLineHandle(cur_end.line))) {\n\t\t\t\tend_text = \"\";\n\t\t\t\tend_line = cur_end.line;\n\t\t\t\tif(cur_end.ch === 0) {\n\t\t\t\t\tend_line += 1;\n\t\t\t\t}\n\t\t\t} else if(cur_end.ch !== 0 && fencing_line(cm.getLineHandle(cur_end.line + 1))) {\n\t\t\t\tend_text = \"\";\n\t\t\t\tend_line = cur_end.line + 1;\n\t\t\t} else {\n\t\t\t\tend_text = fence_chars + \"\\n\";\n\t\t\t\tend_line = cur_end.line + 1;\n\t\t\t}\n\t\t\tif(cur_end.ch === 0) {\n\t\t\t\t// full last line selected, putting cursor at beginning of next\n\t\t\t\tend_line -= 1;\n\t\t\t}\n\t\t\tcm.operation(function() {\n\t\t\t\t// end line first, so that line numbers don't change\n\t\t\t\tcm.replaceRange(end_text, {\n\t\t\t\t\tline: end_line,\n\t\t\t\t\tch: 0\n\t\t\t\t}, {\n\t\t\t\t\tline: end_line + (end_text ? 0 : 1),\n\t\t\t\t\tch: 0\n\t\t\t\t});\n\t\t\t\tcm.replaceRange(start_text, {\n\t\t\t\t\tline: start_line,\n\t\t\t\t\tch: 0\n\t\t\t\t}, {\n\t\t\t\t\tline: start_line + (start_text ? 0 : 1),\n\t\t\t\t\tch: 0\n\t\t\t\t});\n\t\t\t});\n\t\t\tcm.setSelection({\n\t\t\t\tline: start_line + (start_text ? 1 : 0),\n\t\t\t\tch: 0\n\t\t\t}, {\n\t\t\t\tline: end_line + (start_text ? 1 : -1),\n\t\t\t\tch: 0\n\t\t\t});\n\t\t\tcm.focus();\n\t\t} else {\n\t\t\t// no selection, search for ends of this fenced block\n\t\t\tvar search_from = cur_start.line;\n\t\t\tif(fencing_line(cm.getLineHandle(cur_start.line))) { // gets a little tricky if cursor is right on a fenced line\n\t\t\t\tif(code_type(cm, cur_start.line + 1) === \"fenced\") {\n\t\t\t\t\tblock_start = cur_start.line;\n\t\t\t\t\tsearch_from = cur_start.line + 1; // for searching for \"end\"\n\t\t\t\t} else {\n\t\t\t\t\tblock_end = cur_start.line;\n\t\t\t\t\tsearch_from = cur_start.line - 1; // for searching for \"start\"\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(block_start === undefined) {\n\t\t\t\tfor(block_start = search_from; block_start >= 0; block_start--) {\n\t\t\t\t\tline = cm.getLineHandle(block_start);\n\t\t\t\t\tif(fencing_line(line)) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tif(block_end === undefined) {\n\t\t\t\tlineCount = cm.lineCount();\n\t\t\t\tfor(block_end = search_from; block_end < lineCount; block_end++) {\n\t\t\t\t\tline = cm.getLineHandle(block_end);\n\t\t\t\t\tif(fencing_line(line)) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tcm.operation(function() {\n\t\t\t\tcm.replaceRange(\"\", {\n\t\t\t\t\tline: block_start,\n\t\t\t\t\tch: 0\n\t\t\t\t}, {\n\t\t\t\t\tline: block_start + 1,\n\t\t\t\t\tch: 0\n\t\t\t\t});\n\t\t\t\tcm.replaceRange(\"\", {\n\t\t\t\t\tline: block_end - 1,\n\t\t\t\t\tch: 0\n\t\t\t\t}, {\n\t\t\t\t\tline: block_end,\n\t\t\t\t\tch: 0\n\t\t\t\t});\n\t\t\t});\n\t\t\tcm.focus();\n\t\t}\n\t} else if(is_code === \"indented\") {\n\t\tif(cur_start.line !== cur_end.line || cur_start.ch !== cur_end.ch) {\n\t\t\t// use selection\n\t\t\tblock_start = cur_start.line;\n\t\t\tblock_end = cur_end.line;\n\t\t\tif(cur_end.ch === 0) {\n\t\t\t\tblock_end--;\n\t\t\t}\n\t\t} else {\n\t\t\t// no selection, search for ends of this indented block\n\t\t\tfor(block_start = cur_start.line; block_start >= 0; block_start--) {\n\t\t\t\tline = cm.getLineHandle(block_start);\n\t\t\t\tif(line.text.match(/^\\s*$/)) {\n\t\t\t\t\t// empty or all whitespace - keep going\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tif(code_type(cm, block_start, line) !== \"indented\") {\n\t\t\t\t\t\tblock_start += 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\tlineCount = cm.lineCount();\n\t\t\tfor(block_end = cur_start.line; block_end < lineCount; block_end++) {\n\t\t\t\tline = cm.getLineHandle(block_end);\n\t\t\t\tif(line.text.match(/^\\s*$/)) {\n\t\t\t\t\t// empty or all whitespace - keep going\n\t\t\t\t\tcontinue;\n\t\t\t\t} else {\n\t\t\t\t\tif(code_type(cm, block_end, line) !== \"indented\") {\n\t\t\t\t\t\tblock_end -= 1;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t// if we are going to un-indent based on a selected set of lines, and the next line is indented too, we need to\n\t\t// insert a blank line so that the next line(s) continue to be indented code\n\t\tvar next_line = cm.getLineHandle(block_end + 1),\n\t\t\tnext_line_last_tok = next_line && cm.getTokenAt({\n\t\t\t\tline: block_end + 1,\n\t\t\t\tch: next_line.text.length - 1\n\t\t\t}),\n\t\t\tnext_line_indented = next_line_last_tok && token_state(next_line_last_tok).indentedCode;\n\t\tif(next_line_indented) {\n\t\t\tcm.replaceRange(\"\\n\", {\n\t\t\t\tline: block_end + 1,\n\t\t\t\tch: 0\n\t\t\t});\n\t\t}\n\n\t\tfor(var i = block_start; i <= block_end; i++) {\n\t\t\tcm.indentLine(i, \"subtract\"); // TODO: this doesn't get tracked in the history, so can't be undone :(\n\t\t}\n\t\tcm.focus();\n\t} else {\n\t\t// insert code formatting\n\t\tvar no_sel_and_starting_of_line = (cur_start.line === cur_end.line && cur_start.ch === cur_end.ch && cur_start.ch === 0);\n\t\tvar sel_multi = cur_start.line !== cur_end.line;\n\t\tif(no_sel_and_starting_of_line || sel_multi) {\n\t\t\tinsertFencingAtSelection(cm, cur_start, cur_end, fenceCharsToInsert);\n\t\t} else {\n\t\t\t_replaceSelection(cm, false, [\"`\", \"`\"]);\n\t\t}\n\t}\n}\n\n/**\n * Action for toggling blockquote.\n */\nfunction toggleBlockquote(editor) {\n\tvar cm = editor.codemirror;\n\t_toggleLine(cm, \"quote\");\n}\n\n/**\n * Action for toggling heading size: normal -> h1 -> h2 -> h3 -> h4 -> h5 -> h6 -> normal\n */\nfunction toggleHeadingSmaller(editor) {\n\tvar cm = editor.codemirror;\n\t_toggleHeading(cm, \"smaller\");\n}\n\n/**\n * Action for toggling heading size: normal -> h6 -> h5 -> h4 -> h3 -> h2 -> h1 -> normal\n */\nfunction toggleHeadingBigger(editor) {\n\tvar cm = editor.codemirror;\n\t_toggleHeading(cm, \"bigger\");\n}\n\n/**\n * Action for toggling heading size 1\n */\nfunction toggleHeading1(editor) {\n\tvar cm = editor.codemirror;\n\t_toggleHeading(cm, undefined, 1);\n}\n\n/**\n * Action for toggling heading size 2\n */\nfunction toggleHeading2(editor) {\n\tvar cm = editor.codemirror;\n\t_toggleHeading(cm, undefined, 2);\n}\n\n/**\n * Action for toggling heading size 3\n */\nfunction toggleHeading3(editor) {\n\tvar cm = editor.codemirror;\n\t_toggleHeading(cm, undefined, 3);\n}\n\n\n/**\n * Action for toggling ul.\n */\nfunction toggleUnorderedList(editor) {\n\tvar cm = editor.codemirror;\n\t_toggleLine(cm, \"unordered-list\");\n}\n\n\n/**\n * Action for toggling ol.\n */\nfunction toggleOrderedList(editor) {\n\tvar cm = editor.codemirror;\n\t_toggleLine(cm, \"ordered-list\");\n}\n\n/**\n * Action for clean block (remove headline, list, blockquote code, markers)\n */\nfunction cleanBlock(editor) {\n\tvar cm = editor.codemirror;\n\t_cleanBlock(cm);\n}\n\n/**\n * Action for drawing a link.\n */\nfunction drawLink(editor) {\n\tvar cm = editor.codemirror;\n\tvar stat = getState(cm);\n\tvar options = editor.options;\n\tvar url = \"http://\";\n\tif(options.promptURLs) {\n\t\turl = prompt(options.promptTexts.link);\n\t\tif(!url) {\n\t\t\treturn false;\n\t\t}\n\t}\n\t_replaceSelection(cm, stat.link, options.insertTexts.link, url);\n}\n\n/**\n * Action for drawing an img.\n */\nfunction drawImage(editor) {\n\tvar cm = editor.codemirror;\n\tvar stat = getState(cm);\n\tvar options = editor.options;\n\tvar url = \"http://\";\n\tif(options.promptURLs) {\n\t\turl = prompt(options.promptTexts.image);\n\t\tif(!url) {\n\t\t\treturn false;\n\t\t}\n\t}\n\t_replaceSelection(cm, stat.image, options.insertTexts.image, url);\n}\n\n/**\n * Action for drawing a table.\n */\nfunction drawTable(editor) {\n\tvar cm = editor.codemirror;\n\tvar stat = getState(cm);\n\tvar options = editor.options;\n\t_replaceSelection(cm, stat.table, options.insertTexts.table);\n}\n\n/**\n * Action for drawing a horizontal rule.\n */\nfunction drawHorizontalRule(editor) {\n\tvar cm = editor.codemirror;\n\tvar stat = getState(cm);\n\tvar options = editor.options;\n\t_replaceSelection(cm, stat.image, options.insertTexts.horizontalRule);\n}\n\n\n/**\n * Undo action.\n */\nfunction undo(editor) {\n\tvar cm = editor.codemirror;\n\tcm.undo();\n\tcm.focus();\n}\n\n\n/**\n * Redo action.\n */\nfunction redo(editor) {\n\tvar cm = editor.codemirror;\n\tcm.redo();\n\tcm.focus();\n}\n\n\n/**\n * Toggle side by side preview\n */\nfunction toggleSideBySide(editor) {\n\tvar cm = editor.codemirror;\n\tvar wrapper = cm.getWrapperElement();\n\tvar preview = wrapper.nextSibling;\n\tvar toolbarButton = editor.toolbarElements[\"side-by-side\"];\n\tvar useSideBySideListener = false;\n\tif(/editor-preview-active-side/.test(preview.className)) {\n\t\tpreview.className = preview.className.replace(\n\t\t\t/\\s*editor-preview-active-side\\s*/g, \"\"\n\t\t);\n\t\ttoolbarButton.className = toolbarButton.className.replace(/\\s*active\\s*/g, \"\");\n\t\twrapper.className = wrapper.className.replace(/\\s*CodeMirror-sided\\s*/g, \" \");\n\t} else {\n\t\t// When the preview button is clicked for the first time,\n\t\t// give some time for the transition from editor.css to fire and the view to slide from right to left,\n\t\t// instead of just appearing.\n\t\tsetTimeout(function() {\n\t\t\tif(!cm.getOption(\"fullScreen\"))\n\t\t\t\ttoggleFullScreen(editor);\n\t\t\tpreview.className += \" editor-preview-active-side\";\n\t\t}, 1);\n\t\ttoolbarButton.className += \" active\";\n\t\twrapper.className += \" CodeMirror-sided\";\n\t\tuseSideBySideListener = true;\n\t}\n\n\t// Hide normal preview if active\n\tvar previewNormal = wrapper.lastChild;\n\tif(/editor-preview-active/.test(previewNormal.className)) {\n\t\tpreviewNormal.className = previewNormal.className.replace(\n\t\t\t/\\s*editor-preview-active\\s*/g, \"\"\n\t\t);\n\t\tvar toolbar = editor.toolbarElements.preview;\n\t\tvar toolbar_div = wrapper.previousSibling;\n\t\ttoolbar.className = toolbar.className.replace(/\\s*active\\s*/g, \"\");\n\t\ttoolbar_div.className = toolbar_div.className.replace(/\\s*disabled-for-preview*/g, \"\");\n\t}\n\n\tvar sideBySideRenderingFunction = function() {\n\t\tpreview.innerHTML = editor.options.previewRender(editor.value(), preview);\n\t};\n\n\tif(!cm.sideBySideRenderingFunction) {\n\t\tcm.sideBySideRenderingFunction = sideBySideRenderingFunction;\n\t}\n\n\tif(useSideBySideListener) {\n\t\tpreview.innerHTML = editor.options.previewRender(editor.value(), preview);\n\t\tcm.on(\"update\", cm.sideBySideRenderingFunction);\n\t} else {\n\t\tcm.off(\"update\", cm.sideBySideRenderingFunction);\n\t}\n\n\t// Refresh to fix selection being off (#309)\n\tcm.refresh();\n}\n\n\n/**\n * Preview action.\n */\nfunction togglePreview(editor) {\n\tvar cm = editor.codemirror;\n\tvar wrapper = cm.getWrapperElement();\n\tvar toolbar_div = wrapper.previousSibling;\n\tvar toolbar = editor.options.toolbar ? editor.toolbarElements.preview : false;\n\tvar preview = wrapper.lastChild;\n\tif(!preview || !/editor-preview/.test(preview.className)) {\n\t\tpreview = document.createElement(\"div\");\n\t\tpreview.className = \"editor-preview\";\n\t\twrapper.appendChild(preview);\n\t}\n\tif(/editor-preview-active/.test(preview.className)) {\n\t\tpreview.className = preview.className.replace(\n\t\t\t/\\s*editor-preview-active\\s*/g, \"\"\n\t\t);\n\t\tif(toolbar) {\n\t\t\ttoolbar.className = toolbar.className.replace(/\\s*active\\s*/g, \"\");\n\t\t\ttoolbar_div.className = toolbar_div.className.replace(/\\s*disabled-for-preview*/g, \"\");\n\t\t}\n\t} else {\n\t\t// When the preview button is clicked for the first time,\n\t\t// give some time for the transition from editor.css to fire and the view to slide from right to left,\n\t\t// instead of just appearing.\n\t\tsetTimeout(function() {\n\t\t\tpreview.className += \" editor-preview-active\";\n\t\t}, 1);\n\t\tif(toolbar) {\n\t\t\ttoolbar.className += \" active\";\n\t\t\ttoolbar_div.className += \" disabled-for-preview\";\n\t\t}\n\t}\n\tpreview.innerHTML = editor.options.previewRender(editor.value(), preview);\n\n\t// Turn off side by side if needed\n\tvar sidebyside = cm.getWrapperElement().nextSibling;\n\tif(/editor-preview-active-side/.test(sidebyside.className))\n\t\ttoggleSideBySide(editor);\n}\n\nfunction _replaceSelection(cm, active, startEnd, url) {\n\tif(/editor-preview-active/.test(cm.getWrapperElement().lastChild.className))\n\t\treturn;\n\n\tvar text;\n\tvar start = startEnd[0];\n\tvar end = startEnd[1];\n\tvar startPoint = cm.getCursor(\"start\");\n\tvar endPoint = cm.getCursor(\"end\");\n\tif(url) {\n\t\tend = end.replace(\"#url#\", url);\n\t}\n\tif(active) {\n\t\ttext = cm.getLine(startPoint.line);\n\t\tstart = text.slice(0, startPoint.ch);\n\t\tend = text.slice(startPoint.ch);\n\t\tcm.replaceRange(start + end, {\n\t\t\tline: startPoint.line,\n\t\t\tch: 0\n\t\t});\n\t} else {\n\t\ttext = cm.getSelection();\n\t\tcm.replaceSelection(start + text + end);\n\n\t\tstartPoint.ch += start.length;\n\t\tif(startPoint !== endPoint) {\n\t\t\tendPoint.ch += start.length;\n\t\t}\n\t}\n\tcm.setSelection(startPoint, endPoint);\n\tcm.focus();\n}\n\n\nfunction _toggleHeading(cm, direction, size) {\n\tif(/editor-preview-active/.test(cm.getWrapperElement().lastChild.className))\n\t\treturn;\n\n\tvar startPoint = cm.getCursor(\"start\");\n\tvar endPoint = cm.getCursor(\"end\");\n\tfor(var i = startPoint.line; i <= endPoint.line; i++) {\n\t\t(function(i) {\n\t\t\tvar text = cm.getLine(i);\n\t\t\tvar currHeadingLevel = text.search(/[^#]/);\n\n\t\t\tif(direction !== undefined) {\n\t\t\t\tif(currHeadingLevel <= 0) {\n\t\t\t\t\tif(direction == \"bigger\") {\n\t\t\t\t\t\ttext = \"###### \" + text;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttext = \"# \" + text;\n\t\t\t\t\t}\n\t\t\t\t} else if(currHeadingLevel == 6 && direction == \"smaller\") {\n\t\t\t\t\ttext = text.substr(7);\n\t\t\t\t} else if(currHeadingLevel == 1 && direction == \"bigger\") {\n\t\t\t\t\ttext = text.substr(2);\n\t\t\t\t} else {\n\t\t\t\t\tif(direction == \"bigger\") {\n\t\t\t\t\t\ttext = text.substr(1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttext = \"#\" + text;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif(size == 1) {\n\t\t\t\t\tif(currHeadingLevel <= 0) {\n\t\t\t\t\t\ttext = \"# \" + text;\n\t\t\t\t\t} else if(currHeadingLevel == size) {\n\t\t\t\t\t\ttext = text.substr(currHeadingLevel + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttext = \"# \" + text.substr(currHeadingLevel + 1);\n\t\t\t\t\t}\n\t\t\t\t} else if(size == 2) {\n\t\t\t\t\tif(currHeadingLevel <= 0) {\n\t\t\t\t\t\ttext = \"## \" + text;\n\t\t\t\t\t} else if(currHeadingLevel == size) {\n\t\t\t\t\t\ttext = text.substr(currHeadingLevel + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttext = \"## \" + text.substr(currHeadingLevel + 1);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif(currHeadingLevel <= 0) {\n\t\t\t\t\t\ttext = \"### \" + text;\n\t\t\t\t\t} else if(currHeadingLevel == size) {\n\t\t\t\t\t\ttext = text.substr(currHeadingLevel + 1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttext = \"### \" + text.substr(currHeadingLevel + 1);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tcm.replaceRange(text, {\n\t\t\t\tline: i,\n\t\t\t\tch: 0\n\t\t\t}, {\n\t\t\t\tline: i,\n\t\t\t\tch: 99999999999999\n\t\t\t});\n\t\t})(i);\n\t}\n\tcm.focus();\n}\n\n\nfunction _toggleLine(cm, name) {\n\tif(/editor-preview-active/.test(cm.getWrapperElement().lastChild.className))\n\t\treturn;\n\n\tvar stat = getState(cm);\n\tvar startPoint = cm.getCursor(\"start\");\n\tvar endPoint = cm.getCursor(\"end\");\n\tvar repl = {\n\t\t\"quote\": /^(\\s*)\\>\\s+/,\n\t\t\"unordered-list\": /^(\\s*)(\\*|\\-|\\+)\\s+/,\n\t\t\"ordered-list\": /^(\\s*)\\d+\\.\\s+/\n\t};\n\tvar map = {\n\t\t\"quote\": \"> \",\n\t\t\"unordered-list\": \"* \",\n\t\t\"ordered-list\": \"1. \"\n\t};\n\tfor(var i = startPoint.line; i <= endPoint.line; i++) {\n\t\t(function(i) {\n\t\t\tvar text = cm.getLine(i);\n\t\t\tif(stat[name]) {\n\t\t\t\ttext = text.replace(repl[name], \"$1\");\n\t\t\t} else {\n\t\t\t\ttext = map[name] + text;\n\t\t\t}\n\t\t\tcm.replaceRange(text, {\n\t\t\t\tline: i,\n\t\t\t\tch: 0\n\t\t\t}, {\n\t\t\t\tline: i,\n\t\t\t\tch: 99999999999999\n\t\t\t});\n\t\t})(i);\n\t}\n\tcm.focus();\n}\n\nfunction _toggleBlock(editor, type, start_chars, end_chars) {\n\tif(/editor-preview-active/.test(editor.codemirror.getWrapperElement().lastChild.className))\n\t\treturn;\n\n\tend_chars = (typeof end_chars === \"undefined\") ? start_chars : end_chars;\n\tvar cm = editor.codemirror;\n\tvar stat = getState(cm);\n\n\tvar text;\n\tvar start = start_chars;\n\tvar end = end_chars;\n\n\tvar startPoint = cm.getCursor(\"start\");\n\tvar endPoint = cm.getCursor(\"end\");\n\n\tif(stat[type]) {\n\t\ttext = cm.getLine(startPoint.line);\n\t\tstart = text.slice(0, startPoint.ch);\n\t\tend = text.slice(startPoint.ch);\n\t\tif(type == \"bold\") {\n\t\t\tstart = start.replace(/(\\*\\*|__)(?![\\s\\S]*(\\*\\*|__))/, \"\");\n\t\t\tend = end.replace(/(\\*\\*|__)/, \"\");\n\t\t} else if(type == \"italic\") {\n\t\t\tstart = start.replace(/(\\*|_)(?![\\s\\S]*(\\*|_))/, \"\");\n\t\t\tend = end.replace(/(\\*|_)/, \"\");\n\t\t} else if(type == \"strikethrough\") {\n\t\t\tstart = start.replace(/(\\*\\*|~~)(?![\\s\\S]*(\\*\\*|~~))/, \"\");\n\t\t\tend = end.replace(/(\\*\\*|~~)/, \"\");\n\t\t}\n\t\tcm.replaceRange(start + end, {\n\t\t\tline: startPoint.line,\n\t\t\tch: 0\n\t\t}, {\n\t\t\tline: startPoint.line,\n\t\t\tch: 99999999999999\n\t\t});\n\n\t\tif(type == \"bold\" || type == \"strikethrough\") {\n\t\t\tstartPoint.ch -= 2;\n\t\t\tif(startPoint !== endPoint) {\n\t\t\t\tendPoint.ch -= 2;\n\t\t\t}\n\t\t} else if(type == \"italic\") {\n\t\t\tstartPoint.ch -= 1;\n\t\t\tif(startPoint !== endPoint) {\n\t\t\t\tendPoint.ch -= 1;\n\t\t\t}\n\t\t}\n\t} else {\n\t\ttext = cm.getSelection();\n\t\tif(type == \"bold\") {\n\t\t\ttext = text.split(\"**\").join(\"\");\n\t\t\ttext = text.split(\"__\").join(\"\");\n\t\t} else if(type == \"italic\") {\n\t\t\ttext = text.split(\"*\").join(\"\");\n\t\t\ttext = text.split(\"_\").join(\"\");\n\t\t} else if(type == \"strikethrough\") {\n\t\t\ttext = text.split(\"~~\").join(\"\");\n\t\t}\n\t\tcm.replaceSelection(start + text + end);\n\n\t\tstartPoint.ch += start_chars.length;\n\t\tendPoint.ch = startPoint.ch + text.length;\n\t}\n\n\tcm.setSelection(startPoint, endPoint);\n\tcm.focus();\n}\n\nfunction _cleanBlock(cm) {\n\tif(/editor-preview-active/.test(cm.getWrapperElement().lastChild.className))\n\t\treturn;\n\n\tvar startPoint = cm.getCursor(\"start\");\n\tvar endPoint = cm.getCursor(\"end\");\n\tvar text;\n\n\tfor(var line = startPoint.line; line <= endPoint.line; line++) {\n\t\ttext = cm.getLine(line);\n\t\ttext = text.replace(/^[ ]*([# ]+|\\*|\\-|[> ]+|[0-9]+(.|\\)))[ ]*/, \"\");\n\n\t\tcm.replaceRange(text, {\n\t\t\tline: line,\n\t\t\tch: 0\n\t\t}, {\n\t\t\tline: line,\n\t\t\tch: 99999999999999\n\t\t});\n\t}\n}\n\n// Merge the properties of one object into another.\nfunction _mergeProperties(target, source) {\n\tfor(var property in source) {\n\t\tif(source.hasOwnProperty(property)) {\n\t\t\tif(source[property] instanceof Array) {\n\t\t\t\ttarget[property] = source[property].concat(target[property] instanceof Array ? target[property] : []);\n\t\t\t} else if(\n\t\t\t\tsource[property] !== null &&\n\t\t\t\ttypeof source[property] === \"object\" &&\n\t\t\t\tsource[property].constructor === Object\n\t\t\t) {\n\t\t\t\ttarget[property] = _mergeProperties(target[property] || {}, source[property]);\n\t\t\t} else {\n\t\t\t\ttarget[property] = source[property];\n\t\t\t}\n\t\t}\n\t}\n\n\treturn target;\n}\n\n// Merge an arbitrary number of objects into one.\nfunction extend(target) {\n\tfor(var i = 1; i < arguments.length; i++) {\n\t\ttarget = _mergeProperties(target, arguments[i]);\n\t}\n\n\treturn target;\n}\n\n/* The right word count in respect for CJK. */\nfunction wordCount(data) {\n\tvar pattern = /[a-zA-Z0-9_\\u0392-\\u03c9\\u0410-\\u04F9]+|[\\u4E00-\\u9FFF\\u3400-\\u4dbf\\uf900-\\ufaff\\u3040-\\u309f\\uac00-\\ud7af]+/g;\n\tvar m = data.match(pattern);\n\tvar count = 0;\n\tif(m === null) return count;\n\tfor(var i = 0; i < m.length; i++) {\n\t\tif(m[i].charCodeAt(0) >= 0x4E00) {\n\t\t\tcount += m[i].length;\n\t\t} else {\n\t\t\tcount += 1;\n\t\t}\n\t}\n\treturn count;\n}\n\nvar toolbarBuiltInButtons = {\n\t\"bold\": {\n\t\tname: \"bold\",\n\t\taction: toggleBold,\n\t\tclassName: \"fa fa-bold\",\n\t\ttitle: \"Bold\",\n\t\tdefault: true\n\t},\n\t\"italic\": {\n\t\tname: \"italic\",\n\t\taction: toggleItalic,\n\t\tclassName: \"fa fa-italic\",\n\t\ttitle: \"Italic\",\n\t\tdefault: true\n\t},\n\t\"strikethrough\": {\n\t\tname: \"strikethrough\",\n\t\taction: toggleStrikethrough,\n\t\tclassName: \"fa fa-strikethrough\",\n\t\ttitle: \"Strikethrough\"\n\t},\n\t\"heading\": {\n\t\tname: \"heading\",\n\t\taction: toggleHeadingSmaller,\n\t\tclassName: \"fa fa-header\",\n\t\ttitle: \"Heading\",\n\t\tdefault: true\n\t},\n\t\"heading-smaller\": {\n\t\tname: \"heading-smaller\",\n\t\taction: toggleHeadingSmaller,\n\t\tclassName: \"fa fa-header fa-header-x fa-header-smaller\",\n\t\ttitle: \"Smaller Heading\"\n\t},\n\t\"heading-bigger\": {\n\t\tname: \"heading-bigger\",\n\t\taction: toggleHeadingBigger,\n\t\tclassName: \"fa fa-header fa-header-x fa-header-bigger\",\n\t\ttitle: \"Bigger Heading\"\n\t},\n\t\"heading-1\": {\n\t\tname: \"heading-1\",\n\t\taction: toggleHeading1,\n\t\tclassName: \"fa fa-header fa-header-x fa-header-1\",\n\t\ttitle: \"Big Heading\"\n\t},\n\t\"heading-2\": {\n\t\tname: \"heading-2\",\n\t\taction: toggleHeading2,\n\t\tclassName: \"fa fa-header fa-header-x fa-header-2\",\n\t\ttitle: \"Medium Heading\"\n\t},\n\t\"heading-3\": {\n\t\tname: \"heading-3\",\n\t\taction: toggleHeading3,\n\t\tclassName: \"fa fa-header fa-header-x fa-header-3\",\n\t\ttitle: \"Small Heading\"\n\t},\n\t\"separator-1\": {\n\t\tname: \"separator-1\"\n\t},\n\t\"code\": {\n\t\tname: \"code\",\n\t\taction: toggleCodeBlock,\n\t\tclassName: \"fa fa-code\",\n\t\ttitle: \"Code\"\n\t},\n\t\"quote\": {\n\t\tname: \"quote\",\n\t\taction: toggleBlockquote,\n\t\tclassName: \"fa fa-quote-left\",\n\t\ttitle: \"Quote\",\n\t\tdefault: true\n\t},\n\t\"unordered-list\": {\n\t\tname: \"unordered-list\",\n\t\taction: toggleUnorderedList,\n\t\tclassName: \"fa fa-list-ul\",\n\t\ttitle: \"Generic List\",\n\t\tdefault: true\n\t},\n\t\"ordered-list\": {\n\t\tname: \"ordered-list\",\n\t\taction: toggleOrderedList,\n\t\tclassName: \"fa fa-list-ol\",\n\t\ttitle: \"Numbered List\",\n\t\tdefault: true\n\t},\n\t\"clean-block\": {\n\t\tname: \"clean-block\",\n\t\taction: cleanBlock,\n\t\tclassName: \"fa fa-eraser fa-clean-block\",\n\t\ttitle: \"Clean block\"\n\t},\n\t\"separator-2\": {\n\t\tname: \"separator-2\"\n\t},\n\t\"link\": {\n\t\tname: \"link\",\n\t\taction: drawLink,\n\t\tclassName: \"fa fa-link\",\n\t\ttitle: \"Create Link\",\n\t\tdefault: true\n\t},\n\t\"image\": {\n\t\tname: \"image\",\n\t\taction: drawImage,\n\t\tclassName: \"fa fa-picture-o\",\n\t\ttitle: \"Insert Image\",\n\t\tdefault: true\n\t},\n\t\"table\": {\n\t\tname: \"table\",\n\t\taction: drawTable,\n\t\tclassName: \"fa fa-table\",\n\t\ttitle: \"Insert Table\"\n\t},\n\t\"horizontal-rule\": {\n\t\tname: \"horizontal-rule\",\n\t\taction: drawHorizontalRule,\n\t\tclassName: \"fa fa-minus\",\n\t\ttitle: \"Insert Horizontal Line\"\n\t},\n\t\"separator-3\": {\n\t\tname: \"separator-3\"\n\t},\n\t\"preview\": {\n\t\tname: \"preview\",\n\t\taction: togglePreview,\n\t\tclassName: \"fa fa-eye no-disable\",\n\t\ttitle: \"Toggle Preview\",\n\t\tdefault: true\n\t},\n\t\"side-by-side\": {\n\t\tname: \"side-by-side\",\n\t\taction: toggleSideBySide,\n\t\tclassName: \"fa fa-columns no-disable no-mobile\",\n\t\ttitle: \"Toggle Side by Side\",\n\t\tdefault: true\n\t},\n\t\"fullscreen\": {\n\t\tname: \"fullscreen\",\n\t\taction: toggleFullScreen,\n\t\tclassName: \"fa fa-arrows-alt no-disable no-mobile\",\n\t\ttitle: \"Toggle Fullscreen\",\n\t\tdefault: true\n\t},\n\t\"separator-4\": {\n\t\tname: \"separator-4\"\n\t},\n\t\"guide\": {\n\t\tname: \"guide\",\n\t\taction: \"https://simplemde.com/markdown-guide\",\n\t\tclassName: \"fa fa-question-circle\",\n\t\ttitle: \"Markdown Guide\",\n\t\tdefault: true\n\t},\n\t\"separator-5\": {\n\t\tname: \"separator-5\"\n\t},\n\t\"undo\": {\n\t\tname: \"undo\",\n\t\taction: undo,\n\t\tclassName: \"fa fa-undo no-disable\",\n\t\ttitle: \"Undo\"\n\t},\n\t\"redo\": {\n\t\tname: \"redo\",\n\t\taction: redo,\n\t\tclassName: \"fa fa-repeat no-disable\",\n\t\ttitle: \"Redo\"\n\t}\n};\n\nvar insertTexts = {\n\tlink: [\"[\", \"](#url#)\"],\n\timage: [\"![](\", \"#url#)\"],\n\ttable: [\"\", \"\\n\\n| Column 1 | Column 2 | Column 3 |\\n| -------- | -------- | -------- |\\n| Text     | Text     | Text     |\\n\\n\"],\n\thorizontalRule: [\"\", \"\\n\\n-----\\n\\n\"]\n};\n\nvar promptTexts = {\n\tlink: \"URL for the link:\",\n\timage: \"URL of the image:\"\n};\n\nvar blockStyles = {\n\t\"bold\": \"**\",\n\t\"code\": \"```\",\n\t\"italic\": \"*\"\n};\n\n/**\n * Interface of SimpleMDE.\n */\nfunction SimpleMDE(options) {\n\t// Handle options parameter\n\toptions = options || {};\n\n\n\t// Used later to refer to it\"s parent\n\toptions.parent = this;\n\n\n\t// Check if Font Awesome needs to be auto downloaded\n\tvar autoDownloadFA = true;\n\n\tif(options.autoDownloadFontAwesome === false) {\n\t\tautoDownloadFA = false;\n\t}\n\n\tif(options.autoDownloadFontAwesome !== true) {\n\t\tvar styleSheets = document.styleSheets;\n\t\tfor(var i = 0; i < styleSheets.length; i++) {\n\t\t\tif(!styleSheets[i].href)\n\t\t\t\tcontinue;\n\n\t\t\tif(styleSheets[i].href.indexOf(\"//maxcdn.bootstrapcdn.com/font-awesome/\") > -1) {\n\t\t\t\tautoDownloadFA = false;\n\t\t\t}\n\t\t}\n\t}\n\n\tif(autoDownloadFA) {\n\t\tvar link = document.createElement(\"link\");\n\t\tlink.rel = \"stylesheet\";\n\t\tlink.href = \"https://maxcdn.bootstrapcdn.com/font-awesome/latest/css/font-awesome.min.css\";\n\t\tdocument.getElementsByTagName(\"head\")[0].appendChild(link);\n\t}\n\n\n\t// Find the textarea to use\n\tif(options.element) {\n\t\tthis.element = options.element;\n\t} else if(options.element === null) {\n\t\t// This means that the element option was specified, but no element was found\n\t\tconsole.log(\"SimpleMDE: Error. No element was found.\");\n\t\treturn;\n\t}\n\n\n\t// Handle toolbar\n\tif(options.toolbar === undefined) {\n\t\t// Initialize\n\t\toptions.toolbar = [];\n\n\n\t\t// Loop over the built in buttons, to get the preferred order\n\t\tfor(var key in toolbarBuiltInButtons) {\n\t\t\tif(toolbarBuiltInButtons.hasOwnProperty(key)) {\n\t\t\t\tif(key.indexOf(\"separator-\") != -1) {\n\t\t\t\t\toptions.toolbar.push(\"|\");\n\t\t\t\t}\n\n\t\t\t\tif(toolbarBuiltInButtons[key].default === true || (options.showIcons && options.showIcons.constructor === Array && options.showIcons.indexOf(key) != -1)) {\n\t\t\t\t\toptions.toolbar.push(key);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t}\n\n\n\t// Handle status bar\n\tif(!options.hasOwnProperty(\"status\")) {\n\t\toptions.status = [\"autosave\", \"lines\", \"words\", \"cursor\"];\n\t}\n\n\n\t// Add default preview rendering function\n\tif(!options.previewRender) {\n\t\toptions.previewRender = function(plainText) {\n\t\t\t// Note: \"this\" refers to the options object\n\t\t\treturn this.parent.markdown(plainText);\n\t\t};\n\t}\n\n\n\t// Set default options for parsing config\n\toptions.parsingConfig = extend({\n\t\thighlightFormatting: true // needed for toggleCodeBlock to detect types of code\n\t}, options.parsingConfig || {});\n\n\n\t// Merging the insertTexts, with the given options\n\toptions.insertTexts = extend({}, insertTexts, options.insertTexts || {});\n\n\n\t// Merging the promptTexts, with the given options\n\toptions.promptTexts = promptTexts;\n\n\n\t// Merging the blockStyles, with the given options\n\toptions.blockStyles = extend({}, blockStyles, options.blockStyles || {});\n\n\n\t// Merging the shortcuts, with the given options\n\toptions.shortcuts = extend({}, shortcuts, options.shortcuts || {});\n\n\n\t// Change unique_id to uniqueId for backwards compatibility\n\tif(options.autosave != undefined && options.autosave.unique_id != undefined && options.autosave.unique_id != \"\")\n\t\toptions.autosave.uniqueId = options.autosave.unique_id;\n\n\n\t// Update this options\n\tthis.options = options;\n\n\n\t// Auto render\n\tthis.render();\n\n\n\t// The codemirror component is only available after rendering\n\t// so, the setter for the initialValue can only run after\n\t// the element has been rendered\n\tif(options.initialValue && (!this.options.autosave || this.options.autosave.foundSavedValue !== true)) {\n\t\tthis.value(options.initialValue);\n\t}\n}\n\n/**\n * Default markdown render.\n */\nSimpleMDE.prototype.markdown = function(text) {\n\tif(marked) {\n\t\t// Initialize\n\t\tvar markedOptions = {};\n\n\n\t\t// Update options\n\t\tif(this.options && this.options.renderingConfig && this.options.renderingConfig.singleLineBreaks === false) {\n\t\t\tmarkedOptions.breaks = false;\n\t\t} else {\n\t\t\tmarkedOptions.breaks = true;\n\t\t}\n\n\t\tif(this.options && this.options.renderingConfig && this.options.renderingConfig.codeSyntaxHighlighting === true && window.hljs) {\n\t\t\tmarkedOptions.highlight = function(code) {\n\t\t\t\treturn window.hljs.highlightAuto(code).value;\n\t\t\t};\n\t\t}\n\n\n\t\t// Set options\n\t\tmarked.setOptions(markedOptions);\n\n\n\t\t// Return\n\t\treturn marked(text);\n\t}\n};\n\n/**\n * Render editor to the given element.\n */\nSimpleMDE.prototype.render = function(el) {\n\tif(!el) {\n\t\tel = this.element || document.getElementsByTagName(\"textarea\")[0];\n\t}\n\n\tif(this._rendered && this._rendered === el) {\n\t\t// Already rendered.\n\t\treturn;\n\t}\n\n\tthis.element = el;\n\tvar options = this.options;\n\n\tvar self = this;\n\tvar keyMaps = {};\n\n\tfor(var key in options.shortcuts) {\n\t\t// null stands for \"do not bind this command\"\n\t\tif(options.shortcuts[key] !== null && bindings[key] !== null) {\n\t\t\t(function(key) {\n\t\t\t\tkeyMaps[fixShortcut(options.shortcuts[key])] = function() {\n\t\t\t\t\tbindings[key](self);\n\t\t\t\t};\n\t\t\t})(key);\n\t\t}\n\t}\n\n\tkeyMaps[\"Enter\"] = \"newlineAndIndentContinueMarkdownList\";\n\tkeyMaps[\"Tab\"] = \"tabAndIndentMarkdownList\";\n\tkeyMaps[\"Shift-Tab\"] = \"shiftTabAndUnindentMarkdownList\";\n\tkeyMaps[\"Esc\"] = function(cm) {\n\t\tif(cm.getOption(\"fullScreen\")) toggleFullScreen(self);\n\t};\n\n\tdocument.addEventListener(\"keydown\", function(e) {\n\t\te = e || window.event;\n\n\t\tif(e.keyCode == 27) {\n\t\t\tif(self.codemirror.getOption(\"fullScreen\")) toggleFullScreen(self);\n\t\t}\n\t}, false);\n\n\tvar mode, backdrop;\n\tif(options.spellChecker !== false) {\n\t\tmode = \"spell-checker\";\n\t\tbackdrop = options.parsingConfig;\n\t\tbackdrop.name = \"gfm\";\n\t\tbackdrop.gitHubSpice = false;\n\n\t\tCodeMirrorSpellChecker({\n\t\t\tcodeMirrorInstance: CodeMirror\n\t\t});\n\t} else {\n\t\tmode = options.parsingConfig;\n\t\tmode.name = \"gfm\";\n\t\tmode.gitHubSpice = false;\n\t}\n\n\tthis.codemirror = CodeMirror.fromTextArea(el, {\n\t\tmode: mode,\n\t\tbackdrop: backdrop,\n\t\ttheme: \"paper\",\n\t\ttabSize: (options.tabSize != undefined) ? options.tabSize : 2,\n\t\tindentUnit: (options.tabSize != undefined) ? options.tabSize : 2,\n\t\tindentWithTabs: (options.indentWithTabs === false) ? false : true,\n\t\tlineNumbers: false,\n\t\tautofocus: (options.autofocus === true) ? true : false,\n\t\textraKeys: keyMaps,\n\t\tlineWrapping: (options.lineWrapping === false) ? false : true,\n\t\tallowDropFileTypes: [\"text/plain\"],\n\t\tplaceholder: options.placeholder || el.getAttribute(\"placeholder\") || \"\",\n\t\tstyleSelectedText: (options.styleSelectedText != undefined) ? options.styleSelectedText : true\n\t});\n\n\tif(options.forceSync === true) {\n\t\tvar cm = this.codemirror;\n\t\tcm.on(\"change\", function() {\n\t\t\tcm.save();\n\t\t});\n\t}\n\n\tthis.gui = {};\n\n\tif(options.toolbar !== false) {\n\t\tthis.gui.toolbar = this.createToolbar();\n\t}\n\tif(options.status !== false) {\n\t\tthis.gui.statusbar = this.createStatusbar();\n\t}\n\tif(options.autosave != undefined && options.autosave.enabled === true) {\n\t\tthis.autosave();\n\t}\n\n\tthis.gui.sideBySide = this.createSideBySide();\n\n\tthis._rendered = this.element;\n\n\n\t// Fixes CodeMirror bug (#344)\n\tvar temp_cm = this.codemirror;\n\tsetTimeout(function() {\n\t\ttemp_cm.refresh();\n\t}.bind(temp_cm), 0);\n};\n\n// Safari, in Private Browsing Mode, looks like it supports localStorage but all calls to setItem throw QuotaExceededError. We're going to detect this and set a variable accordingly.\nfunction isLocalStorageAvailable() {\n\tif(typeof localStorage === \"object\") {\n\t\ttry {\n\t\t\tlocalStorage.setItem(\"smde_localStorage\", 1);\n\t\t\tlocalStorage.removeItem(\"smde_localStorage\");\n\t\t} catch(e) {\n\t\t\treturn false;\n\t\t}\n\t} else {\n\t\treturn false;\n\t}\n\n\treturn true;\n}\n\nSimpleMDE.prototype.autosave = function() {\n\tif(isLocalStorageAvailable()) {\n\t\tvar simplemde = this;\n\n\t\tif(this.options.autosave.uniqueId == undefined || this.options.autosave.uniqueId == \"\") {\n\t\t\tconsole.log(\"SimpleMDE: You must set a uniqueId to use the autosave feature\");\n\t\t\treturn;\n\t\t}\n\n\t\tif(simplemde.element.form != null && simplemde.element.form != undefined) {\n\t\t\tsimplemde.element.form.addEventListener(\"submit\", function() {\n\t\t\t\tlocalStorage.removeItem(\"smde_\" + simplemde.options.autosave.uniqueId);\n\t\t\t});\n\t\t}\n\n\t\tif(this.options.autosave.loaded !== true) {\n\t\t\tif(typeof localStorage.getItem(\"smde_\" + this.options.autosave.uniqueId) == \"string\" && localStorage.getItem(\"smde_\" + this.options.autosave.uniqueId) != \"\") {\n\t\t\t\tthis.codemirror.setValue(localStorage.getItem(\"smde_\" + this.options.autosave.uniqueId));\n\t\t\t\tthis.options.autosave.foundSavedValue = true;\n\t\t\t}\n\n\t\t\tthis.options.autosave.loaded = true;\n\t\t}\n\n\t\tlocalStorage.setItem(\"smde_\" + this.options.autosave.uniqueId, simplemde.value());\n\n\t\tvar el = document.getElementById(\"autosaved\");\n\t\tif(el != null && el != undefined && el != \"\") {\n\t\t\tvar d = new Date();\n\t\t\tvar hh = d.getHours();\n\t\t\tvar m = d.getMinutes();\n\t\t\tvar dd = \"am\";\n\t\t\tvar h = hh;\n\t\t\tif(h >= 12) {\n\t\t\t\th = hh - 12;\n\t\t\t\tdd = \"pm\";\n\t\t\t}\n\t\t\tif(h == 0) {\n\t\t\t\th = 12;\n\t\t\t}\n\t\t\tm = m < 10 ? \"0\" + m : m;\n\n\t\t\tel.innerHTML = \"Autosaved: \" + h + \":\" + m + \" \" + dd;\n\t\t}\n\n\t\tthis.autosaveTimeoutId = setTimeout(function() {\n\t\t\tsimplemde.autosave();\n\t\t}, this.options.autosave.delay || 10000);\n\t} else {\n\t\tconsole.log(\"SimpleMDE: localStorage not available, cannot autosave\");\n\t}\n};\n\nSimpleMDE.prototype.clearAutosavedValue = function() {\n\tif(isLocalStorageAvailable()) {\n\t\tif(this.options.autosave == undefined || this.options.autosave.uniqueId == undefined || this.options.autosave.uniqueId == \"\") {\n\t\t\tconsole.log(\"SimpleMDE: You must set a uniqueId to clear the autosave value\");\n\t\t\treturn;\n\t\t}\n\n\t\tlocalStorage.removeItem(\"smde_\" + this.options.autosave.uniqueId);\n\t} else {\n\t\tconsole.log(\"SimpleMDE: localStorage not available, cannot autosave\");\n\t}\n};\n\nSimpleMDE.prototype.createSideBySide = function() {\n\tvar cm = this.codemirror;\n\tvar wrapper = cm.getWrapperElement();\n\tvar preview = wrapper.nextSibling;\n\n\tif(!preview || !/editor-preview-side/.test(preview.className)) {\n\t\tpreview = document.createElement(\"div\");\n\t\tpreview.className = \"editor-preview-side\";\n\t\twrapper.parentNode.insertBefore(preview, wrapper.nextSibling);\n\t}\n\n\t// Syncs scroll  editor -> preview\n\tvar cScroll = false;\n\tvar pScroll = false;\n\tcm.on(\"scroll\", function(v) {\n\t\tif(cScroll) {\n\t\t\tcScroll = false;\n\t\t\treturn;\n\t\t}\n\t\tpScroll = true;\n\t\tvar height = v.getScrollInfo().height - v.getScrollInfo().clientHeight;\n\t\tvar ratio = parseFloat(v.getScrollInfo().top) / height;\n\t\tvar move = (preview.scrollHeight - preview.clientHeight) * ratio;\n\t\tpreview.scrollTop = move;\n\t});\n\n\t// Syncs scroll  preview -> editor\n\tpreview.onscroll = function() {\n\t\tif(pScroll) {\n\t\t\tpScroll = false;\n\t\t\treturn;\n\t\t}\n\t\tcScroll = true;\n\t\tvar height = preview.scrollHeight - preview.clientHeight;\n\t\tvar ratio = parseFloat(preview.scrollTop) / height;\n\t\tvar move = (cm.getScrollInfo().height - cm.getScrollInfo().clientHeight) * ratio;\n\t\tcm.scrollTo(0, move);\n\t};\n\treturn preview;\n};\n\nSimpleMDE.prototype.createToolbar = function(items) {\n\titems = items || this.options.toolbar;\n\n\tif(!items || items.length === 0) {\n\t\treturn;\n\t}\n\tvar i;\n\tfor(i = 0; i < items.length; i++) {\n\t\tif(toolbarBuiltInButtons[items[i]] != undefined) {\n\t\t\titems[i] = toolbarBuiltInButtons[items[i]];\n\t\t}\n\t}\n\n\tvar bar = document.createElement(\"div\");\n\tbar.className = \"editor-toolbar\";\n\n\tvar self = this;\n\n\tvar toolbarData = {};\n\tself.toolbar = items;\n\n\tfor(i = 0; i < items.length; i++) {\n\t\tif(items[i].name == \"guide\" && self.options.toolbarGuideIcon === false)\n\t\t\tcontinue;\n\n\t\tif(self.options.hideIcons && self.options.hideIcons.indexOf(items[i].name) != -1)\n\t\t\tcontinue;\n\n\t\t// Fullscreen does not work well on mobile devices (even tablets)\n\t\t// In the future, hopefully this can be resolved\n\t\tif((items[i].name == \"fullscreen\" || items[i].name == \"side-by-side\") && isMobile())\n\t\t\tcontinue;\n\n\n\t\t// Don't include trailing separators\n\t\tif(items[i] === \"|\") {\n\t\t\tvar nonSeparatorIconsFollow = false;\n\n\t\t\tfor(var x = (i + 1); x < items.length; x++) {\n\t\t\t\tif(items[x] !== \"|\" && (!self.options.hideIcons || self.options.hideIcons.indexOf(items[x].name) == -1)) {\n\t\t\t\t\tnonSeparatorIconsFollow = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif(!nonSeparatorIconsFollow)\n\t\t\t\tcontinue;\n\t\t}\n\n\n\t\t// Create the icon and append to the toolbar\n\t\t(function(item) {\n\t\t\tvar el;\n\t\t\tif(item === \"|\") {\n\t\t\t\tel = createSep();\n\t\t\t} else {\n\t\t\t\tel = createIcon(item, self.options.toolbarTips, self.options.shortcuts);\n\t\t\t}\n\n\t\t\t// bind events, special for info\n\t\t\tif(item.action) {\n\t\t\t\tif(typeof item.action === \"function\") {\n\t\t\t\t\tel.onclick = function(e) {\n\t\t\t\t\t\te.preventDefault();\n\t\t\t\t\t\titem.action(self);\n\t\t\t\t\t};\n\t\t\t\t} else if(typeof item.action === \"string\") {\n\t\t\t\t\tel.href = item.action;\n\t\t\t\t\tel.target = \"_blank\";\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttoolbarData[item.name || item] = el;\n\t\t\tbar.appendChild(el);\n\t\t})(items[i]);\n\t}\n\n\tself.toolbarElements = toolbarData;\n\n\tvar cm = this.codemirror;\n\tcm.on(\"cursorActivity\", function() {\n\t\tvar stat = getState(cm);\n\n\t\tfor(var key in toolbarData) {\n\t\t\t(function(key) {\n\t\t\t\tvar el = toolbarData[key];\n\t\t\t\tif(stat[key]) {\n\t\t\t\t\tel.className += \" active\";\n\t\t\t\t} else if(key != \"fullscreen\" && key != \"side-by-side\") {\n\t\t\t\t\tel.className = el.className.replace(/\\s*active\\s*/g, \"\");\n\t\t\t\t}\n\t\t\t})(key);\n\t\t}\n\t});\n\n\tvar cmWrapper = cm.getWrapperElement();\n\tcmWrapper.parentNode.insertBefore(bar, cmWrapper);\n\treturn bar;\n};\n\nSimpleMDE.prototype.createStatusbar = function(status) {\n\t// Initialize\n\tstatus = status || this.options.status;\n\tvar options = this.options;\n\tvar cm = this.codemirror;\n\n\n\t// Make sure the status variable is valid\n\tif(!status || status.length === 0)\n\t\treturn;\n\n\n\t// Set up the built-in items\n\tvar items = [];\n\tvar i, onUpdate, defaultValue;\n\n\tfor(i = 0; i < status.length; i++) {\n\t\t// Reset some values\n\t\tonUpdate = undefined;\n\t\tdefaultValue = undefined;\n\n\n\t\t// Handle if custom or not\n\t\tif(typeof status[i] === \"object\") {\n\t\t\titems.push({\n\t\t\t\tclassName: status[i].className,\n\t\t\t\tdefaultValue: status[i].defaultValue,\n\t\t\t\tonUpdate: status[i].onUpdate\n\t\t\t});\n\t\t} else {\n\t\t\tvar name = status[i];\n\n\t\t\tif(name === \"words\") {\n\t\t\t\tdefaultValue = function(el) {\n\t\t\t\t\tel.innerHTML = wordCount(cm.getValue());\n\t\t\t\t};\n\t\t\t\tonUpdate = function(el) {\n\t\t\t\t\tel.innerHTML = wordCount(cm.getValue());\n\t\t\t\t};\n\t\t\t} else if(name === \"lines\") {\n\t\t\t\tdefaultValue = function(el) {\n\t\t\t\t\tel.innerHTML = cm.lineCount();\n\t\t\t\t};\n\t\t\t\tonUpdate = function(el) {\n\t\t\t\t\tel.innerHTML = cm.lineCount();\n\t\t\t\t};\n\t\t\t} else if(name === \"cursor\") {\n\t\t\t\tdefaultValue = function(el) {\n\t\t\t\t\tel.innerHTML = \"0:0\";\n\t\t\t\t};\n\t\t\t\tonUpdate = function(el) {\n\t\t\t\t\tvar pos = cm.getCursor();\n\t\t\t\t\tel.innerHTML = pos.line + \":\" + pos.ch;\n\t\t\t\t};\n\t\t\t} else if(name === \"autosave\") {\n\t\t\t\tdefaultValue = function(el) {\n\t\t\t\t\tif(options.autosave != undefined && options.autosave.enabled === true) {\n\t\t\t\t\t\tel.setAttribute(\"id\", \"autosaved\");\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\titems.push({\n\t\t\t\tclassName: name,\n\t\t\t\tdefaultValue: defaultValue,\n\t\t\t\tonUpdate: onUpdate\n\t\t\t});\n\t\t}\n\t}\n\n\n\t// Create element for the status bar\n\tvar bar = document.createElement(\"div\");\n\tbar.className = \"editor-statusbar\";\n\n\n\t// Create a new span for each item\n\tfor(i = 0; i < items.length; i++) {\n\t\t// Store in temporary variable\n\t\tvar item = items[i];\n\n\n\t\t// Create span element\n\t\tvar el = document.createElement(\"span\");\n\t\tel.className = item.className;\n\n\n\t\t// Ensure the defaultValue is a function\n\t\tif(typeof item.defaultValue === \"function\") {\n\t\t\titem.defaultValue(el);\n\t\t}\n\n\n\t\t// Ensure the onUpdate is a function\n\t\tif(typeof item.onUpdate === \"function\") {\n\t\t\t// Create a closure around the span of the current action, then execute the onUpdate handler\n\t\t\tthis.codemirror.on(\"update\", (function(el, item) {\n\t\t\t\treturn function() {\n\t\t\t\t\titem.onUpdate(el);\n\t\t\t\t};\n\t\t\t}(el, item)));\n\t\t}\n\n\n\t\t// Append the item to the status bar\n\t\tbar.appendChild(el);\n\t}\n\n\n\t// Insert the status bar into the DOM\n\tvar cmWrapper = this.codemirror.getWrapperElement();\n\tcmWrapper.parentNode.insertBefore(bar, cmWrapper.nextSibling);\n\treturn bar;\n};\n\n/**\n * Get or set the text content.\n */\nSimpleMDE.prototype.value = function(val) {\n\tif(val === undefined) {\n\t\treturn this.codemirror.getValue();\n\t} else {\n\t\tthis.codemirror.getDoc().setValue(val);\n\t\treturn this;\n\t}\n};\n\n\n/**\n * Bind static methods for exports.\n */\nSimpleMDE.toggleBold = toggleBold;\nSimpleMDE.toggleItalic = toggleItalic;\nSimpleMDE.toggleStrikethrough = toggleStrikethrough;\nSimpleMDE.toggleBlockquote = toggleBlockquote;\nSimpleMDE.toggleHeadingSmaller = toggleHeadingSmaller;\nSimpleMDE.toggleHeadingBigger = toggleHeadingBigger;\nSimpleMDE.toggleHeading1 = toggleHeading1;\nSimpleMDE.toggleHeading2 = toggleHeading2;\nSimpleMDE.toggleHeading3 = toggleHeading3;\nSimpleMDE.toggleCodeBlock = toggleCodeBlock;\nSimpleMDE.toggleUnorderedList = toggleUnorderedList;\nSimpleMDE.toggleOrderedList = toggleOrderedList;\nSimpleMDE.cleanBlock = cleanBlock;\nSimpleMDE.drawLink = drawLink;\nSimpleMDE.drawImage = drawImage;\nSimpleMDE.drawTable = drawTable;\nSimpleMDE.drawHorizontalRule = drawHorizontalRule;\nSimpleMDE.undo = undo;\nSimpleMDE.redo = redo;\nSimpleMDE.togglePreview = togglePreview;\nSimpleMDE.toggleSideBySide = toggleSideBySide;\nSimpleMDE.toggleFullScreen = toggleFullScreen;\n\n/**\n * Bind instance methods for exports.\n */\nSimpleMDE.prototype.toggleBold = function() {\n\ttoggleBold(this);\n};\nSimpleMDE.prototype.toggleItalic = function() {\n\ttoggleItalic(this);\n};\nSimpleMDE.prototype.toggleStrikethrough = function() {\n\ttoggleStrikethrough(this);\n};\nSimpleMDE.prototype.toggleBlockquote = function() {\n\ttoggleBlockquote(this);\n};\nSimpleMDE.prototype.toggleHeadingSmaller = function() {\n\ttoggleHeadingSmaller(this);\n};\nSimpleMDE.prototype.toggleHeadingBigger = function() {\n\ttoggleHeadingBigger(this);\n};\nSimpleMDE.prototype.toggleHeading1 = function() {\n\ttoggleHeading1(this);\n};\nSimpleMDE.prototype.toggleHeading2 = function() {\n\ttoggleHeading2(this);\n};\nSimpleMDE.prototype.toggleHeading3 = function() {\n\ttoggleHeading3(this);\n};\nSimpleMDE.prototype.toggleCodeBlock = function() {\n\ttoggleCodeBlock(this);\n};\nSimpleMDE.prototype.toggleUnorderedList = function() {\n\ttoggleUnorderedList(this);\n};\nSimpleMDE.prototype.toggleOrderedList = function() {\n\ttoggleOrderedList(this);\n};\nSimpleMDE.prototype.cleanBlock = function() {\n\tcleanBlock(this);\n};\nSimpleMDE.prototype.drawLink = function() {\n\tdrawLink(this);\n};\nSimpleMDE.prototype.drawImage = function() {\n\tdrawImage(this);\n};\nSimpleMDE.prototype.drawTable = function() {\n\tdrawTable(this);\n};\nSimpleMDE.prototype.drawHorizontalRule = function() {\n\tdrawHorizontalRule(this);\n};\nSimpleMDE.prototype.undo = function() {\n\tundo(this);\n};\nSimpleMDE.prototype.redo = function() {\n\tredo(this);\n};\nSimpleMDE.prototype.togglePreview = function() {\n\ttogglePreview(this);\n};\nSimpleMDE.prototype.toggleSideBySide = function() {\n\ttoggleSideBySide(this);\n};\nSimpleMDE.prototype.toggleFullScreen = function() {\n\ttoggleFullScreen(this);\n};\n\nSimpleMDE.prototype.isPreviewActive = function() {\n\tvar cm = this.codemirror;\n\tvar wrapper = cm.getWrapperElement();\n\tvar preview = wrapper.lastChild;\n\n\treturn /editor-preview-active/.test(preview.className);\n};\n\nSimpleMDE.prototype.isSideBySideActive = function() {\n\tvar cm = this.codemirror;\n\tvar wrapper = cm.getWrapperElement();\n\tvar preview = wrapper.nextSibling;\n\n\treturn /editor-preview-active-side/.test(preview.className);\n};\n\nSimpleMDE.prototype.isFullscreenActive = function() {\n\tvar cm = this.codemirror;\n\n\treturn cm.getOption(\"fullScreen\");\n};\n\nSimpleMDE.prototype.getState = function() {\n\tvar cm = this.codemirror;\n\n\treturn getState(cm);\n};\n\nSimpleMDE.prototype.toTextArea = function() {\n\tvar cm = this.codemirror;\n\tvar wrapper = cm.getWrapperElement();\n\n\tif(wrapper.parentNode) {\n\t\tif(this.gui.toolbar) {\n\t\t\twrapper.parentNode.removeChild(this.gui.toolbar);\n\t\t}\n\t\tif(this.gui.statusbar) {\n\t\t\twrapper.parentNode.removeChild(this.gui.statusbar);\n\t\t}\n\t\tif(this.gui.sideBySide) {\n\t\t\twrapper.parentNode.removeChild(this.gui.sideBySide);\n\t\t}\n\t}\n\n\tcm.toTextArea();\n\n\tif(this.autosaveTimeoutId) {\n\t\tclearTimeout(this.autosaveTimeoutId);\n\t\tthis.autosaveTimeoutId = undefined;\n\t\tthis.clearAutosavedValue();\n\t}\n};\n\nmodule.exports = SimpleMDE;","// Use strict mode (https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Strict_mode)\n\"use strict\";\n\n\n// Requires\nvar Typo = require(\"typo-js\");\n\n\n// Create function\nfunction CodeMirrorSpellChecker(options) {\n\t// Initialize\n\toptions = options || {};\n\n\n\t// Verify\n\tif(typeof options.codeMirrorInstance !== \"function\" || typeof options.codeMirrorInstance.defineMode !== \"function\") {\n\t\tconsole.log(\"CodeMirror Spell Checker: You must provide an instance of CodeMirror via the option `codeMirrorInstance`\");\n\t\treturn;\n\t}\n\n\n\t// Because some browsers don't support this functionality yet\n\tif(!String.prototype.includes) {\n\t\tString.prototype.includes = function() {\n\t\t\t\"use strict\";\n\t\t\treturn String.prototype.indexOf.apply(this, arguments) !== -1;\n\t\t};\n\t}\n\n\n\t// Define the new mode\n\toptions.codeMirrorInstance.defineMode(\"spell-checker\", function(config) {\n\t\t// Load AFF/DIC data\n\t\tif(!CodeMirrorSpellChecker.aff_loading) {\n\t\t\tCodeMirrorSpellChecker.aff_loading = true;\n\t\t\tvar xhr_aff = new XMLHttpRequest();\n\t\t\txhr_aff.open(\"GET\", \"https://cdn.jsdelivr.net/codemirror.spell-checker/latest/en_US.aff\", true);\n\t\t\txhr_aff.onload = function() {\n\t\t\t\tif(xhr_aff.readyState === 4 && xhr_aff.status === 200) {\n\t\t\t\t\tCodeMirrorSpellChecker.aff_data = xhr_aff.responseText;\n\t\t\t\t\tCodeMirrorSpellChecker.num_loaded++;\n\n\t\t\t\t\tif(CodeMirrorSpellChecker.num_loaded == 2) {\n\t\t\t\t\t\tCodeMirrorSpellChecker.typo = new Typo(\"en_US\", CodeMirrorSpellChecker.aff_data, CodeMirrorSpellChecker.dic_data, {\n\t\t\t\t\t\t\tplatform: \"any\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\txhr_aff.send(null);\n\t\t}\n\n\t\tif(!CodeMirrorSpellChecker.dic_loading) {\n\t\t\tCodeMirrorSpellChecker.dic_loading = true;\n\t\t\tvar xhr_dic = new XMLHttpRequest();\n\t\t\txhr_dic.open(\"GET\", \"https://cdn.jsdelivr.net/codemirror.spell-checker/latest/en_US.dic\", true);\n\t\t\txhr_dic.onload = function() {\n\t\t\t\tif(xhr_dic.readyState === 4 && xhr_dic.status === 200) {\n\t\t\t\t\tCodeMirrorSpellChecker.dic_data = xhr_dic.responseText;\n\t\t\t\t\tCodeMirrorSpellChecker.num_loaded++;\n\n\t\t\t\t\tif(CodeMirrorSpellChecker.num_loaded == 2) {\n\t\t\t\t\t\tCodeMirrorSpellChecker.typo = new Typo(\"en_US\", CodeMirrorSpellChecker.aff_data, CodeMirrorSpellChecker.dic_data, {\n\t\t\t\t\t\t\tplatform: \"any\"\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t\txhr_dic.send(null);\n\t\t}\n\n\n\t\t// Define what separates a word\n\t\tvar rx_word = \"!\\\"#$%&()*+,-./:;<=>?@[\\\\]^_`{|}~ \";\n\n\n\t\t// Create the overlay and such\n\t\tvar overlay = {\n\t\t\ttoken: function(stream) {\n\t\t\t\tvar ch = stream.peek();\n\t\t\t\tvar word = \"\";\n\n\t\t\t\tif(rx_word.includes(ch)) {\n\t\t\t\t\tstream.next();\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\n\t\t\t\twhile((ch = stream.peek()) != null && !rx_word.includes(ch)) {\n\t\t\t\t\tword += ch;\n\t\t\t\t\tstream.next();\n\t\t\t\t}\n\n\t\t\t\tif(CodeMirrorSpellChecker.typo && !CodeMirrorSpellChecker.typo.check(word))\n\t\t\t\t\treturn \"spell-error\"; // CSS class: cm-spell-error\n\n\t\t\t\treturn null;\n\t\t\t}\n\t\t};\n\n\t\tvar mode = options.codeMirrorInstance.getMode(\n\t\t\tconfig, config.backdrop || \"text/plain\"\n\t\t);\n\n\t\treturn options.codeMirrorInstance.overlayMode(mode, overlay, true);\n\t});\n}\n\n\n// Initialize data globally to reduce memory consumption\nCodeMirrorSpellChecker.num_loaded = 0;\nCodeMirrorSpellChecker.aff_loading = false;\nCodeMirrorSpellChecker.dic_loading = false;\nCodeMirrorSpellChecker.aff_data = \"\";\nCodeMirrorSpellChecker.dic_data = \"\";\nCodeMirrorSpellChecker.typo;\n\n\n// Export\nmodule.exports = CodeMirrorSpellChecker;","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.modeInfo = [\n    {name: \"APL\", mime: \"text/apl\", mode: \"apl\", ext: [\"dyalog\", \"apl\"]},\n    {name: \"PGP\", mimes: [\"application/pgp\", \"application/pgp-encrypted\", \"application/pgp-keys\", \"application/pgp-signature\"], mode: \"asciiarmor\", ext: [\"asc\", \"pgp\", \"sig\"]},\n    {name: \"ASN.1\", mime: \"text/x-ttcn-asn\", mode: \"asn.1\", ext: [\"asn\", \"asn1\"]},\n    {name: \"Asterisk\", mime: \"text/x-asterisk\", mode: \"asterisk\", file: /^extensions\\.conf$/i},\n    {name: \"Brainfuck\", mime: \"text/x-brainfuck\", mode: \"brainfuck\", ext: [\"b\", \"bf\"]},\n    {name: \"C\", mime: \"text/x-csrc\", mode: \"clike\", ext: [\"c\", \"h\", \"ino\"]},\n    {name: \"C++\", mime: \"text/x-c++src\", mode: \"clike\", ext: [\"cpp\", \"c++\", \"cc\", \"cxx\", \"hpp\", \"h++\", \"hh\", \"hxx\"], alias: [\"cpp\"]},\n    {name: \"Cobol\", mime: \"text/x-cobol\", mode: \"cobol\", ext: [\"cob\", \"cpy\"]},\n    {name: \"C#\", mime: \"text/x-csharp\", mode: \"clike\", ext: [\"cs\"], alias: [\"csharp\"]},\n    {name: \"Clojure\", mime: \"text/x-clojure\", mode: \"clojure\", ext: [\"clj\", \"cljc\", \"cljx\"]},\n    {name: \"ClojureScript\", mime: \"text/x-clojurescript\", mode: \"clojure\", ext: [\"cljs\"]},\n    {name: \"Closure Stylesheets (GSS)\", mime: \"text/x-gss\", mode: \"css\", ext: [\"gss\"]},\n    {name: \"CMake\", mime: \"text/x-cmake\", mode: \"cmake\", ext: [\"cmake\", \"cmake.in\"], file: /^CMakeLists.txt$/},\n    {name: \"CoffeeScript\", mimes: [\"application/vnd.coffeescript\", \"text/coffeescript\", \"text/x-coffeescript\"], mode: \"coffeescript\", ext: [\"coffee\"], alias: [\"coffee\", \"coffee-script\"]},\n    {name: \"Common Lisp\", mime: \"text/x-common-lisp\", mode: \"commonlisp\", ext: [\"cl\", \"lisp\", \"el\"], alias: [\"lisp\"]},\n    {name: \"Cypher\", mime: \"application/x-cypher-query\", mode: \"cypher\", ext: [\"cyp\", \"cypher\"]},\n    {name: \"Cython\", mime: \"text/x-cython\", mode: \"python\", ext: [\"pyx\", \"pxd\", \"pxi\"]},\n    {name: \"Crystal\", mime: \"text/x-crystal\", mode: \"crystal\", ext: [\"cr\"]},\n    {name: \"CSS\", mime: \"text/css\", mode: \"css\", ext: [\"css\"]},\n    {name: \"CQL\", mime: \"text/x-cassandra\", mode: \"sql\", ext: [\"cql\"]},\n    {name: \"D\", mime: \"text/x-d\", mode: \"d\", ext: [\"d\"]},\n    {name: \"Dart\", mimes: [\"application/dart\", \"text/x-dart\"], mode: \"dart\", ext: [\"dart\"]},\n    {name: \"diff\", mime: \"text/x-diff\", mode: \"diff\", ext: [\"diff\", \"patch\"]},\n    {name: \"Django\", mime: \"text/x-django\", mode: \"django\"},\n    {name: \"Dockerfile\", mime: \"text/x-dockerfile\", mode: \"dockerfile\", file: /^Dockerfile$/},\n    {name: \"DTD\", mime: \"application/xml-dtd\", mode: \"dtd\", ext: [\"dtd\"]},\n    {name: \"Dylan\", mime: \"text/x-dylan\", mode: \"dylan\", ext: [\"dylan\", \"dyl\", \"intr\"]},\n    {name: \"EBNF\", mime: \"text/x-ebnf\", mode: \"ebnf\"},\n    {name: \"ECL\", mime: \"text/x-ecl\", mode: \"ecl\", ext: [\"ecl\"]},\n    {name: \"edn\", mime: \"application/edn\", mode: \"clojure\", ext: [\"edn\"]},\n    {name: \"Eiffel\", mime: \"text/x-eiffel\", mode: \"eiffel\", ext: [\"e\"]},\n    {name: \"Elm\", mime: \"text/x-elm\", mode: \"elm\", ext: [\"elm\"]},\n    {name: \"Embedded Javascript\", mime: \"application/x-ejs\", mode: \"htmlembedded\", ext: [\"ejs\"]},\n    {name: \"Embedded Ruby\", mime: \"application/x-erb\", mode: \"htmlembedded\", ext: [\"erb\"]},\n    {name: \"Erlang\", mime: \"text/x-erlang\", mode: \"erlang\", ext: [\"erl\"]},\n    {name: \"Esper\", mime: \"text/x-esper\", mode: \"sql\"},\n    {name: \"Factor\", mime: \"text/x-factor\", mode: \"factor\", ext: [\"factor\"]},\n    {name: \"FCL\", mime: \"text/x-fcl\", mode: \"fcl\"},\n    {name: \"Forth\", mime: \"text/x-forth\", mode: \"forth\", ext: [\"forth\", \"fth\", \"4th\"]},\n    {name: \"Fortran\", mime: \"text/x-fortran\", mode: \"fortran\", ext: [\"f\", \"for\", \"f77\", \"f90\"]},\n    {name: \"F#\", mime: \"text/x-fsharp\", mode: \"mllike\", ext: [\"fs\"], alias: [\"fsharp\"]},\n    {name: \"Gas\", mime: \"text/x-gas\", mode: \"gas\", ext: [\"s\"]},\n    {name: \"Gherkin\", mime: \"text/x-feature\", mode: \"gherkin\", ext: [\"feature\"]},\n    {name: \"GitHub Flavored Markdown\", mime: \"text/x-gfm\", mode: \"gfm\", file: /^(readme|contributing|history).md$/i},\n    {name: \"Go\", mime: \"text/x-go\", mode: \"go\", ext: [\"go\"]},\n    {name: \"Groovy\", mime: \"text/x-groovy\", mode: \"groovy\", ext: [\"groovy\", \"gradle\"], file: /^Jenkinsfile$/},\n    {name: \"HAML\", mime: \"text/x-haml\", mode: \"haml\", ext: [\"haml\"]},\n    {name: \"Haskell\", mime: \"text/x-haskell\", mode: \"haskell\", ext: [\"hs\"]},\n    {name: \"Haskell (Literate)\", mime: \"text/x-literate-haskell\", mode: \"haskell-literate\", ext: [\"lhs\"]},\n    {name: \"Haxe\", mime: \"text/x-haxe\", mode: \"haxe\", ext: [\"hx\"]},\n    {name: \"HXML\", mime: \"text/x-hxml\", mode: \"haxe\", ext: [\"hxml\"]},\n    {name: \"ASP.NET\", mime: \"application/x-aspx\", mode: \"htmlembedded\", ext: [\"aspx\"], alias: [\"asp\", \"aspx\"]},\n    {name: \"HTML\", mime: \"text/html\", mode: \"htmlmixed\", ext: [\"html\", \"htm\", \"handlebars\", \"hbs\"], alias: [\"xhtml\"]},\n    {name: \"HTTP\", mime: \"message/http\", mode: \"http\"},\n    {name: \"IDL\", mime: \"text/x-idl\", mode: \"idl\", ext: [\"pro\"]},\n    {name: \"Pug\", mime: \"text/x-pug\", mode: \"pug\", ext: [\"jade\", \"pug\"], alias: [\"jade\"]},\n    {name: \"Java\", mime: \"text/x-java\", mode: \"clike\", ext: [\"java\"]},\n    {name: \"Java Server Pages\", mime: \"application/x-jsp\", mode: \"htmlembedded\", ext: [\"jsp\"], alias: [\"jsp\"]},\n    {name: \"JavaScript\", mimes: [\"text/javascript\", \"text/ecmascript\", \"application/javascript\", \"application/x-javascript\", \"application/ecmascript\"],\n     mode: \"javascript\", ext: [\"js\"], alias: [\"ecmascript\", \"js\", \"node\"]},\n    {name: \"JSON\", mimes: [\"application/json\", \"application/x-json\"], mode: \"javascript\", ext: [\"json\", \"map\"], alias: [\"json5\"]},\n    {name: \"JSON-LD\", mime: \"application/ld+json\", mode: \"javascript\", ext: [\"jsonld\"], alias: [\"jsonld\"]},\n    {name: \"JSX\", mime: \"text/jsx\", mode: \"jsx\", ext: [\"jsx\"]},\n    {name: \"Jinja2\", mime: \"null\", mode: \"jinja2\"},\n    {name: \"Julia\", mime: \"text/x-julia\", mode: \"julia\", ext: [\"jl\"]},\n    {name: \"Kotlin\", mime: \"text/x-kotlin\", mode: \"clike\", ext: [\"kt\"]},\n    {name: \"LESS\", mime: \"text/x-less\", mode: \"css\", ext: [\"less\"]},\n    {name: \"LiveScript\", mime: \"text/x-livescript\", mode: \"livescript\", ext: [\"ls\"], alias: [\"ls\"]},\n    {name: \"Lua\", mime: \"text/x-lua\", mode: \"lua\", ext: [\"lua\"]},\n    {name: \"Markdown\", mime: \"text/x-markdown\", mode: \"markdown\", ext: [\"markdown\", \"md\", \"mkd\"]},\n    {name: \"mIRC\", mime: \"text/mirc\", mode: \"mirc\"},\n    {name: \"MariaDB SQL\", mime: \"text/x-mariadb\", mode: \"sql\"},\n    {name: \"Mathematica\", mime: \"text/x-mathematica\", mode: \"mathematica\", ext: [\"m\", \"nb\"]},\n    {name: \"Modelica\", mime: \"text/x-modelica\", mode: \"modelica\", ext: [\"mo\"]},\n    {name: \"MUMPS\", mime: \"text/x-mumps\", mode: \"mumps\", ext: [\"mps\"]},\n    {name: \"MS SQL\", mime: \"text/x-mssql\", mode: \"sql\"},\n    {name: \"mbox\", mime: \"application/mbox\", mode: \"mbox\", ext: [\"mbox\"]},\n    {name: \"MySQL\", mime: \"text/x-mysql\", mode: \"sql\"},\n    {name: \"Nginx\", mime: \"text/x-nginx-conf\", mode: \"nginx\", file: /nginx.*\\.conf$/i},\n    {name: \"NSIS\", mime: \"text/x-nsis\", mode: \"nsis\", ext: [\"nsh\", \"nsi\"]},\n    {name: \"NTriples\", mimes: [\"application/n-triples\", \"application/n-quads\", \"text/n-triples\"],\n     mode: \"ntriples\", ext: [\"nt\", \"nq\"]},\n    {name: \"Objective-C\", mime: \"text/x-objectivec\", mode: \"clike\", ext: [\"m\", \"mm\"], alias: [\"objective-c\", \"objc\"]},\n    {name: \"OCaml\", mime: \"text/x-ocaml\", mode: \"mllike\", ext: [\"ml\", \"mli\", \"mll\", \"mly\"]},\n    {name: \"Octave\", mime: \"text/x-octave\", mode: \"octave\", ext: [\"m\"]},\n    {name: \"Oz\", mime: \"text/x-oz\", mode: \"oz\", ext: [\"oz\"]},\n    {name: \"Pascal\", mime: \"text/x-pascal\", mode: \"pascal\", ext: [\"p\", \"pas\"]},\n    {name: \"PEG.js\", mime: \"null\", mode: \"pegjs\", ext: [\"jsonld\"]},\n    {name: \"Perl\", mime: \"text/x-perl\", mode: \"perl\", ext: [\"pl\", \"pm\"]},\n    {name: \"PHP\", mimes: [\"text/x-php\", \"application/x-httpd-php\", \"application/x-httpd-php-open\"], mode: \"php\", ext: [\"php\", \"php3\", \"php4\", \"php5\", \"php7\", \"phtml\"]},\n    {name: \"Pig\", mime: \"text/x-pig\", mode: \"pig\", ext: [\"pig\"]},\n    {name: \"Plain Text\", mime: \"text/plain\", mode: \"null\", ext: [\"txt\", \"text\", \"conf\", \"def\", \"list\", \"log\"]},\n    {name: \"PLSQL\", mime: \"text/x-plsql\", mode: \"sql\", ext: [\"pls\"]},\n    {name: \"PowerShell\", mime: \"application/x-powershell\", mode: \"powershell\", ext: [\"ps1\", \"psd1\", \"psm1\"]},\n    {name: \"Properties files\", mime: \"text/x-properties\", mode: \"properties\", ext: [\"properties\", \"ini\", \"in\"], alias: [\"ini\", \"properties\"]},\n    {name: \"ProtoBuf\", mime: \"text/x-protobuf\", mode: \"protobuf\", ext: [\"proto\"]},\n    {name: \"Python\", mime: \"text/x-python\", mode: \"python\", ext: [\"BUILD\", \"bzl\", \"py\", \"pyw\"], file: /^(BUCK|BUILD)$/},\n    {name: \"Puppet\", mime: \"text/x-puppet\", mode: \"puppet\", ext: [\"pp\"]},\n    {name: \"Q\", mime: \"text/x-q\", mode: \"q\", ext: [\"q\"]},\n    {name: \"R\", mime: \"text/x-rsrc\", mode: \"r\", ext: [\"r\", \"R\"], alias: [\"rscript\"]},\n    {name: \"reStructuredText\", mime: \"text/x-rst\", mode: \"rst\", ext: [\"rst\"], alias: [\"rst\"]},\n    {name: \"RPM Changes\", mime: \"text/x-rpm-changes\", mode: \"rpm\"},\n    {name: \"RPM Spec\", mime: \"text/x-rpm-spec\", mode: \"rpm\", ext: [\"spec\"]},\n    {name: \"Ruby\", mime: \"text/x-ruby\", mode: \"ruby\", ext: [\"rb\"], alias: [\"jruby\", \"macruby\", \"rake\", \"rb\", \"rbx\"]},\n    {name: \"Rust\", mime: \"text/x-rustsrc\", mode: \"rust\", ext: [\"rs\"]},\n    {name: \"SAS\", mime: \"text/x-sas\", mode: \"sas\", ext: [\"sas\"]},\n    {name: \"Sass\", mime: \"text/x-sass\", mode: \"sass\", ext: [\"sass\"]},\n    {name: \"Scala\", mime: \"text/x-scala\", mode: \"clike\", ext: [\"scala\"]},\n    {name: \"Scheme\", mime: \"text/x-scheme\", mode: \"scheme\", ext: [\"scm\", \"ss\"]},\n    {name: \"SCSS\", mime: \"text/x-scss\", mode: \"css\", ext: [\"scss\"]},\n    {name: \"Shell\", mimes: [\"text/x-sh\", \"application/x-sh\"], mode: \"shell\", ext: [\"sh\", \"ksh\", \"bash\"], alias: [\"bash\", \"sh\", \"zsh\"], file: /^PKGBUILD$/},\n    {name: \"Sieve\", mime: \"application/sieve\", mode: \"sieve\", ext: [\"siv\", \"sieve\"]},\n    {name: \"Slim\", mimes: [\"text/x-slim\", \"application/x-slim\"], mode: \"slim\", ext: [\"slim\"]},\n    {name: \"Smalltalk\", mime: \"text/x-stsrc\", mode: \"smalltalk\", ext: [\"st\"]},\n    {name: \"Smarty\", mime: \"text/x-smarty\", mode: \"smarty\", ext: [\"tpl\"]},\n    {name: \"Solr\", mime: \"text/x-solr\", mode: \"solr\"},\n    {name: \"SML\", mime: \"text/x-sml\", mode: \"mllike\", ext: [\"sml\", \"sig\", \"fun\", \"smackspec\"]},\n    {name: \"Soy\", mime: \"text/x-soy\", mode: \"soy\", ext: [\"soy\"], alias: [\"closure template\"]},\n    {name: \"SPARQL\", mime: \"application/sparql-query\", mode: \"sparql\", ext: [\"rq\", \"sparql\"], alias: [\"sparul\"]},\n    {name: \"Spreadsheet\", mime: \"text/x-spreadsheet\", mode: \"spreadsheet\", alias: [\"excel\", \"formula\"]},\n    {name: \"SQL\", mime: \"text/x-sql\", mode: \"sql\", ext: [\"sql\"]},\n    {name: \"SQLite\", mime: \"text/x-sqlite\", mode: \"sql\"},\n    {name: \"Squirrel\", mime: \"text/x-squirrel\", mode: \"clike\", ext: [\"nut\"]},\n    {name: \"Stylus\", mime: \"text/x-styl\", mode: \"stylus\", ext: [\"styl\"]},\n    {name: \"Swift\", mime: \"text/x-swift\", mode: \"swift\", ext: [\"swift\"]},\n    {name: \"sTeX\", mime: \"text/x-stex\", mode: \"stex\"},\n    {name: \"LaTeX\", mime: \"text/x-latex\", mode: \"stex\", ext: [\"text\", \"ltx\", \"tex\"], alias: [\"tex\"]},\n    {name: \"SystemVerilog\", mime: \"text/x-systemverilog\", mode: \"verilog\", ext: [\"v\", \"sv\", \"svh\"]},\n    {name: \"Tcl\", mime: \"text/x-tcl\", mode: \"tcl\", ext: [\"tcl\"]},\n    {name: \"Textile\", mime: \"text/x-textile\", mode: \"textile\", ext: [\"textile\"]},\n    {name: \"TiddlyWiki \", mime: \"text/x-tiddlywiki\", mode: \"tiddlywiki\"},\n    {name: \"Tiki wiki\", mime: \"text/tiki\", mode: \"tiki\"},\n    {name: \"TOML\", mime: \"text/x-toml\", mode: \"toml\", ext: [\"toml\"]},\n    {name: \"Tornado\", mime: \"text/x-tornado\", mode: \"tornado\"},\n    {name: \"troff\", mime: \"text/troff\", mode: \"troff\", ext: [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\", \"7\", \"8\", \"9\"]},\n    {name: \"TTCN\", mime: \"text/x-ttcn\", mode: \"ttcn\", ext: [\"ttcn\", \"ttcn3\", \"ttcnpp\"]},\n    {name: \"TTCN_CFG\", mime: \"text/x-ttcn-cfg\", mode: \"ttcn-cfg\", ext: [\"cfg\"]},\n    {name: \"Turtle\", mime: \"text/turtle\", mode: \"turtle\", ext: [\"ttl\"]},\n    {name: \"TypeScript\", mime: \"application/typescript\", mode: \"javascript\", ext: [\"ts\"], alias: [\"ts\"]},\n    {name: \"TypeScript-JSX\", mime: \"text/typescript-jsx\", mode: \"jsx\", ext: [\"tsx\"], alias: [\"tsx\"]},\n    {name: \"Twig\", mime: \"text/x-twig\", mode: \"twig\"},\n    {name: \"Web IDL\", mime: \"text/x-webidl\", mode: \"webidl\", ext: [\"webidl\"]},\n    {name: \"VB.NET\", mime: \"text/x-vb\", mode: \"vb\", ext: [\"vb\"]},\n    {name: \"VBScript\", mime: \"text/vbscript\", mode: \"vbscript\", ext: [\"vbs\"]},\n    {name: \"Velocity\", mime: \"text/velocity\", mode: \"velocity\", ext: [\"vtl\"]},\n    {name: \"Verilog\", mime: \"text/x-verilog\", mode: \"verilog\", ext: [\"v\"]},\n    {name: \"VHDL\", mime: \"text/x-vhdl\", mode: \"vhdl\", ext: [\"vhd\", \"vhdl\"]},\n    {name: \"Vue.js Component\", mimes: [\"script/x-vue\", \"text/x-vue\"], mode: \"vue\", ext: [\"vue\"]},\n    {name: \"XML\", mimes: [\"application/xml\", \"text/xml\"], mode: \"xml\", ext: [\"xml\", \"xsl\", \"xsd\", \"svg\"], alias: [\"rss\", \"wsdl\", \"xsd\"]},\n    {name: \"XQuery\", mime: \"application/xquery\", mode: \"xquery\", ext: [\"xy\", \"xquery\"]},\n    {name: \"Yacas\", mime: \"text/x-yacas\", mode: \"yacas\", ext: [\"ys\"]},\n    {name: \"YAML\", mimes: [\"text/x-yaml\", \"text/yaml\"], mode: \"yaml\", ext: [\"yaml\", \"yml\"], alias: [\"yml\"]},\n    {name: \"Z80\", mime: \"text/x-z80\", mode: \"z80\", ext: [\"z80\"]},\n    {name: \"mscgen\", mime: \"text/x-mscgen\", mode: \"mscgen\", ext: [\"mscgen\", \"mscin\", \"msc\"]},\n    {name: \"xu\", mime: \"text/x-xu\", mode: \"mscgen\", ext: [\"xu\"]},\n    {name: \"msgenny\", mime: \"text/x-msgenny\", mode: \"mscgen\", ext: [\"msgenny\"]}\n  ];\n  // Ensure all modes have a mime property for backwards compatibility\n  for (var i = 0; i < CodeMirror.modeInfo.length; i++) {\n    var info = CodeMirror.modeInfo[i];\n    if (info.mimes) info.mime = info.mimes[0];\n  }\n\n  CodeMirror.findModeByMIME = function(mime) {\n    mime = mime.toLowerCase();\n    for (var i = 0; i < CodeMirror.modeInfo.length; i++) {\n      var info = CodeMirror.modeInfo[i];\n      if (info.mime == mime) return info;\n      if (info.mimes) for (var j = 0; j < info.mimes.length; j++)\n        if (info.mimes[j] == mime) return info;\n    }\n    if (/\\+xml$/.test(mime)) return CodeMirror.findModeByMIME(\"application/xml\")\n    if (/\\+json$/.test(mime)) return CodeMirror.findModeByMIME(\"application/json\")\n  };\n\n  CodeMirror.findModeByExtension = function(ext) {\n    for (var i = 0; i < CodeMirror.modeInfo.length; i++) {\n      var info = CodeMirror.modeInfo[i];\n      if (info.ext) for (var j = 0; j < info.ext.length; j++)\n        if (info.ext[j] == ext) return info;\n    }\n  };\n\n  CodeMirror.findModeByFileName = function(filename) {\n    for (var i = 0; i < CodeMirror.modeInfo.length; i++) {\n      var info = CodeMirror.modeInfo[i];\n      if (info.file && info.file.test(filename)) return info;\n    }\n    var dot = filename.lastIndexOf(\".\");\n    var ext = dot > -1 && filename.substring(dot + 1, filename.length);\n    if (ext) return CodeMirror.findModeByExtension(ext);\n  };\n\n  CodeMirror.findModeByName = function(name) {\n    name = name.toLowerCase();\n    for (var i = 0; i < CodeMirror.modeInfo.length; i++) {\n      var info = CodeMirror.modeInfo[i];\n      if (info.name.toLowerCase() == name) return info;\n      if (info.alias) for (var j = 0; j < info.alias.length; j++)\n        if (info.alias[j].toLowerCase() == name) return info;\n    }\n  };\n});\n","/**\n * marked - a markdown parser\n * Copyright (c) 2011-2014, Christopher Jeffrey. (MIT Licensed)\n * https://github.com/markedjs/marked\n */\n\n;(function(root) {\n'use strict';\n\n/**\n * Block-Level Grammar\n */\n\nvar block = {\n  newline: /^\\n+/,\n  code: /^( {4}[^\\n]+\\n*)+/,\n  fences: noop,\n  hr: /^ {0,3}((?:- *){3,}|(?:_ *){3,}|(?:\\* *){3,})(?:\\n+|$)/,\n  heading: /^ *(#{1,6}) *([^\\n]+?) *(?:#+ *)?(?:\\n+|$)/,\n  nptable: noop,\n  blockquote: /^( {0,3}> ?(paragraph|[^\\n]*)(?:\\n|$))+/,\n  list: /^( *)(bull) [\\s\\S]+?(?:hr|def|\\n{2,}(?! )(?!\\1bull )\\n*|\\s*$)/,\n  html: '^ {0,3}(?:' // optional indentation\n    + '<(script|pre|style)[\\\\s>][\\\\s\\\\S]*?(?:</\\\\1>[^\\\\n]*\\\\n+|$)' // (1)\n    + '|comment[^\\\\n]*(\\\\n+|$)' // (2)\n    + '|<\\\\?[\\\\s\\\\S]*?\\\\?>\\\\n*' // (3)\n    + '|<![A-Z][\\\\s\\\\S]*?>\\\\n*' // (4)\n    + '|<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>\\\\n*' // (5)\n    + '|</?(tag)(?: +|\\\\n|/?>)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (6)\n    + '|<(?!script|pre|style)([a-z][\\\\w-]*)(?:attribute)*? */?>(?=\\\\h*\\\\n)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) open tag\n    + '|</(?!script|pre|style)[a-z][\\\\w-]*\\\\s*>(?=\\\\h*\\\\n)[\\\\s\\\\S]*?(?:\\\\n{2,}|$)' // (7) closing tag\n    + ')',\n  def: /^ {0,3}\\[(label)\\]: *\\n? *<?([^\\s>]+)>?(?:(?: +\\n? *| *\\n *)(title))? *(?:\\n+|$)/,\n  table: noop,\n  lheading: /^([^\\n]+)\\n *(=|-){2,} *(?:\\n+|$)/,\n  paragraph: /^([^\\n]+(?:\\n(?!hr|heading|lheading| {0,3}>|<\\/?(?:tag)(?: +|\\n|\\/?>)|<(?:script|pre|style|!--))[^\\n]+)*)/,\n  text: /^[^\\n]+/\n};\n\nblock._label = /(?!\\s*\\])(?:\\\\[\\[\\]]|[^\\[\\]])+/;\nblock._title = /(?:\"(?:\\\\\"?|[^\"\\\\])*\"|'[^'\\n]*(?:\\n[^'\\n]+)*\\n?'|\\([^()]*\\))/;\nblock.def = edit(block.def)\n  .replace('label', block._label)\n  .replace('title', block._title)\n  .getRegex();\n\nblock.bullet = /(?:[*+-]|\\d+\\.)/;\nblock.item = /^( *)(bull) [^\\n]*(?:\\n(?!\\1bull )[^\\n]*)*/;\nblock.item = edit(block.item, 'gm')\n  .replace(/bull/g, block.bullet)\n  .getRegex();\n\nblock.list = edit(block.list)\n  .replace(/bull/g, block.bullet)\n  .replace('hr', '\\\\n+(?=\\\\1?(?:(?:- *){3,}|(?:_ *){3,}|(?:\\\\* *){3,})(?:\\\\n+|$))')\n  .replace('def', '\\\\n+(?=' + block.def.source + ')')\n  .getRegex();\n\nblock._tag = 'address|article|aside|base|basefont|blockquote|body|caption'\n  + '|center|col|colgroup|dd|details|dialog|dir|div|dl|dt|fieldset|figcaption'\n  + '|figure|footer|form|frame|frameset|h[1-6]|head|header|hr|html|iframe'\n  + '|legend|li|link|main|menu|menuitem|meta|nav|noframes|ol|optgroup|option'\n  + '|p|param|section|source|summary|table|tbody|td|tfoot|th|thead|title|tr'\n  + '|track|ul';\nblock._comment = /<!--(?!-?>)[\\s\\S]*?-->/;\nblock.html = edit(block.html, 'i')\n  .replace('comment', block._comment)\n  .replace('tag', block._tag)\n  .replace('attribute', / +[a-zA-Z:_][\\w.:-]*(?: *= *\"[^\"\\n]*\"| *= *'[^'\\n]*'| *= *[^\\s\"'=<>`]+)?/)\n  .getRegex();\n\nblock.paragraph = edit(block.paragraph)\n  .replace('hr', block.hr)\n  .replace('heading', block.heading)\n  .replace('lheading', block.lheading)\n  .replace('tag', block._tag) // pars can be interrupted by type (6) html blocks\n  .getRegex();\n\nblock.blockquote = edit(block.blockquote)\n  .replace('paragraph', block.paragraph)\n  .getRegex();\n\n/**\n * Normal Block Grammar\n */\n\nblock.normal = merge({}, block);\n\n/**\n * GFM Block Grammar\n */\n\nblock.gfm = merge({}, block.normal, {\n  fences: /^ *(`{3,}|~{3,})[ \\.]*(\\S+)? *\\n([\\s\\S]*?)\\n? *\\1 *(?:\\n+|$)/,\n  paragraph: /^/,\n  heading: /^ *(#{1,6}) +([^\\n]+?) *#* *(?:\\n+|$)/\n});\n\nblock.gfm.paragraph = edit(block.paragraph)\n  .replace('(?!', '(?!'\n    + block.gfm.fences.source.replace('\\\\1', '\\\\2') + '|'\n    + block.list.source.replace('\\\\1', '\\\\3') + '|')\n  .getRegex();\n\n/**\n * GFM + Tables Block Grammar\n */\n\nblock.tables = merge({}, block.gfm, {\n  nptable: /^ *([^|\\n ].*\\|.*)\\n *([-:]+ *\\|[-| :]*)(?:\\n((?:.*[^>\\n ].*(?:\\n|$))*)\\n*|$)/,\n  table: /^ *\\|(.+)\\n *\\|?( *[-:]+[-| :]*)(?:\\n((?: *[^>\\n ].*(?:\\n|$))*)\\n*|$)/\n});\n\n/**\n * Pedantic grammar\n */\n\nblock.pedantic = merge({}, block.normal, {\n  html: edit(\n    '^ *(?:comment *(?:\\\\n|\\\\s*$)'\n    + '|<(tag)[\\\\s\\\\S]+?</\\\\1> *(?:\\\\n{2,}|\\\\s*$)' // closed tag\n    + '|<tag(?:\"[^\"]*\"|\\'[^\\']*\\'|\\\\s[^\\'\"/>\\\\s]*)*?/?> *(?:\\\\n{2,}|\\\\s*$))')\n    .replace('comment', block._comment)\n    .replace(/tag/g, '(?!(?:'\n      + 'a|em|strong|small|s|cite|q|dfn|abbr|data|time|code|var|samp|kbd|sub'\n      + '|sup|i|b|u|mark|ruby|rt|rp|bdi|bdo|span|br|wbr|ins|del|img)'\n      + '\\\\b)\\\\w+(?!:|[^\\\\w\\\\s@]*@)\\\\b')\n    .getRegex(),\n  def: /^ *\\[([^\\]]+)\\]: *<?([^\\s>]+)>?(?: +([\"(][^\\n]+[\")]))? *(?:\\n+|$)/\n});\n\n/**\n * Block Lexer\n */\n\nfunction Lexer(options) {\n  this.tokens = [];\n  this.tokens.links = {};\n  this.options = options || marked.defaults;\n  this.rules = block.normal;\n\n  if (this.options.pedantic) {\n    this.rules = block.pedantic;\n  } else if (this.options.gfm) {\n    if (this.options.tables) {\n      this.rules = block.tables;\n    } else {\n      this.rules = block.gfm;\n    }\n  }\n}\n\n/**\n * Expose Block Rules\n */\n\nLexer.rules = block;\n\n/**\n * Static Lex Method\n */\n\nLexer.lex = function(src, options) {\n  var lexer = new Lexer(options);\n  return lexer.lex(src);\n};\n\n/**\n * Preprocessing\n */\n\nLexer.prototype.lex = function(src) {\n  src = src\n    .replace(/\\r\\n|\\r/g, '\\n')\n    .replace(/\\t/g, '    ')\n    .replace(/\\u00a0/g, ' ')\n    .replace(/\\u2424/g, '\\n');\n\n  return this.token(src, true);\n};\n\n/**\n * Lexing\n */\n\nLexer.prototype.token = function(src, top) {\n  src = src.replace(/^ +$/gm, '');\n  var next,\n      loose,\n      cap,\n      bull,\n      b,\n      item,\n      space,\n      i,\n      tag,\n      l,\n      isordered,\n      istask,\n      ischecked;\n\n  while (src) {\n    // newline\n    if (cap = this.rules.newline.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[0].length > 1) {\n        this.tokens.push({\n          type: 'space'\n        });\n      }\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      cap = cap[0].replace(/^ {4}/gm, '');\n      this.tokens.push({\n        type: 'code',\n        text: !this.options.pedantic\n          ? cap.replace(/\\n+$/, '')\n          : cap\n      });\n      continue;\n    }\n\n    // fences (gfm)\n    if (cap = this.rules.fences.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'code',\n        lang: cap[2],\n        text: cap[3] || ''\n      });\n      continue;\n    }\n\n    // heading\n    if (cap = this.rules.heading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[1].length,\n        text: cap[2]\n      });\n      continue;\n    }\n\n    // table no leading pipe (gfm)\n    if (top && (cap = this.rules.nptable.exec(src))) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(item.cells[i], item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // hr\n    if (cap = this.rules.hr.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'hr'\n      });\n      continue;\n    }\n\n    // blockquote\n    if (cap = this.rules.blockquote.exec(src)) {\n      src = src.substring(cap[0].length);\n\n      this.tokens.push({\n        type: 'blockquote_start'\n      });\n\n      cap = cap[0].replace(/^ *> ?/gm, '');\n\n      // Pass `top` to keep the current\n      // \"toplevel\" state. This is exactly\n      // how markdown.pl works.\n      this.token(cap, top);\n\n      this.tokens.push({\n        type: 'blockquote_end'\n      });\n\n      continue;\n    }\n\n    // list\n    if (cap = this.rules.list.exec(src)) {\n      src = src.substring(cap[0].length);\n      bull = cap[2];\n      isordered = bull.length > 1;\n\n      this.tokens.push({\n        type: 'list_start',\n        ordered: isordered,\n        start: isordered ? +bull : ''\n      });\n\n      // Get each top-level item.\n      cap = cap[0].match(this.rules.item);\n\n      next = false;\n      l = cap.length;\n      i = 0;\n\n      for (; i < l; i++) {\n        item = cap[i];\n\n        // Remove the list item's bullet\n        // so it is seen as the next token.\n        space = item.length;\n        item = item.replace(/^ *([*+-]|\\d+\\.) +/, '');\n\n        // Outdent whatever the\n        // list item contains. Hacky.\n        if (~item.indexOf('\\n ')) {\n          space -= item.length;\n          item = !this.options.pedantic\n            ? item.replace(new RegExp('^ {1,' + space + '}', 'gm'), '')\n            : item.replace(/^ {1,4}/gm, '');\n        }\n\n        // Determine whether the next list item belongs here.\n        // Backpedal if it does not belong in this list.\n        if (this.options.smartLists && i !== l - 1) {\n          b = block.bullet.exec(cap[i + 1])[0];\n          if (bull !== b && !(bull.length > 1 && b.length > 1)) {\n            src = cap.slice(i + 1).join('\\n') + src;\n            i = l - 1;\n          }\n        }\n\n        // Determine whether item is loose or not.\n        // Use: /(^|\\n)(?! )[^\\n]+\\n\\n(?!\\s*$)/\n        // for discount behavior.\n        loose = next || /\\n\\n(?!\\s*$)/.test(item);\n        if (i !== l - 1) {\n          next = item.charAt(item.length - 1) === '\\n';\n          if (!loose) loose = next;\n        }\n\n        // Check for task list items\n        istask = /^\\[[ xX]\\] /.test(item);\n        ischecked = undefined;\n        if (istask) {\n          ischecked = item[1] !== ' ';\n          item = item.replace(/^\\[[ xX]\\] +/, '');\n        }\n\n        this.tokens.push({\n          type: loose\n            ? 'loose_item_start'\n            : 'list_item_start',\n          task: istask,\n          checked: ischecked\n        });\n\n        // Recurse.\n        this.token(item, false);\n\n        this.tokens.push({\n          type: 'list_item_end'\n        });\n      }\n\n      this.tokens.push({\n        type: 'list_end'\n      });\n\n      continue;\n    }\n\n    // html\n    if (cap = this.rules.html.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: this.options.sanitize\n          ? 'paragraph'\n          : 'html',\n        pre: !this.options.sanitizer\n          && (cap[1] === 'pre' || cap[1] === 'script' || cap[1] === 'style'),\n        text: cap[0]\n      });\n      continue;\n    }\n\n    // def\n    if (top && (cap = this.rules.def.exec(src))) {\n      src = src.substring(cap[0].length);\n      if (cap[3]) cap[3] = cap[3].substring(1, cap[3].length - 1);\n      tag = cap[1].toLowerCase().replace(/\\s+/g, ' ');\n      if (!this.tokens.links[tag]) {\n        this.tokens.links[tag] = {\n          href: cap[2],\n          title: cap[3]\n        };\n      }\n      continue;\n    }\n\n    // table (gfm)\n    if (top && (cap = this.rules.table.exec(src))) {\n      item = {\n        type: 'table',\n        header: splitCells(cap[1].replace(/^ *| *\\| *$/g, '')),\n        align: cap[2].replace(/^ *|\\| *$/g, '').split(/ *\\| */),\n        cells: cap[3] ? cap[3].replace(/(?: *\\| *)?\\n$/, '').split('\\n') : []\n      };\n\n      if (item.header.length === item.align.length) {\n        src = src.substring(cap[0].length);\n\n        for (i = 0; i < item.align.length; i++) {\n          if (/^ *-+: *$/.test(item.align[i])) {\n            item.align[i] = 'right';\n          } else if (/^ *:-+: *$/.test(item.align[i])) {\n            item.align[i] = 'center';\n          } else if (/^ *:-+ *$/.test(item.align[i])) {\n            item.align[i] = 'left';\n          } else {\n            item.align[i] = null;\n          }\n        }\n\n        for (i = 0; i < item.cells.length; i++) {\n          item.cells[i] = splitCells(\n            item.cells[i].replace(/^ *\\| *| *\\| *$/g, ''),\n            item.header.length);\n        }\n\n        this.tokens.push(item);\n\n        continue;\n      }\n    }\n\n    // lheading\n    if (cap = this.rules.lheading.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'heading',\n        depth: cap[2] === '=' ? 1 : 2,\n        text: cap[1]\n      });\n      continue;\n    }\n\n    // top-level paragraph\n    if (top && (cap = this.rules.paragraph.exec(src))) {\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'paragraph',\n        text: cap[1].charAt(cap[1].length - 1) === '\\n'\n          ? cap[1].slice(0, -1)\n          : cap[1]\n      });\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      // Top-level should never reach here.\n      src = src.substring(cap[0].length);\n      this.tokens.push({\n        type: 'text',\n        text: cap[0]\n      });\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return this.tokens;\n};\n\n/**\n * Inline-Level Grammar\n */\n\nvar inline = {\n  escape: /^\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/,\n  autolink: /^<(scheme:[^\\s\\x00-\\x1f<>]*|email)>/,\n  url: noop,\n  tag: '^comment'\n    + '|^</[a-zA-Z][\\\\w:-]*\\\\s*>' // self-closing tag\n    + '|^<[a-zA-Z][\\\\w-]*(?:attribute)*?\\\\s*/?>' // open tag\n    + '|^<\\\\?[\\\\s\\\\S]*?\\\\?>' // processing instruction, e.g. <?php ?>\n    + '|^<![a-zA-Z]+\\\\s[\\\\s\\\\S]*?>' // declaration, e.g. <!DOCTYPE html>\n    + '|^<!\\\\[CDATA\\\\[[\\\\s\\\\S]*?\\\\]\\\\]>', // CDATA section\n  link: /^!?\\[(label)\\]\\(href(?:\\s+(title))?\\s*\\)/,\n  reflink: /^!?\\[(label)\\]\\[(?!\\s*\\])((?:\\\\[\\[\\]]?|[^\\[\\]\\\\])+)\\]/,\n  nolink: /^!?\\[(?!\\s*\\])((?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]|[^\\[\\]])*)\\](?:\\[\\])?/,\n  strong: /^__([^\\s][\\s\\S]*?[^\\s])__(?!_)|^\\*\\*([^\\s][\\s\\S]*?[^\\s])\\*\\*(?!\\*)|^__([^\\s])__(?!_)|^\\*\\*([^\\s])\\*\\*(?!\\*)/,\n  em: /^_([^\\s][\\s\\S]*?[^\\s_])_(?!_)|^_([^\\s_][\\s\\S]*?[^\\s])_(?!_)|^\\*([^\\s][\\s\\S]*?[^\\s*])\\*(?!\\*)|^\\*([^\\s*][\\s\\S]*?[^\\s])\\*(?!\\*)|^_([^\\s_])_(?!_)|^\\*([^\\s*])\\*(?!\\*)/,\n  code: /^(`+)\\s*([\\s\\S]*?[^`]?)\\s*\\1(?!`)/,\n  br: /^ {2,}\\n(?!\\s*$)/,\n  del: noop,\n  text: /^[\\s\\S]+?(?=[\\\\<!\\[`*]|\\b_| {2,}\\n|$)/\n};\n\ninline._escapes = /\\\\([!\"#$%&'()*+,\\-./:;<=>?@\\[\\]\\\\^_`{|}~])/g;\n\ninline._scheme = /[a-zA-Z][a-zA-Z0-9+.-]{1,31}/;\ninline._email = /[a-zA-Z0-9.!#$%&'*+/=?^_`{|}~-]+(@)[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?(?:\\.[a-zA-Z0-9](?:[a-zA-Z0-9-]{0,61}[a-zA-Z0-9])?)+(?![-_])/;\ninline.autolink = edit(inline.autolink)\n  .replace('scheme', inline._scheme)\n  .replace('email', inline._email)\n  .getRegex();\n\ninline._attribute = /\\s+[a-zA-Z:_][\\w.:-]*(?:\\s*=\\s*\"[^\"]*\"|\\s*=\\s*'[^']*'|\\s*=\\s*[^\\s\"'=<>`]+)?/;\n\ninline.tag = edit(inline.tag)\n  .replace('comment', block._comment)\n  .replace('attribute', inline._attribute)\n  .getRegex();\n\ninline._label = /(?:\\[[^\\[\\]]*\\]|\\\\[\\[\\]]?|`[^`]*`|[^\\[\\]\\\\])*?/;\ninline._href = /\\s*(<(?:\\\\[<>]?|[^\\s<>\\\\])*>|(?:\\\\[()]?|\\([^\\s\\x00-\\x1f()\\\\]*\\)|[^\\s\\x00-\\x1f()\\\\])*?)/;\ninline._title = /\"(?:\\\\\"?|[^\"\\\\])*\"|'(?:\\\\'?|[^'\\\\])*'|\\((?:\\\\\\)?|[^)\\\\])*\\)/;\n\ninline.link = edit(inline.link)\n  .replace('label', inline._label)\n  .replace('href', inline._href)\n  .replace('title', inline._title)\n  .getRegex();\n\ninline.reflink = edit(inline.reflink)\n  .replace('label', inline._label)\n  .getRegex();\n\n/**\n * Normal Inline Grammar\n */\n\ninline.normal = merge({}, inline);\n\n/**\n * Pedantic Inline Grammar\n */\n\ninline.pedantic = merge({}, inline.normal, {\n  strong: /^__(?=\\S)([\\s\\S]*?\\S)__(?!_)|^\\*\\*(?=\\S)([\\s\\S]*?\\S)\\*\\*(?!\\*)/,\n  em: /^_(?=\\S)([\\s\\S]*?\\S)_(?!_)|^\\*(?=\\S)([\\s\\S]*?\\S)\\*(?!\\*)/,\n  link: edit(/^!?\\[(label)\\]\\((.*?)\\)/)\n    .replace('label', inline._label)\n    .getRegex(),\n  reflink: edit(/^!?\\[(label)\\]\\s*\\[([^\\]]*)\\]/)\n    .replace('label', inline._label)\n    .getRegex()\n});\n\n/**\n * GFM Inline Grammar\n */\n\ninline.gfm = merge({}, inline.normal, {\n  escape: edit(inline.escape).replace('])', '~|])').getRegex(),\n  url: edit(/^((?:ftp|https?):\\/\\/|www\\.)(?:[a-zA-Z0-9\\-]+\\.?)+[^\\s<]*|^email/)\n    .replace('email', inline._email)\n    .getRegex(),\n  _backpedal: /(?:[^?!.,:;*_~()&]+|\\([^)]*\\)|&(?![a-zA-Z0-9]+;$)|[?!.,:;*_~)]+(?!$))+/,\n  del: /^~~(?=\\S)([\\s\\S]*?\\S)~~/,\n  text: edit(inline.text)\n    .replace(']|', '~]|')\n    .replace('|', '|https?://|ftp://|www\\\\.|[a-zA-Z0-9.!#$%&\\'*+/=?^_`{\\\\|}~-]+@|')\n    .getRegex()\n});\n\n/**\n * GFM + Line Breaks Inline Grammar\n */\n\ninline.breaks = merge({}, inline.gfm, {\n  br: edit(inline.br).replace('{2,}', '*').getRegex(),\n  text: edit(inline.gfm.text).replace('{2,}', '*').getRegex()\n});\n\n/**\n * Inline Lexer & Compiler\n */\n\nfunction InlineLexer(links, options) {\n  this.options = options || marked.defaults;\n  this.links = links;\n  this.rules = inline.normal;\n  this.renderer = this.options.renderer || new Renderer();\n  this.renderer.options = this.options;\n\n  if (!this.links) {\n    throw new Error('Tokens array requires a `links` property.');\n  }\n\n  if (this.options.pedantic) {\n    this.rules = inline.pedantic;\n  } else if (this.options.gfm) {\n    if (this.options.breaks) {\n      this.rules = inline.breaks;\n    } else {\n      this.rules = inline.gfm;\n    }\n  }\n}\n\n/**\n * Expose Inline Rules\n */\n\nInlineLexer.rules = inline;\n\n/**\n * Static Lexing/Compiling Method\n */\n\nInlineLexer.output = function(src, links, options) {\n  var inline = new InlineLexer(links, options);\n  return inline.output(src);\n};\n\n/**\n * Lexing/Compiling\n */\n\nInlineLexer.prototype.output = function(src) {\n  var out = '',\n      link,\n      text,\n      href,\n      title,\n      cap;\n\n  while (src) {\n    // escape\n    if (cap = this.rules.escape.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += cap[1];\n      continue;\n    }\n\n    // autolink\n    if (cap = this.rules.autolink.exec(src)) {\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(this.mangle(cap[1]));\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[1]);\n        href = text;\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // url (gfm)\n    if (!this.inLink && (cap = this.rules.url.exec(src))) {\n      cap[0] = this.rules._backpedal.exec(cap[0])[0];\n      src = src.substring(cap[0].length);\n      if (cap[2] === '@') {\n        text = escape(cap[0]);\n        href = 'mailto:' + text;\n      } else {\n        text = escape(cap[0]);\n        if (cap[1] === 'www.') {\n          href = 'http://' + text;\n        } else {\n          href = text;\n        }\n      }\n      out += this.renderer.link(href, null, text);\n      continue;\n    }\n\n    // tag\n    if (cap = this.rules.tag.exec(src)) {\n      if (!this.inLink && /^<a /i.test(cap[0])) {\n        this.inLink = true;\n      } else if (this.inLink && /^<\\/a>/i.test(cap[0])) {\n        this.inLink = false;\n      }\n      src = src.substring(cap[0].length);\n      out += this.options.sanitize\n        ? this.options.sanitizer\n          ? this.options.sanitizer(cap[0])\n          : escape(cap[0])\n        : cap[0]\n      continue;\n    }\n\n    // link\n    if (cap = this.rules.link.exec(src)) {\n      src = src.substring(cap[0].length);\n      this.inLink = true;\n      href = cap[2];\n      if (this.options.pedantic) {\n        link = /^([^'\"]*[^\\s])\\s+(['\"])(.*)\\2/.exec(href);\n\n        if (link) {\n          href = link[1];\n          title = link[3];\n        } else {\n          title = '';\n        }\n      } else {\n        title = cap[3] ? cap[3].slice(1, -1) : '';\n      }\n      href = href.trim().replace(/^<([\\s\\S]*)>$/, '$1');\n      out += this.outputLink(cap, {\n        href: InlineLexer.escapes(href),\n        title: InlineLexer.escapes(title)\n      });\n      this.inLink = false;\n      continue;\n    }\n\n    // reflink, nolink\n    if ((cap = this.rules.reflink.exec(src))\n        || (cap = this.rules.nolink.exec(src))) {\n      src = src.substring(cap[0].length);\n      link = (cap[2] || cap[1]).replace(/\\s+/g, ' ');\n      link = this.links[link.toLowerCase()];\n      if (!link || !link.href) {\n        out += cap[0].charAt(0);\n        src = cap[0].substring(1) + src;\n        continue;\n      }\n      this.inLink = true;\n      out += this.outputLink(cap, link);\n      this.inLink = false;\n      continue;\n    }\n\n    // strong\n    if (cap = this.rules.strong.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.strong(this.output(cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    }\n\n    // em\n    if (cap = this.rules.em.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.em(this.output(cap[6] || cap[5] || cap[4] || cap[3] || cap[2] || cap[1]));\n      continue;\n    }\n\n    // code\n    if (cap = this.rules.code.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.codespan(escape(cap[2].trim(), true));\n      continue;\n    }\n\n    // br\n    if (cap = this.rules.br.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.br();\n      continue;\n    }\n\n    // del (gfm)\n    if (cap = this.rules.del.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.del(this.output(cap[1]));\n      continue;\n    }\n\n    // text\n    if (cap = this.rules.text.exec(src)) {\n      src = src.substring(cap[0].length);\n      out += this.renderer.text(escape(this.smartypants(cap[0])));\n      continue;\n    }\n\n    if (src) {\n      throw new Error('Infinite loop on byte: ' + src.charCodeAt(0));\n    }\n  }\n\n  return out;\n};\n\nInlineLexer.escapes = function(text) {\n  return text ? text.replace(InlineLexer.rules._escapes, '$1') : text;\n}\n\n/**\n * Compile Link\n */\n\nInlineLexer.prototype.outputLink = function(cap, link) {\n  var href = link.href,\n      title = link.title ? escape(link.title) : null;\n\n  return cap[0].charAt(0) !== '!'\n    ? this.renderer.link(href, title, this.output(cap[1]))\n    : this.renderer.image(href, title, escape(cap[1]));\n};\n\n/**\n * Smartypants Transformations\n */\n\nInlineLexer.prototype.smartypants = function(text) {\n  if (!this.options.smartypants) return text;\n  return text\n    // em-dashes\n    .replace(/---/g, '\\u2014')\n    // en-dashes\n    .replace(/--/g, '\\u2013')\n    // opening singles\n    .replace(/(^|[-\\u2014/(\\[{\"\\s])'/g, '$1\\u2018')\n    // closing singles & apostrophes\n    .replace(/'/g, '\\u2019')\n    // opening doubles\n    .replace(/(^|[-\\u2014/(\\[{\\u2018\\s])\"/g, '$1\\u201c')\n    // closing doubles\n    .replace(/\"/g, '\\u201d')\n    // ellipses\n    .replace(/\\.{3}/g, '\\u2026');\n};\n\n/**\n * Mangle Links\n */\n\nInlineLexer.prototype.mangle = function(text) {\n  if (!this.options.mangle) return text;\n  var out = '',\n      l = text.length,\n      i = 0,\n      ch;\n\n  for (; i < l; i++) {\n    ch = text.charCodeAt(i);\n    if (Math.random() > 0.5) {\n      ch = 'x' + ch.toString(16);\n    }\n    out += '&#' + ch + ';';\n  }\n\n  return out;\n};\n\n/**\n * Renderer\n */\n\nfunction Renderer(options) {\n  this.options = options || marked.defaults;\n}\n\nRenderer.prototype.code = function(code, lang, escaped) {\n  if (this.options.highlight) {\n    var out = this.options.highlight(code, lang);\n    if (out != null && out !== code) {\n      escaped = true;\n      code = out;\n    }\n  }\n\n  if (!lang) {\n    return '<pre><code>'\n      + (escaped ? code : escape(code, true))\n      + '</code></pre>';\n  }\n\n  return '<pre><code class=\"'\n    + this.options.langPrefix\n    + escape(lang, true)\n    + '\">'\n    + (escaped ? code : escape(code, true))\n    + '</code></pre>\\n';\n};\n\nRenderer.prototype.blockquote = function(quote) {\n  return '<blockquote>\\n' + quote + '</blockquote>\\n';\n};\n\nRenderer.prototype.html = function(html) {\n  return html;\n};\n\nRenderer.prototype.heading = function(text, level, raw) {\n  if (this.options.headerIds) {\n    return '<h'\n      + level\n      + ' id=\"'\n      + this.options.headerPrefix\n      + raw.toLowerCase().replace(/[^\\w]+/g, '-')\n      + '\">'\n      + text\n      + '</h'\n      + level\n      + '>\\n';\n  }\n  // ignore IDs\n  return '<h' + level + '>' + text + '</h' + level + '>\\n';\n};\n\nRenderer.prototype.hr = function() {\n  return this.options.xhtml ? '<hr/>\\n' : '<hr>\\n';\n};\n\nRenderer.prototype.list = function(body, ordered, start) {\n  var type = ordered ? 'ol' : 'ul',\n      startatt = (ordered && start !== 1) ? (' start=\"' + start + '\"') : '';\n  return '<' + type + startatt + '>\\n' + body + '</' + type + '>\\n';\n};\n\nRenderer.prototype.listitem = function(text) {\n  return '<li>' + text + '</li>\\n';\n};\n\nRenderer.prototype.checkbox = function(checked) {\n  return '<input '\n    + (checked ? 'checked=\"\" ' : '')\n    + 'disabled=\"\" type=\"checkbox\"'\n    + (this.options.xhtml ? ' /' : '')\n    + '> ';\n}\n\nRenderer.prototype.paragraph = function(text) {\n  return '<p>' + text + '</p>\\n';\n};\n\nRenderer.prototype.table = function(header, body) {\n  if (body) body = '<tbody>' + body + '</tbody>';\n\n  return '<table>\\n'\n    + '<thead>\\n'\n    + header\n    + '</thead>\\n'\n    + body\n    + '</table>\\n';\n};\n\nRenderer.prototype.tablerow = function(content) {\n  return '<tr>\\n' + content + '</tr>\\n';\n};\n\nRenderer.prototype.tablecell = function(content, flags) {\n  var type = flags.header ? 'th' : 'td';\n  var tag = flags.align\n    ? '<' + type + ' align=\"' + flags.align + '\">'\n    : '<' + type + '>';\n  return tag + content + '</' + type + '>\\n';\n};\n\n// span level renderer\nRenderer.prototype.strong = function(text) {\n  return '<strong>' + text + '</strong>';\n};\n\nRenderer.prototype.em = function(text) {\n  return '<em>' + text + '</em>';\n};\n\nRenderer.prototype.codespan = function(text) {\n  return '<code>' + text + '</code>';\n};\n\nRenderer.prototype.br = function() {\n  return this.options.xhtml ? '<br/>' : '<br>';\n};\n\nRenderer.prototype.del = function(text) {\n  return '<del>' + text + '</del>';\n};\n\nRenderer.prototype.link = function(href, title, text) {\n  if (this.options.sanitize) {\n    try {\n      var prot = decodeURIComponent(unescape(href))\n        .replace(/[^\\w:]/g, '')\n        .toLowerCase();\n    } catch (e) {\n      return text;\n    }\n    if (prot.indexOf('javascript:') === 0 || prot.indexOf('vbscript:') === 0 || prot.indexOf('data:') === 0) {\n      return text;\n    }\n  }\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n    href = resolveUrl(this.options.baseUrl, href);\n  }\n  try {\n    href = encodeURI(href).replace(/%25/g, '%');\n  } catch (e) {\n    return text;\n  }\n  var out = '<a href=\"' + escape(href) + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += '>' + text + '</a>';\n  return out;\n};\n\nRenderer.prototype.image = function(href, title, text) {\n  if (this.options.baseUrl && !originIndependentUrl.test(href)) {\n    href = resolveUrl(this.options.baseUrl, href);\n  }\n  var out = '<img src=\"' + href + '\" alt=\"' + text + '\"';\n  if (title) {\n    out += ' title=\"' + title + '\"';\n  }\n  out += this.options.xhtml ? '/>' : '>';\n  return out;\n};\n\nRenderer.prototype.text = function(text) {\n  return text;\n};\n\n/**\n * TextRenderer\n * returns only the textual part of the token\n */\n\nfunction TextRenderer() {}\n\n// no need for block level renderers\n\nTextRenderer.prototype.strong =\nTextRenderer.prototype.em =\nTextRenderer.prototype.codespan =\nTextRenderer.prototype.del =\nTextRenderer.prototype.text = function (text) {\n  return text;\n}\n\nTextRenderer.prototype.link =\nTextRenderer.prototype.image = function(href, title, text) {\n  return '' + text;\n}\n\nTextRenderer.prototype.br = function() {\n  return '';\n}\n\n/**\n * Parsing & Compiling\n */\n\nfunction Parser(options) {\n  this.tokens = [];\n  this.token = null;\n  this.options = options || marked.defaults;\n  this.options.renderer = this.options.renderer || new Renderer();\n  this.renderer = this.options.renderer;\n  this.renderer.options = this.options;\n}\n\n/**\n * Static Parse Method\n */\n\nParser.parse = function(src, options) {\n  var parser = new Parser(options);\n  return parser.parse(src);\n};\n\n/**\n * Parse Loop\n */\n\nParser.prototype.parse = function(src) {\n  this.inline = new InlineLexer(src.links, this.options);\n  // use an InlineLexer with a TextRenderer to extract pure text\n  this.inlineText = new InlineLexer(\n    src.links,\n    merge({}, this.options, {renderer: new TextRenderer()})\n  );\n  this.tokens = src.reverse();\n\n  var out = '';\n  while (this.next()) {\n    out += this.tok();\n  }\n\n  return out;\n};\n\n/**\n * Next Token\n */\n\nParser.prototype.next = function() {\n  return this.token = this.tokens.pop();\n};\n\n/**\n * Preview Next Token\n */\n\nParser.prototype.peek = function() {\n  return this.tokens[this.tokens.length - 1] || 0;\n};\n\n/**\n * Parse Text Tokens\n */\n\nParser.prototype.parseText = function() {\n  var body = this.token.text;\n\n  while (this.peek().type === 'text') {\n    body += '\\n' + this.next().text;\n  }\n\n  return this.inline.output(body);\n};\n\n/**\n * Parse Current Token\n */\n\nParser.prototype.tok = function() {\n  switch (this.token.type) {\n    case 'space': {\n      return '';\n    }\n    case 'hr': {\n      return this.renderer.hr();\n    }\n    case 'heading': {\n      return this.renderer.heading(\n        this.inline.output(this.token.text),\n        this.token.depth,\n        unescape(this.inlineText.output(this.token.text)));\n    }\n    case 'code': {\n      return this.renderer.code(this.token.text,\n        this.token.lang,\n        this.token.escaped);\n    }\n    case 'table': {\n      var header = '',\n          body = '',\n          i,\n          row,\n          cell,\n          j;\n\n      // header\n      cell = '';\n      for (i = 0; i < this.token.header.length; i++) {\n        cell += this.renderer.tablecell(\n          this.inline.output(this.token.header[i]),\n          { header: true, align: this.token.align[i] }\n        );\n      }\n      header += this.renderer.tablerow(cell);\n\n      for (i = 0; i < this.token.cells.length; i++) {\n        row = this.token.cells[i];\n\n        cell = '';\n        for (j = 0; j < row.length; j++) {\n          cell += this.renderer.tablecell(\n            this.inline.output(row[j]),\n            { header: false, align: this.token.align[j] }\n          );\n        }\n\n        body += this.renderer.tablerow(cell);\n      }\n      return this.renderer.table(header, body);\n    }\n    case 'blockquote_start': {\n      body = '';\n\n      while (this.next().type !== 'blockquote_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.blockquote(body);\n    }\n    case 'list_start': {\n      body = '';\n      var ordered = this.token.ordered,\n          start = this.token.start;\n\n      while (this.next().type !== 'list_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.list(body, ordered, start);\n    }\n    case 'list_item_start': {\n      body = '';\n\n      if (this.token.task) {\n        body += this.renderer.checkbox(this.token.checked);\n      }\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.token.type === 'text'\n          ? this.parseText()\n          : this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'loose_item_start': {\n      body = '';\n\n      while (this.next().type !== 'list_item_end') {\n        body += this.tok();\n      }\n\n      return this.renderer.listitem(body);\n    }\n    case 'html': {\n      // TODO parse inline content if parameter markdown=1\n      return this.renderer.html(this.token.text);\n    }\n    case 'paragraph': {\n      return this.renderer.paragraph(this.inline.output(this.token.text));\n    }\n    case 'text': {\n      return this.renderer.paragraph(this.parseText());\n    }\n  }\n};\n\n/**\n * Helpers\n */\n\nfunction escape(html, encode) {\n  return html\n    .replace(!encode ? /&(?!#?\\w+;)/g : /&/g, '&amp;')\n    .replace(/</g, '&lt;')\n    .replace(/>/g, '&gt;')\n    .replace(/\"/g, '&quot;')\n    .replace(/'/g, '&#39;');\n}\n\nfunction unescape(html) {\n  // explicitly match decimal, hex, and named HTML entities\n  return html.replace(/&(#(?:\\d+)|(?:#x[0-9A-Fa-f]+)|(?:\\w+));?/ig, function(_, n) {\n    n = n.toLowerCase();\n    if (n === 'colon') return ':';\n    if (n.charAt(0) === '#') {\n      return n.charAt(1) === 'x'\n        ? String.fromCharCode(parseInt(n.substring(2), 16))\n        : String.fromCharCode(+n.substring(1));\n    }\n    return '';\n  });\n}\n\nfunction edit(regex, opt) {\n  regex = regex.source || regex;\n  opt = opt || '';\n  return {\n    replace: function(name, val) {\n      val = val.source || val;\n      val = val.replace(/(^|[^\\[])\\^/g, '$1');\n      regex = regex.replace(name, val);\n      return this;\n    },\n    getRegex: function() {\n      return new RegExp(regex, opt);\n    }\n  };\n}\n\nfunction resolveUrl(base, href) {\n  if (!baseUrls[' ' + base]) {\n    // we can ignore everything in base after the last slash of its path component,\n    // but we might need to add _that_\n    // https://tools.ietf.org/html/rfc3986#section-3\n    if (/^[^:]+:\\/*[^/]*$/.test(base)) {\n      baseUrls[' ' + base] = base + '/';\n    } else {\n      baseUrls[' ' + base] = base.replace(/[^/]*$/, '');\n    }\n  }\n  base = baseUrls[' ' + base];\n\n  if (href.slice(0, 2) === '//') {\n    return base.replace(/:[\\s\\S]*/, ':') + href;\n  } else if (href.charAt(0) === '/') {\n    return base.replace(/(:\\/*[^/]*)[\\s\\S]*/, '$1') + href;\n  } else {\n    return base + href;\n  }\n}\nvar baseUrls = {};\nvar originIndependentUrl = /^$|^[a-z][a-z0-9+.-]*:|^[?#]/i;\n\nfunction noop() {}\nnoop.exec = noop;\n\nfunction merge(obj) {\n  var i = 1,\n      target,\n      key;\n\n  for (; i < arguments.length; i++) {\n    target = arguments[i];\n    for (key in target) {\n      if (Object.prototype.hasOwnProperty.call(target, key)) {\n        obj[key] = target[key];\n      }\n    }\n  }\n\n  return obj;\n}\n\nfunction splitCells(tableRow, count) {\n  var cells = tableRow.replace(/([^\\\\])\\|/g, '$1 |').split(/ +\\| */),\n      i = 0;\n\n  if (cells.length > count) {\n    cells.splice(count);\n  } else {\n    while (cells.length < count) cells.push('');\n  }\n\n  for (; i < cells.length; i++) {\n    cells[i] = cells[i].replace(/\\\\\\|/g, '|');\n  }\n  return cells;\n}\n\n/**\n * Marked\n */\n\nfunction marked(src, opt, callback) {\n  // throw error in case of non string input\n  if (typeof src === 'undefined' || src === null) {\n    throw new Error('marked(): input parameter is undefined or null');\n  }\n  if (typeof src !== 'string') {\n    throw new Error('marked(): input parameter is of type '\n      + Object.prototype.toString.call(src) + ', string expected');\n  }\n\n  if (callback || typeof opt === 'function') {\n    if (!callback) {\n      callback = opt;\n      opt = null;\n    }\n\n    opt = merge({}, marked.defaults, opt || {});\n\n    var highlight = opt.highlight,\n        tokens,\n        pending,\n        i = 0;\n\n    try {\n      tokens = Lexer.lex(src, opt)\n    } catch (e) {\n      return callback(e);\n    }\n\n    pending = tokens.length;\n\n    var done = function(err) {\n      if (err) {\n        opt.highlight = highlight;\n        return callback(err);\n      }\n\n      var out;\n\n      try {\n        out = Parser.parse(tokens, opt);\n      } catch (e) {\n        err = e;\n      }\n\n      opt.highlight = highlight;\n\n      return err\n        ? callback(err)\n        : callback(null, out);\n    };\n\n    if (!highlight || highlight.length < 3) {\n      return done();\n    }\n\n    delete opt.highlight;\n\n    if (!pending) return done();\n\n    for (; i < tokens.length; i++) {\n      (function(token) {\n        if (token.type !== 'code') {\n          return --pending || done();\n        }\n        return highlight(token.text, token.lang, function(err, code) {\n          if (err) return done(err);\n          if (code == null || code === token.text) {\n            return --pending || done();\n          }\n          token.text = code;\n          token.escaped = true;\n          --pending || done();\n        });\n      })(tokens[i]);\n    }\n\n    return;\n  }\n  try {\n    if (opt) opt = merge({}, marked.defaults, opt);\n    return Parser.parse(Lexer.lex(src, opt), opt);\n  } catch (e) {\n    e.message += '\\nPlease report this to https://github.com/markedjs/marked.';\n    if ((opt || marked.defaults).silent) {\n      return '<p>An error occurred:</p><pre>'\n        + escape(e.message + '', true)\n        + '</pre>';\n    }\n    throw e;\n  }\n}\n\n/**\n * Options\n */\n\nmarked.options =\nmarked.setOptions = function(opt) {\n  merge(marked.defaults, opt);\n  return marked;\n};\n\nmarked.getDefaults = function () {\n  return {\n    baseUrl: null,\n    breaks: false,\n    gfm: true,\n    headerIds: true,\n    headerPrefix: '',\n    highlight: null,\n    langPrefix: 'language-',\n    mangle: true,\n    pedantic: false,\n    renderer: new Renderer(),\n    sanitize: false,\n    sanitizer: null,\n    silent: false,\n    smartLists: false,\n    smartypants: false,\n    tables: true,\n    xhtml: false\n  };\n}\n\nmarked.defaults = marked.getDefaults();\n\n/**\n * Expose\n */\n\nmarked.Parser = Parser;\nmarked.parser = Parser.parse;\n\nmarked.Renderer = Renderer;\nmarked.TextRenderer = TextRenderer;\n\nmarked.Lexer = Lexer;\nmarked.lexer = Lexer.lex;\n\nmarked.InlineLexer = InlineLexer;\nmarked.inlineLexer = InlineLexer.output;\n\nmarked.parse = marked;\n\nif (typeof module !== 'undefined' && typeof exports === 'object') {\n  module.exports = marked;\n} else if (typeof define === 'function' && define.amd) {\n  define(function() { return marked; });\n} else {\n  root.marked = marked;\n}\n})(this || (typeof window !== 'undefined' ? window : global));\n","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\n// Support decoding URL-safe base64 strings, as Node.js does.\n// See: https://en.wikipedia.org/wiki/Base64#URL_applications\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction getLens (b64) {\n  var len = b64.length\n\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // Trim off extra bytes after placeholder bytes are found\n  // See: https://github.com/beatgammit/base64-js/issues/42\n  var validLen = b64.indexOf('=')\n  if (validLen === -1) validLen = len\n\n  var placeHoldersLen = validLen === len\n    ? 0\n    : 4 - (validLen % 4)\n\n  return [validLen, placeHoldersLen]\n}\n\n// base64 is 4/3 + up to two characters of the original data\nfunction byteLength (b64) {\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction _byteLength (b64, validLen, placeHoldersLen) {\n  return ((validLen + placeHoldersLen) * 3 / 4) - placeHoldersLen\n}\n\nfunction toByteArray (b64) {\n  var tmp\n  var lens = getLens(b64)\n  var validLen = lens[0]\n  var placeHoldersLen = lens[1]\n\n  var arr = new Arr(_byteLength(b64, validLen, placeHoldersLen))\n\n  var curByte = 0\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  var len = placeHoldersLen > 0\n    ? validLen - 4\n    : validLen\n\n  for (var i = 0; i < len; i += 4) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 18) |\n      (revLookup[b64.charCodeAt(i + 1)] << 12) |\n      (revLookup[b64.charCodeAt(i + 2)] << 6) |\n      revLookup[b64.charCodeAt(i + 3)]\n    arr[curByte++] = (tmp >> 16) & 0xFF\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 2) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 2) |\n      (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  if (placeHoldersLen === 1) {\n    tmp =\n      (revLookup[b64.charCodeAt(i)] << 10) |\n      (revLookup[b64.charCodeAt(i + 1)] << 4) |\n      (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[curByte++] = (tmp >> 8) & 0xFF\n    arr[curByte++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] +\n    lookup[num >> 12 & 0x3F] +\n    lookup[num >> 6 & 0x3F] +\n    lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp =\n      ((uint8[i] << 16) & 0xFF0000) +\n      ((uint8[i + 1] << 8) & 0xFF00) +\n      (uint8[i + 2] & 0xFF)\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(\n      uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)\n    ))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 2] +\n      lookup[(tmp << 4) & 0x3F] +\n      '=='\n    )\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + uint8[len - 1]\n    parts.push(\n      lookup[tmp >> 10] +\n      lookup[(tmp >> 4) & 0x3F] +\n      lookup[(tmp << 2) & 0x3F] +\n      '='\n    )\n  }\n\n  return parts.join('')\n}\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var listRE = /^(\\s*)(>[> ]*|[*+-] \\[[x ]\\]\\s|[*+-]\\s|(\\d+)([.)]))(\\s*)/,\n      emptyListRE = /^(\\s*)(>[> ]*|[*+-] \\[[x ]\\]|[*+-]|(\\d+)[.)])(\\s*)$/,\n      unorderedListRE = /[*+-]\\s/;\n\n  CodeMirror.commands.newlineAndIndentContinueMarkdownList = function(cm) {\n    if (cm.getOption(\"disableInput\")) return CodeMirror.Pass;\n    var ranges = cm.listSelections(), replacements = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var pos = ranges[i].head;\n      var eolState = cm.getStateAfter(pos.line);\n      var inList = eolState.list !== false;\n      var inQuote = eolState.quote !== 0;\n\n      var line = cm.getLine(pos.line), match = listRE.exec(line);\n      var cursorBeforeBullet = /^\\s*$/.test(line.slice(0, pos.ch));\n      if (!ranges[i].empty() || (!inList && !inQuote) || !match || cursorBeforeBullet) {\n        cm.execCommand(\"newlineAndIndent\");\n        return;\n      }\n      if (emptyListRE.test(line)) {\n        if (!/>\\s*$/.test(line)) cm.replaceRange(\"\", {\n          line: pos.line, ch: 0\n        }, {\n          line: pos.line, ch: pos.ch + 1\n        });\n        replacements[i] = \"\\n\";\n      } else {\n        var indent = match[1], after = match[5];\n        var numbered = !(unorderedListRE.test(match[2]) || match[2].indexOf(\">\") >= 0);\n        var bullet = numbered ? (parseInt(match[3], 10) + 1) + match[4] : match[2].replace(\"x\", \" \");\n        replacements[i] = \"\\n\" + indent + bullet + after;\n\n        if (numbered) incrementRemainingMarkdownListNumbers(cm, pos);\n      }\n    }\n\n    cm.replaceSelections(replacements);\n  };\n\n  // Auto-updating Markdown list numbers when a new item is added to the\n  // middle of a list\n  function incrementRemainingMarkdownListNumbers(cm, pos) {\n    var startLine = pos.line, lookAhead = 0, skipCount = 0;\n    var startItem = listRE.exec(cm.getLine(startLine)), startIndent = startItem[1];\n\n    do {\n      lookAhead += 1;\n      var nextLineNumber = startLine + lookAhead;\n      var nextLine = cm.getLine(nextLineNumber), nextItem = listRE.exec(nextLine);\n\n      if (nextItem) {\n        var nextIndent = nextItem[1];\n        var newNumber = (parseInt(startItem[3], 10) + lookAhead - skipCount);\n        var nextNumber = (parseInt(nextItem[3], 10)), itemNumber = nextNumber;\n\n        if (startIndent === nextIndent && !isNaN(nextNumber)) {\n          if (newNumber === nextNumber) itemNumber = nextNumber + 1;\n          if (newNumber > nextNumber) itemNumber = newNumber + 1;\n          cm.replaceRange(\n            nextLine.replace(listRE, nextIndent + itemNumber + nextItem[4] + nextItem[5]),\n          {\n            line: nextLineNumber, ch: 0\n          }, {\n            line: nextLineNumber, ch: nextLine.length\n          });\n        } else {\n          if (startIndent.length > nextIndent.length) return;\n          // This doesn't run if the next line immediatley indents, as it is\n          // not clear of the users intention (new indented item or same level)\n          if ((startIndent.length < nextIndent.length) && (lookAhead === 1)) return;\n          skipCount += 1;\n        }\n      }\n    } while (nextItem);\n  }\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../markdown/markdown\"), require(\"../../addon/mode/overlay\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../markdown/markdown\", \"../../addon/mode/overlay\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nvar urlRE = /^((?:(?:aaas?|about|acap|adiumxtra|af[ps]|aim|apt|attachment|aw|beshare|bitcoin|bolo|callto|cap|chrome(?:-extension)?|cid|coap|com-eventbrite-attendee|content|crid|cvs|data|dav|dict|dlna-(?:playcontainer|playsingle)|dns|doi|dtn|dvb|ed2k|facetime|feed|file|finger|fish|ftp|geo|gg|git|gizmoproject|go|gopher|gtalk|h323|hcp|https?|iax|icap|icon|im|imap|info|ipn|ipp|irc[6s]?|iris(?:\\.beep|\\.lwz|\\.xpc|\\.xpcs)?|itms|jar|javascript|jms|keyparc|lastfm|ldaps?|magnet|mailto|maps|market|message|mid|mms|ms-help|msnim|msrps?|mtqp|mumble|mupdate|mvn|news|nfs|nih?|nntp|notes|oid|opaquelocktoken|palm|paparazzi|platform|pop|pres|proxy|psyc|query|res(?:ource)?|rmi|rsync|rtmp|rtsp|secondlife|service|session|sftp|sgn|shttp|sieve|sips?|skype|sm[bs]|snmp|soap\\.beeps?|soldat|spotify|ssh|steam|svn|tag|teamspeak|tel(?:net)?|tftp|things|thismessage|tip|tn3270|tv|udp|unreal|urn|ut2004|vemmi|ventrilo|view-source|webcal|wss?|wtai|wyciwyg|xcon(?:-userid)?|xfire|xmlrpc\\.beeps?|xmpp|xri|ymsgr|z39\\.50[rs]?):(?:\\/{1,3}|[a-z0-9%])|www\\d{0,3}[.]|[a-z0-9.\\-]+[.][a-z]{2,4}\\/)(?:[^\\s()<>]|\\([^\\s()<>]*\\))+(?:\\([^\\s()<>]*\\)|[^\\s`*!()\\[\\]{};:'\".,<>?«»“”‘’]))/i\n\nCodeMirror.defineMode(\"gfm\", function(config, modeConfig) {\n  var codeDepth = 0;\n  function blankLine(state) {\n    state.code = false;\n    return null;\n  }\n  var gfmOverlay = {\n    startState: function() {\n      return {\n        code: false,\n        codeBlock: false,\n        ateSpace: false\n      };\n    },\n    copyState: function(s) {\n      return {\n        code: s.code,\n        codeBlock: s.codeBlock,\n        ateSpace: s.ateSpace\n      };\n    },\n    token: function(stream, state) {\n      state.combineTokens = null;\n\n      // Hack to prevent formatting override inside code blocks (block and inline)\n      if (state.codeBlock) {\n        if (stream.match(/^```+/)) {\n          state.codeBlock = false;\n          return null;\n        }\n        stream.skipToEnd();\n        return null;\n      }\n      if (stream.sol()) {\n        state.code = false;\n      }\n      if (stream.sol() && stream.match(/^```+/)) {\n        stream.skipToEnd();\n        state.codeBlock = true;\n        return null;\n      }\n      // If this block is changed, it may need to be updated in Markdown mode\n      if (stream.peek() === '`') {\n        stream.next();\n        var before = stream.pos;\n        stream.eatWhile('`');\n        var difference = 1 + stream.pos - before;\n        if (!state.code) {\n          codeDepth = difference;\n          state.code = true;\n        } else {\n          if (difference === codeDepth) { // Must be exact\n            state.code = false;\n          }\n        }\n        return null;\n      } else if (state.code) {\n        stream.next();\n        return null;\n      }\n      // Check if space. If so, links can be formatted later on\n      if (stream.eatSpace()) {\n        state.ateSpace = true;\n        return null;\n      }\n      if (stream.sol() || state.ateSpace) {\n        state.ateSpace = false;\n        if (modeConfig.gitHubSpice !== false) {\n          if(stream.match(/^(?:[a-zA-Z0-9\\-_]+\\/)?(?:[a-zA-Z0-9\\-_]+@)?(?=.{0,6}\\d)(?:[a-f0-9]{7,40}\\b)/)) {\n            // User/Project@SHA\n            // User@SHA\n            // SHA\n            state.combineTokens = true;\n            return \"link\";\n          } else if (stream.match(/^(?:[a-zA-Z0-9\\-_]+\\/)?(?:[a-zA-Z0-9\\-_]+)?#[0-9]+\\b/)) {\n            // User/Project#Num\n            // User#Num\n            // #Num\n            state.combineTokens = true;\n            return \"link\";\n          }\n        }\n      }\n      if (stream.match(urlRE) &&\n          stream.string.slice(stream.start - 2, stream.start) != \"](\" &&\n          (stream.start == 0 || /\\W/.test(stream.string.charAt(stream.start - 1)))) {\n        // URLs\n        // Taken from http://daringfireball.net/2010/07/improved_regex_for_matching_urls\n        // And then (issue #1160) simplified to make it not crash the Chrome Regexp engine\n        // And then limited url schemes to the CommonMark list, so foo:bar isn't matched as a URL\n        state.combineTokens = true;\n        return \"link\";\n      }\n      stream.next();\n      return null;\n    },\n    blankLine: blankLine\n  };\n\n  var markdownConfig = {\n    taskLists: true,\n    strikethrough: true,\n    emoji: true\n  };\n  for (var attr in modeConfig) {\n    markdownConfig[attr] = modeConfig[attr];\n  }\n  markdownConfig.name = \"markdown\";\n  return CodeMirror.overlayMode(CodeMirror.getMode(config, markdownConfig), gfmOverlay);\n\n}, \"markdown\");\n\n  CodeMirror.defineMIME(\"text/x-gfm\", \"gfm\");\n});\n","/* globals chrome: false */\n/* globals __dirname: false */\n/* globals require: false */\n/* globals Buffer: false */\n/* globals module: false */\n\n/**\n * Typo is a JavaScript implementation of a spellchecker using hunspell-style \n * dictionaries.\n */\n\nvar Typo;\n\n(function () {\n\"use strict\";\n\n/**\n * Typo constructor.\n *\n * @param {String} [dictionary] The locale code of the dictionary being used. e.g.,\n *                              \"en_US\". This is only used to auto-load dictionaries.\n * @param {String} [affData]    The data from the dictionary's .aff file. If omitted\n *                              and Typo.js is being used in a Chrome extension, the .aff\n *                              file will be loaded automatically from\n *                              lib/typo/dictionaries/[dictionary]/[dictionary].aff\n *                              In other environments, it will be loaded from\n *                              [settings.dictionaryPath]/dictionaries/[dictionary]/[dictionary].aff\n * @param {String} [wordsData]  The data from the dictionary's .dic file. If omitted\n *                              and Typo.js is being used in a Chrome extension, the .dic\n *                              file will be loaded automatically from\n *                              lib/typo/dictionaries/[dictionary]/[dictionary].dic\n *                              In other environments, it will be loaded from\n *                              [settings.dictionaryPath]/dictionaries/[dictionary]/[dictionary].dic\n * @param {Object} [settings]   Constructor settings. Available properties are:\n *                              {String} [dictionaryPath]: path to load dictionary from in non-chrome\n *                              environment.\n *                              {Object} [flags]: flag information.\n *                              {Boolean} [asyncLoad]: If true, affData and wordsData will be loaded\n *                              asynchronously.\n *                              {Function} [loadedCallback]: Called when both affData and wordsData\n *                              have been loaded. Only used if asyncLoad is set to true. The parameter\n *                              is the instantiated Typo object.\n *\n * @returns {Typo} A Typo object.\n */\n\nTypo = function (dictionary, affData, wordsData, settings) {\n\tsettings = settings || {};\n\n\tthis.dictionary = null;\n\t\n\tthis.rules = {};\n\tthis.dictionaryTable = {};\n\t\n\tthis.compoundRules = [];\n\tthis.compoundRuleCodes = {};\n\t\n\tthis.replacementTable = [];\n\t\n\tthis.flags = settings.flags || {}; \n\t\n\tthis.memoized = {};\n\n\tthis.loaded = false;\n\t\n\tvar self = this;\n\t\n\tvar path;\n\t\n\t// Loop-control variables.\n\tvar i, j, _len, _jlen;\n\t\n\tif (dictionary) {\n\t\tself.dictionary = dictionary;\n\t\t\n\t\t// If the data is preloaded, just setup the Typo object.\n\t\tif (affData && wordsData) {\n\t\t\tsetup();\n\t\t}\n\t\t// Loading data for Chrome extentions.\n\t\telse if (typeof window !== 'undefined' && 'chrome' in window && 'extension' in window.chrome && 'getURL' in window.chrome.extension) {\n\t\t\tif (settings.dictionaryPath) {\n\t\t\t\tpath = settings.dictionaryPath;\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpath = \"typo/dictionaries\";\n\t\t\t}\n\t\t\t\n\t\t\tif (!affData) readDataFile(chrome.extension.getURL(path + \"/\" + dictionary + \"/\" + dictionary + \".aff\"), setAffData);\n\t\t\tif (!wordsData) readDataFile(chrome.extension.getURL(path + \"/\" + dictionary + \"/\" + dictionary + \".dic\"), setWordsData);\n\t\t}\n\t\telse {\n\t\t\tif (settings.dictionaryPath) {\n\t\t\t\tpath = settings.dictionaryPath;\n\t\t\t}\n\t\t\telse if (typeof __dirname !== 'undefined') {\n\t\t\t\tpath = __dirname + '/dictionaries';\n\t\t\t}\n\t\t\telse {\n\t\t\t\tpath = './dictionaries';\n\t\t\t}\n\t\t\t\n\t\t\tif (!affData) readDataFile(path + \"/\" + dictionary + \"/\" + dictionary + \".aff\", setAffData);\n\t\t\tif (!wordsData) readDataFile(path + \"/\" + dictionary + \"/\" + dictionary + \".dic\", setWordsData);\n\t\t}\n\t}\n\t\n\tfunction readDataFile(url, setFunc) {\n\t\tvar response = self._readFile(url, null, settings.asyncLoad);\n\t\t\n\t\tif (settings.asyncLoad) {\n\t\t\tresponse.then(function(data) {\n\t\t\t\tsetFunc(data);\n\t\t\t});\n\t\t}\n\t\telse {\n\t\t\tsetFunc(response);\n\t\t}\n\t}\n\n\tfunction setAffData(data) {\n\t\taffData = data;\n\n\t\tif (wordsData) {\n\t\t\tsetup();\n\t\t}\n\t}\n\n\tfunction setWordsData(data) {\n\t\twordsData = data;\n\n\t\tif (affData) {\n\t\t\tsetup();\n\t\t}\n\t}\n\n\tfunction setup() {\n\t\tself.rules = self._parseAFF(affData);\n\t\t\n\t\t// Save the rule codes that are used in compound rules.\n\t\tself.compoundRuleCodes = {};\n\t\t\n\t\tfor (i = 0, _len = self.compoundRules.length; i < _len; i++) {\n\t\t\tvar rule = self.compoundRules[i];\n\t\t\t\n\t\t\tfor (j = 0, _jlen = rule.length; j < _jlen; j++) {\n\t\t\t\tself.compoundRuleCodes[rule[j]] = [];\n\t\t\t}\n\t\t}\n\t\t\n\t\t// If we add this ONLYINCOMPOUND flag to self.compoundRuleCodes, then _parseDIC\n\t\t// will do the work of saving the list of words that are compound-only.\n\t\tif (\"ONLYINCOMPOUND\" in self.flags) {\n\t\t\tself.compoundRuleCodes[self.flags.ONLYINCOMPOUND] = [];\n\t\t}\n\t\t\n\t\tself.dictionaryTable = self._parseDIC(wordsData);\n\t\t\n\t\t// Get rid of any codes from the compound rule codes that are never used \n\t\t// (or that were special regex characters).  Not especially necessary... \n\t\tfor (i in self.compoundRuleCodes) {\n\t\t\tif (self.compoundRuleCodes[i].length === 0) {\n\t\t\t\tdelete self.compoundRuleCodes[i];\n\t\t\t}\n\t\t}\n\t\t\n\t\t// Build the full regular expressions for each compound rule.\n\t\t// I have a feeling (but no confirmation yet) that this method of \n\t\t// testing for compound words is probably slow.\n\t\tfor (i = 0, _len = self.compoundRules.length; i < _len; i++) {\n\t\t\tvar ruleText = self.compoundRules[i];\n\t\t\t\n\t\t\tvar expressionText = \"\";\n\t\t\t\n\t\t\tfor (j = 0, _jlen = ruleText.length; j < _jlen; j++) {\n\t\t\t\tvar character = ruleText[j];\n\t\t\t\t\n\t\t\t\tif (character in self.compoundRuleCodes) {\n\t\t\t\t\texpressionText += \"(\" + self.compoundRuleCodes[character].join(\"|\") + \")\";\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\texpressionText += character;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tself.compoundRules[i] = new RegExp(expressionText, \"i\");\n\t\t}\n\t\t\n\t\tself.loaded = true;\n\t\t\n\t\tif (settings.asyncLoad && settings.loadedCallback) {\n\t\t\tsettings.loadedCallback(self);\n\t\t}\n\t}\n\t\n\treturn this;\n};\n\nTypo.prototype = {\n\t/**\n\t * Loads a Typo instance from a hash of all of the Typo properties.\n\t *\n\t * @param object obj A hash of Typo properties, probably gotten from a JSON.parse(JSON.stringify(typo_instance)).\n\t */\n\t\n\tload : function (obj) {\n\t\tfor (var i in obj) {\n\t\t\tif (obj.hasOwnProperty(i)) {\n\t\t\t\tthis[i] = obj[i];\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn this;\n\t},\n\t\n\t/**\n\t * Read the contents of a file.\n\t * \n\t * @param {String} path The path (relative) to the file.\n\t * @param {String} [charset=\"ISO8859-1\"] The expected charset of the file\n\t * @param {Boolean} async If true, the file will be read asynchronously. For node.js this does nothing, all\n\t *        files are read synchronously.\n\t * @returns {String} The file data if async is false, otherwise a promise object. If running node.js, the data is\n\t *          always returned.\n\t */\n\t\n\t_readFile : function (path, charset, async) {\n\t\tcharset = charset || \"utf8\";\n\t\t\n\t\tif (typeof XMLHttpRequest !== 'undefined') {\n\t\t\tvar promise;\n\t\t\tvar req = new XMLHttpRequest();\n\t\t\treq.open(\"GET\", path, async);\n\t\t\t\n\t\t\tif (async) {\n\t\t\t\tpromise = new Promise(function(resolve, reject) {\n\t\t\t\t\treq.onload = function() {\n\t\t\t\t\t\tif (req.status === 200) {\n\t\t\t\t\t\t\tresolve(req.responseText);\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\treject(req.statusText);\n\t\t\t\t\t\t}\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\treq.onerror = function() {\n\t\t\t\t\t\treject(req.statusText);\n\t\t\t\t\t}\n\t\t\t\t});\n\t\t\t}\n\t\t\n\t\t\tif (req.overrideMimeType)\n\t\t\t\treq.overrideMimeType(\"text/plain; charset=\" + charset);\n\t\t\n\t\t\treq.send(null);\n\t\t\t\n\t\t\treturn async ? promise : req.responseText;\n\t\t}\n\t\telse if (typeof require !== 'undefined') {\n\t\t\t// Node.js\n\t\t\tvar fs = require(\"fs\");\n\t\t\t\n\t\t\ttry {\n\t\t\t\tif (fs.existsSync(path)) {\n\t\t\t\t\tvar stats = fs.statSync(path);\n\t\t\t\t\t\n\t\t\t\t\tvar fileDescriptor = fs.openSync(path, 'r');\n\t\t\t\t\t\n\t\t\t\t\tvar buffer = new Buffer(stats.size);\n\t\t\t\t\t\n\t\t\t\t\tfs.readSync(fileDescriptor, buffer, 0, buffer.length, null);\n\t\t\t\t\t\n\t\t\t\t\treturn buffer.toString(charset, 0, buffer.length);\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tconsole.log(\"Path \" + path + \" does not exist.\");\n\t\t\t\t}\n\t\t\t} catch (e) {\n\t\t\t\tconsole.log(e);\n\t\t\t\treturn '';\n\t\t\t}\n\t\t}\n\t},\n\t\n\t/**\n\t * Parse the rules out from a .aff file.\n\t *\n\t * @param {String} data The contents of the affix file.\n\t * @returns object The rules from the file.\n\t */\n\t\n\t_parseAFF : function (data) {\n\t\tvar rules = {};\n\t\t\n\t\tvar line, subline, numEntries, lineParts;\n\t\tvar i, j, _len, _jlen;\n\t\t\n\t\t// Remove comment lines\n\t\tdata = this._removeAffixComments(data);\n\t\t\n\t\tvar lines = data.split(\"\\n\");\n\t\t\n\t\tfor (i = 0, _len = lines.length; i < _len; i++) {\n\t\t\tline = lines[i];\n\t\t\t\n\t\t\tvar definitionParts = line.split(/\\s+/);\n\t\t\t\n\t\t\tvar ruleType = definitionParts[0];\n\t\t\t\n\t\t\tif (ruleType == \"PFX\" || ruleType == \"SFX\") {\n\t\t\t\tvar ruleCode = definitionParts[1];\n\t\t\t\tvar combineable = definitionParts[2];\n\t\t\t\tnumEntries = parseInt(definitionParts[3], 10);\n\t\t\t\t\n\t\t\t\tvar entries = [];\n\t\t\t\t\n\t\t\t\tfor (j = i + 1, _jlen = i + 1 + numEntries; j < _jlen; j++) {\n\t\t\t\t\tsubline = lines[j];\n\t\t\t\t\t\n\t\t\t\t\tlineParts = subline.split(/\\s+/);\n\t\t\t\t\tvar charactersToRemove = lineParts[2];\n\t\t\t\t\t\n\t\t\t\t\tvar additionParts = lineParts[3].split(\"/\");\n\t\t\t\t\t\n\t\t\t\t\tvar charactersToAdd = additionParts[0];\n\t\t\t\t\tif (charactersToAdd === \"0\") charactersToAdd = \"\";\n\t\t\t\t\t\n\t\t\t\t\tvar continuationClasses = this.parseRuleCodes(additionParts[1]);\n\t\t\t\t\t\n\t\t\t\t\tvar regexToMatch = lineParts[4];\n\t\t\t\t\t\n\t\t\t\t\tvar entry = {};\n\t\t\t\t\tentry.add = charactersToAdd;\n\t\t\t\t\t\n\t\t\t\t\tif (continuationClasses.length > 0) entry.continuationClasses = continuationClasses;\n\t\t\t\t\t\n\t\t\t\t\tif (regexToMatch !== \".\") {\n\t\t\t\t\t\tif (ruleType === \"SFX\") {\n\t\t\t\t\t\t\tentry.match = new RegExp(regexToMatch + \"$\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tentry.match = new RegExp(\"^\" + regexToMatch);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (charactersToRemove != \"0\") {\n\t\t\t\t\t\tif (ruleType === \"SFX\") {\n\t\t\t\t\t\t\tentry.remove = new RegExp(charactersToRemove  + \"$\");\n\t\t\t\t\t\t}\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\tentry.remove = charactersToRemove;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tentries.push(entry);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\trules[ruleCode] = { \"type\" : ruleType, \"combineable\" : (combineable == \"Y\"), \"entries\" : entries };\n\t\t\t\t\n\t\t\t\ti += numEntries;\n\t\t\t}\n\t\t\telse if (ruleType === \"COMPOUNDRULE\") {\n\t\t\t\tnumEntries = parseInt(definitionParts[1], 10);\n\t\t\t\t\n\t\t\t\tfor (j = i + 1, _jlen = i + 1 + numEntries; j < _jlen; j++) {\n\t\t\t\t\tline = lines[j];\n\t\t\t\t\t\n\t\t\t\t\tlineParts = line.split(/\\s+/);\n\t\t\t\t\tthis.compoundRules.push(lineParts[1]);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\ti += numEntries;\n\t\t\t}\n\t\t\telse if (ruleType === \"REP\") {\n\t\t\t\tlineParts = line.split(/\\s+/);\n\t\t\t\t\n\t\t\t\tif (lineParts.length === 3) {\n\t\t\t\t\tthis.replacementTable.push([ lineParts[1], lineParts[2] ]);\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\t// ONLYINCOMPOUND\n\t\t\t\t// COMPOUNDMIN\n\t\t\t\t// FLAG\n\t\t\t\t// KEEPCASE\n\t\t\t\t// NEEDAFFIX\n\t\t\t\t\n\t\t\t\tthis.flags[ruleType] = definitionParts[1];\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn rules;\n\t},\n\t\n\t/**\n\t * Removes comment lines and then cleans up blank lines and trailing whitespace.\n\t *\n\t * @param {String} data The data from an affix file.\n\t * @return {String} The cleaned-up data.\n\t */\n\t\n\t_removeAffixComments : function (data) {\n\t\t// Remove comments\n\t\t// This used to remove any string starting with '#' up to the end of the line,\n\t\t// but some COMPOUNDRULE definitions include '#' as part of the rule.\n\t\t// I haven't seen any affix files that use comments on the same line as real data,\n\t\t// so I don't think this will break anything.\n\t\tdata = data.replace(/^\\s*#.*$/mg, \"\");\n\t\t\n\t\t// Trim each line\n\t\tdata = data.replace(/^\\s\\s*/m, '').replace(/\\s\\s*$/m, '');\n\t\t\n\t\t// Remove blank lines.\n\t\tdata = data.replace(/\\n{2,}/g, \"\\n\");\n\t\t\n\t\t// Trim the entire string\n\t\tdata = data.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n\t\t\n\t\treturn data;\n\t},\n\t\n\t/**\n\t * Parses the words out from the .dic file.\n\t *\n\t * @param {String} data The data from the dictionary file.\n\t * @returns object The lookup table containing all of the words and\n\t *                 word forms from the dictionary.\n\t */\n\t\n\t_parseDIC : function (data) {\n\t\tdata = this._removeDicComments(data);\n\t\t\n\t\tvar lines = data.split(\"\\n\");\n\t\tvar dictionaryTable = {};\n\t\t\n\t\tfunction addWord(word, rules) {\n\t\t\t// Some dictionaries will list the same word multiple times with different rule sets.\n\t\t\tif (!dictionaryTable.hasOwnProperty(word)) {\n\t\t\t\tdictionaryTable[word] = null;\n\t\t\t}\n\t\t\t\n\t\t\tif (rules.length > 0) {\n\t\t\t\tif (dictionaryTable[word] === null) {\n\t\t\t\t\tdictionaryTable[word] = [];\n\t\t\t\t}\n\n\t\t\t\tdictionaryTable[word].push(rules);\n\t\t\t}\n\t\t}\n\t\t\n\t\t// The first line is the number of words in the dictionary.\n\t\tfor (var i = 1, _len = lines.length; i < _len; i++) {\n\t\t\tvar line = lines[i];\n\t\t\t\n\t\t\tvar parts = line.split(\"/\", 2);\n\t\t\t\n\t\t\tvar word = parts[0];\n\n\t\t\t// Now for each affix rule, generate that form of the word.\n\t\t\tif (parts.length > 1) {\n\t\t\t\tvar ruleCodesArray = this.parseRuleCodes(parts[1]);\n\t\t\t\t\n\t\t\t\t// Save the ruleCodes for compound word situations.\n\t\t\t\tif (!(\"NEEDAFFIX\" in this.flags) || ruleCodesArray.indexOf(this.flags.NEEDAFFIX) == -1) {\n\t\t\t\t\taddWord(word, ruleCodesArray);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tfor (var j = 0, _jlen = ruleCodesArray.length; j < _jlen; j++) {\n\t\t\t\t\tvar code = ruleCodesArray[j];\n\t\t\t\t\t\n\t\t\t\t\tvar rule = this.rules[code];\n\t\t\t\t\t\n\t\t\t\t\tif (rule) {\n\t\t\t\t\t\tvar newWords = this._applyRule(word, rule);\n\t\t\t\t\t\t\n\t\t\t\t\t\tfor (var ii = 0, _iilen = newWords.length; ii < _iilen; ii++) {\n\t\t\t\t\t\t\tvar newWord = newWords[ii];\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\taddWord(newWord, []);\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tif (rule.combineable) {\n\t\t\t\t\t\t\t\tfor (var k = j + 1; k < _jlen; k++) {\n\t\t\t\t\t\t\t\t\tvar combineCode = ruleCodesArray[k];\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tvar combineRule = this.rules[combineCode];\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tif (combineRule) {\n\t\t\t\t\t\t\t\t\t\tif (combineRule.combineable && (rule.type != combineRule.type)) {\n\t\t\t\t\t\t\t\t\t\t\tvar otherNewWords = this._applyRule(newWord, combineRule);\n\t\t\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\t\t\tfor (var iii = 0, _iiilen = otherNewWords.length; iii < _iiilen; iii++) {\n\t\t\t\t\t\t\t\t\t\t\t\tvar otherNewWord = otherNewWords[iii];\n\t\t\t\t\t\t\t\t\t\t\t\taddWord(otherNewWord, []);\n\t\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\tif (code in this.compoundRuleCodes) {\n\t\t\t\t\t\tthis.compoundRuleCodes[code].push(word);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\telse {\n\t\t\t\taddWord(word.trim(), []);\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn dictionaryTable;\n\t},\n\t\n\t\n\t/**\n\t * Removes comment lines and then cleans up blank lines and trailing whitespace.\n\t *\n\t * @param {String} data The data from a .dic file.\n\t * @return {String} The cleaned-up data.\n\t */\n\t\n\t_removeDicComments : function (data) {\n\t\t// I can't find any official documentation on it, but at least the de_DE\n\t\t// dictionary uses tab-indented lines as comments.\n\t\t\n\t\t// Remove comments\n\t\tdata = data.replace(/^\\t.*$/mg, \"\");\n\t\t\n\t\treturn data;\n\t},\n\t\n\tparseRuleCodes : function (textCodes) {\n\t\tif (!textCodes) {\n\t\t\treturn [];\n\t\t}\n\t\telse if (!(\"FLAG\" in this.flags)) {\n\t\t\treturn textCodes.split(\"\");\n\t\t}\n\t\telse if (this.flags.FLAG === \"long\") {\n\t\t\tvar flags = [];\n\t\t\t\n\t\t\tfor (var i = 0, _len = textCodes.length; i < _len; i += 2) {\n\t\t\t\tflags.push(textCodes.substr(i, 2));\n\t\t\t}\n\t\t\t\n\t\t\treturn flags;\n\t\t}\n\t\telse if (this.flags.FLAG === \"num\") {\n\t\t\treturn textCodes.split(\",\");\n\t\t}\n\t},\n\t\n\t/**\n\t * Applies an affix rule to a word.\n\t *\n\t * @param {String} word The base word.\n\t * @param {Object} rule The affix rule.\n\t * @returns {String[]} The new words generated by the rule.\n\t */\n\t\n\t_applyRule : function (word, rule) {\n\t\tvar entries = rule.entries;\n\t\tvar newWords = [];\n\t\t\n\t\tfor (var i = 0, _len = entries.length; i < _len; i++) {\n\t\t\tvar entry = entries[i];\n\t\t\t\n\t\t\tif (!entry.match || word.match(entry.match)) {\n\t\t\t\tvar newWord = word;\n\t\t\t\t\n\t\t\t\tif (entry.remove) {\n\t\t\t\t\tnewWord = newWord.replace(entry.remove, \"\");\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (rule.type === \"SFX\") {\n\t\t\t\t\tnewWord = newWord + entry.add;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tnewWord = entry.add + newWord;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tnewWords.push(newWord);\n\t\t\t\t\n\t\t\t\tif (\"continuationClasses\" in entry) {\n\t\t\t\t\tfor (var j = 0, _jlen = entry.continuationClasses.length; j < _jlen; j++) {\n\t\t\t\t\t\tvar continuationRule = this.rules[entry.continuationClasses[j]];\n\t\t\t\t\t\t\n\t\t\t\t\t\tif (continuationRule) {\n\t\t\t\t\t\t\tnewWords = newWords.concat(this._applyRule(newWord, continuationRule));\n\t\t\t\t\t\t}\n\t\t\t\t\t\t/*\n\t\t\t\t\t\telse {\n\t\t\t\t\t\t\t// This shouldn't happen, but it does, at least in the de_DE dictionary.\n\t\t\t\t\t\t\t// I think the author mistakenly supplied lower-case rule codes instead \n\t\t\t\t\t\t\t// of upper-case.\n\t\t\t\t\t\t}\n\t\t\t\t\t\t*/\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn newWords;\n\t},\n\t\n\t/**\n\t * Checks whether a word or a capitalization variant exists in the current dictionary.\n\t * The word is trimmed and several variations of capitalizations are checked.\n\t * If you want to check a word without any changes made to it, call checkExact()\n\t *\n\t * @see http://blog.stevenlevithan.com/archives/faster-trim-javascript re:trimming function\n\t *\n\t * @param {String} aWord The word to check.\n\t * @returns {Boolean}\n\t */\n\t\n\tcheck : function (aWord) {\n\t\tif (!this.loaded) {\n\t\t\tthrow \"Dictionary not loaded.\";\n\t\t}\n\t\t\n\t\t// Remove leading and trailing whitespace\n\t\tvar trimmedWord = aWord.replace(/^\\s\\s*/, '').replace(/\\s\\s*$/, '');\n\t\t\n\t\tif (this.checkExact(trimmedWord)) {\n\t\t\treturn true;\n\t\t}\n\t\t\n\t\t// The exact word is not in the dictionary.\n\t\tif (trimmedWord.toUpperCase() === trimmedWord) {\n\t\t\t// The word was supplied in all uppercase.\n\t\t\t// Check for a capitalized form of the word.\n\t\t\tvar capitalizedWord = trimmedWord[0] + trimmedWord.substring(1).toLowerCase();\n\t\t\t\n\t\t\tif (this.hasFlag(capitalizedWord, \"KEEPCASE\")) {\n\t\t\t\t// Capitalization variants are not allowed for this word.\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t\n\t\t\tif (this.checkExact(capitalizedWord)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar lowercaseWord = trimmedWord.toLowerCase();\n\t\t\n\t\tif (lowercaseWord !== trimmedWord) {\n\t\t\tif (this.hasFlag(lowercaseWord, \"KEEPCASE\")) {\n\t\t\t\t// Capitalization variants are not allowed for this word.\n\t\t\t\treturn false;\n\t\t\t}\n\t\t\t\n\t\t\t// Check for a lowercase form\n\t\t\tif (this.checkExact(lowercaseWord)) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn false;\n\t},\n\t\n\t/**\n\t * Checks whether a word exists in the current dictionary.\n\t *\n\t * @param {String} word The word to check.\n\t * @returns {Boolean}\n\t */\n\t\n\tcheckExact : function (word) {\n\t\tif (!this.loaded) {\n\t\t\tthrow \"Dictionary not loaded.\";\n\t\t}\n\n\t\tvar ruleCodes = this.dictionaryTable[word];\n\t\t\n\t\tvar i, _len;\n\t\t\n\t\tif (typeof ruleCodes === 'undefined') {\n\t\t\t// Check if this might be a compound word.\n\t\t\tif (\"COMPOUNDMIN\" in this.flags && word.length >= this.flags.COMPOUNDMIN) {\n\t\t\t\tfor (i = 0, _len = this.compoundRules.length; i < _len; i++) {\n\t\t\t\t\tif (word.match(this.compoundRules[i])) {\n\t\t\t\t\t\treturn true;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\telse if (ruleCodes === null) {\n\t\t\t// a null (but not undefined) value for an entry in the dictionary table\n\t\t\t// means that the word is in the dictionary but has no flags.\n\t\t\treturn true;\n\t\t}\n\t\telse if (typeof ruleCodes === 'object') { // this.dictionary['hasOwnProperty'] will be a function.\n\t\t\tfor (i = 0, _len = ruleCodes.length; i < _len; i++) {\n\t\t\t\tif (!this.hasFlag(word, \"ONLYINCOMPOUND\", ruleCodes[i])) {\n\t\t\t\t\treturn true;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn false;\n\t},\n\t\n\t/**\n\t * Looks up whether a given word is flagged with a given flag.\n\t *\n\t * @param {String} word The word in question.\n\t * @param {String} flag The flag in question.\n\t * @return {Boolean}\n\t */\n\t \n\thasFlag : function (word, flag, wordFlags) {\n\t\tif (!this.loaded) {\n\t\t\tthrow \"Dictionary not loaded.\";\n\t\t}\n\n\t\tif (flag in this.flags) {\n\t\t\tif (typeof wordFlags === 'undefined') {\n\t\t\t\twordFlags = Array.prototype.concat.apply([], this.dictionaryTable[word]);\n\t\t\t}\n\t\t\t\n\t\t\tif (wordFlags && wordFlags.indexOf(this.flags[flag]) !== -1) {\n\t\t\t\treturn true;\n\t\t\t}\n\t\t}\n\t\t\n\t\treturn false;\n\t},\n\t\n\t/**\n\t * Returns a list of suggestions for a misspelled word.\n\t *\n\t * @see http://www.norvig.com/spell-correct.html for the basis of this suggestor.\n\t * This suggestor is primitive, but it works.\n\t *\n\t * @param {String} word The misspelling.\n\t * @param {Number} [limit=5] The maximum number of suggestions to return.\n\t * @returns {String[]} The array of suggestions.\n\t */\n\t\n\talphabet : \"\",\n\t\n\tsuggest : function (word, limit) {\n\t\tif (!this.loaded) {\n\t\t\tthrow \"Dictionary not loaded.\";\n\t\t}\n\n\t\tlimit = limit || 5;\n\n\t\tif (this.memoized.hasOwnProperty(word)) {\n\t\t\tvar memoizedLimit = this.memoized[word]['limit'];\n\n\t\t\t// Only return the cached list if it's big enough or if there weren't enough suggestions\n\t\t\t// to fill a smaller limit.\n\t\t\tif (limit <= memoizedLimit || this.memoized[word]['suggestions'].length < memoizedLimit) {\n\t\t\t\treturn this.memoized[word]['suggestions'].slice(0, limit);\n\t\t\t}\n\t\t}\n\t\t\n\t\tif (this.check(word)) return [];\n\t\t\n\t\t// Check the replacement table.\n\t\tfor (var i = 0, _len = this.replacementTable.length; i < _len; i++) {\n\t\t\tvar replacementEntry = this.replacementTable[i];\n\t\t\t\n\t\t\tif (word.indexOf(replacementEntry[0]) !== -1) {\n\t\t\t\tvar correctedWord = word.replace(replacementEntry[0], replacementEntry[1]);\n\t\t\t\t\n\t\t\t\tif (this.check(correctedWord)) {\n\t\t\t\t\treturn [ correctedWord ];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tvar self = this;\n\t\tself.alphabet = \"abcdefghijklmnopqrstuvwxyz\";\n\t\t\n\t\t/*\n\t\tif (!self.alphabet) {\n\t\t\t// Use the alphabet as implicitly defined by the words in the dictionary.\n\t\t\tvar alphaHash = {};\n\t\t\t\n\t\t\tfor (var i in self.dictionaryTable) {\n\t\t\t\tfor (var j = 0, _len = i.length; j < _len; j++) {\n\t\t\t\t\talphaHash[i[j]] = true;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfor (var i in alphaHash) {\n\t\t\t\tself.alphabet += i;\n\t\t\t}\n\t\t\t\n\t\t\tvar alphaArray = self.alphabet.split(\"\");\n\t\t\talphaArray.sort();\n\t\t\tself.alphabet = alphaArray.join(\"\");\n\t\t}\n\t\t*/\n\t\t\n\t\tfunction edits1(words) {\n\t\t\tvar rv = [];\n\t\t\t\n\t\t\tvar ii, i, j, _iilen, _len, _jlen;\n\t\t\t\n\t\t\tfor (ii = 0, _iilen = words.length; ii < _iilen; ii++) {\n\t\t\t\tvar word = words[ii];\n\t\t\t\t\n\t\t\t\tfor (i = 0, _len = word.length + 1; i < _len; i++) {\n\t\t\t\t\tvar s = [ word.substring(0, i), word.substring(i) ];\n\t\t\t\t\n\t\t\t\t\tif (s[1]) {\n\t\t\t\t\t\trv.push(s[0] + s[1].substring(1));\n\t\t\t\t\t}\n\t\t\t\t\t\n\t\t\t\t\t// Eliminate transpositions of identical letters\n\t\t\t\t\tif (s[1].length > 1 && s[1][1] !== s[1][0]) {\n\t\t\t\t\t\trv.push(s[0] + s[1][1] + s[1][0] + s[1].substring(2));\n\t\t\t\t\t}\n\n\t\t\t\t\tif (s[1]) {\n\t\t\t\t\t\tfor (j = 0, _jlen = self.alphabet.length; j < _jlen; j++) {\n\t\t\t\t\t\t\t// Eliminate replacement of a letter by itself\n\t\t\t\t\t\t\tif (self.alphabet[j] != s[1].substring(0,1)){\n\t\t\t\t\t\t\t\trv.push(s[0] + self.alphabet[j] + s[1].substring(1));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (s[1]) {\n\t\t\t\t\t\tfor (j = 0, _jlen = self.alphabet.length; j < _jlen; j++) {\n\t\t\t\t\t\t\trv.push(s[0] + self.alphabet[j] + s[1]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn rv;\n\t\t}\n\t\t\n\t\tfunction known(words) {\n\t\t\tvar rv = [];\n\t\t\t\n\t\t\tfor (var i = 0, _len = words.length; i < _len; i++) {\n\t\t\t\tif (self.check(words[i])) {\n\t\t\t\t\trv.push(words[i]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn rv;\n\t\t}\n\t\t\n\t\tfunction correct(word) {\n\t\t\t// Get the edit-distance-1 and edit-distance-2 forms of this word.\n\t\t\tvar ed1 = edits1([word]);\n\t\t\tvar ed2 = edits1(ed1);\n\t\t\t\n\t\t\tvar corrections = known(ed1.concat(ed2));\n\t\t\t\n\t\t\tvar i, _len;\n\t\t\t\n\t\t\t// Sort the edits based on how many different ways they were created.\n\t\t\tvar weighted_corrections = {};\n\t\t\t\n\t\t\tfor (i = 0, _len = corrections.length; i < _len; i++) {\n\t\t\t\tif (!(corrections[i] in weighted_corrections)) {\n\t\t\t\t\tweighted_corrections[corrections[i]] = 1;\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tweighted_corrections[corrections[i]] += 1;\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tvar sorted_corrections = [];\n\t\t\t\n\t\t\tfor (i in weighted_corrections) {\n\t\t\t\tif (weighted_corrections.hasOwnProperty(i)) {\n\t\t\t\t\tsorted_corrections.push([ i, weighted_corrections[i] ]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\tfunction sorter(a, b) {\n\t\t\t\tif (a[1] < b[1]) {\n\t\t\t\t\treturn -1;\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\treturn 1;\n\t\t\t}\n\t\t\t\n\t\t\tsorted_corrections.sort(sorter).reverse();\n\t\t\t\n\t\t\tvar rv = [];\n\n\t\t\tvar capitalization_scheme = \"lowercase\";\n\t\t\t\n\t\t\tif (word.toUpperCase() === word) {\n\t\t\t\tcapitalization_scheme = \"uppercase\";\n\t\t\t}\n\t\t\telse if (word.substr(0, 1).toUpperCase() + word.substr(1).toLowerCase() === word) {\n\t\t\t\tcapitalization_scheme = \"capitalized\";\n\t\t\t}\n\t\t\t\n\t\t\tfor (i = 0, _len = Math.min(limit, sorted_corrections.length); i < _len; i++) {\n\t\t\t\tif (\"uppercase\" === capitalization_scheme) {\n\t\t\t\t\tsorted_corrections[i][0] = sorted_corrections[i][0].toUpperCase();\n\t\t\t\t}\n\t\t\t\telse if (\"capitalized\" === capitalization_scheme) {\n\t\t\t\t\tsorted_corrections[i][0] = sorted_corrections[i][0].substr(0, 1).toUpperCase() + sorted_corrections[i][0].substr(1);\n\t\t\t\t}\n\t\t\t\t\n\t\t\t\tif (!self.hasFlag(sorted_corrections[i][0], \"NOSUGGEST\")) {\n\t\t\t\t\trv.push(sorted_corrections[i][0]);\n\t\t\t\t}\n\t\t\t}\n\t\t\t\n\t\t\treturn rv;\n\t\t}\n\t\t\n\t\tthis.memoized[word] = {\n\t\t\t'suggestions': correct(word),\n\t\t\t'limit': limit\n\t\t};\n\n\t\treturn this.memoized[word]['suggestions'];\n\t}\n};\n})();\n\n// Support for use as a node.js module.\nif (typeof module !== 'undefined') {\n\tmodule.exports = Typo;\n}","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineOption(\"fullScreen\", false, function(cm, val, old) {\n    if (old == CodeMirror.Init) old = false;\n    if (!old == !val) return;\n    if (val) setFullscreen(cm);\n    else setNormal(cm);\n  });\n\n  function setFullscreen(cm) {\n    var wrap = cm.getWrapperElement();\n    cm.state.fullScreenRestore = {scrollTop: window.pageYOffset, scrollLeft: window.pageXOffset,\n                                  width: wrap.style.width, height: wrap.style.height};\n    wrap.style.width = \"\";\n    wrap.style.height = \"auto\";\n    wrap.className += \" CodeMirror-fullscreen\";\n    document.documentElement.style.overflow = \"hidden\";\n    cm.refresh();\n  }\n\n  function setNormal(cm) {\n    var wrap = cm.getWrapperElement();\n    wrap.className = wrap.className.replace(/\\s*CodeMirror-fullscreen\\b/, \"\");\n    document.documentElement.style.overflow = \"\";\n    var info = cm.state.fullScreenRestore;\n    wrap.style.width = info.width; wrap.style.height = info.height;\n    window.scrollTo(info.scrollLeft, info.scrollTop);\n    cm.refresh();\n  }\n});\n","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = (e * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = (m * 256) + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = (nBytes * 8) - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = ((value * c) - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"), require(\"../xml/xml\"), require(\"../meta\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\", \"../xml/xml\", \"../meta\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.defineMode(\"markdown\", function(cmCfg, modeCfg) {\n\n  var htmlMode = CodeMirror.getMode(cmCfg, \"text/html\");\n  var htmlModeMissing = htmlMode.name == \"null\"\n\n  function getMode(name) {\n    if (CodeMirror.findModeByName) {\n      var found = CodeMirror.findModeByName(name);\n      if (found) name = found.mime || found.mimes[0];\n    }\n    var mode = CodeMirror.getMode(cmCfg, name);\n    return mode.name == \"null\" ? null : mode;\n  }\n\n  // Should characters that affect highlighting be highlighted separate?\n  // Does not include characters that will be output (such as `1.` and `-` for lists)\n  if (modeCfg.highlightFormatting === undefined)\n    modeCfg.highlightFormatting = false;\n\n  // Maximum number of nested blockquotes. Set to 0 for infinite nesting.\n  // Excess `>` will emit `error` token.\n  if (modeCfg.maxBlockquoteDepth === undefined)\n    modeCfg.maxBlockquoteDepth = 0;\n\n  // Turn on task lists? (\"- [ ] \" and \"- [x] \")\n  if (modeCfg.taskLists === undefined) modeCfg.taskLists = false;\n\n  // Turn on strikethrough syntax\n  if (modeCfg.strikethrough === undefined)\n    modeCfg.strikethrough = false;\n\n  if (modeCfg.emoji === undefined)\n    modeCfg.emoji = false;\n\n  if (modeCfg.fencedCodeBlockHighlighting === undefined)\n    modeCfg.fencedCodeBlockHighlighting = true;\n\n  if (modeCfg.xml === undefined)\n    modeCfg.xml = true;\n\n  // Allow token types to be overridden by user-provided token types.\n  if (modeCfg.tokenTypeOverrides === undefined)\n    modeCfg.tokenTypeOverrides = {};\n\n  var tokenTypes = {\n    header: \"header\",\n    code: \"comment\",\n    quote: \"quote\",\n    list1: \"variable-2\",\n    list2: \"variable-3\",\n    list3: \"keyword\",\n    hr: \"hr\",\n    image: \"image\",\n    imageAltText: \"image-alt-text\",\n    imageMarker: \"image-marker\",\n    formatting: \"formatting\",\n    linkInline: \"link\",\n    linkEmail: \"link\",\n    linkText: \"link\",\n    linkHref: \"string\",\n    em: \"em\",\n    strong: \"strong\",\n    strikethrough: \"strikethrough\",\n    emoji: \"builtin\"\n  };\n\n  for (var tokenType in tokenTypes) {\n    if (tokenTypes.hasOwnProperty(tokenType) && modeCfg.tokenTypeOverrides[tokenType]) {\n      tokenTypes[tokenType] = modeCfg.tokenTypeOverrides[tokenType];\n    }\n  }\n\n  var hrRE = /^([*\\-_])(?:\\s*\\1){2,}\\s*$/\n  ,   listRE = /^(?:[*\\-+]|^[0-9]+([.)]))\\s+/\n  ,   taskListRE = /^\\[(x| )\\](?=\\s)/i // Must follow listRE\n  ,   atxHeaderRE = modeCfg.allowAtxHeaderWithoutSpace ? /^(#+)/ : /^(#+)(?: |$)/\n  ,   setextHeaderRE = /^ *(?:\\={1,}|-{1,})\\s*$/\n  ,   textRE = /^[^#!\\[\\]*_\\\\<>` \"'(~:]+/\n  ,   fencedCodeRE = /^(~~~+|```+)[ \\t]*([\\w+#-]*)[^\\n`]*$/\n  ,   linkDefRE = /^\\s*\\[[^\\]]+?\\]:.*$/ // naive link-definition\n  ,   punctuation = /[!\\\"#$%&\\'()*+,\\-\\.\\/:;<=>?@\\[\\\\\\]^_`{|}~—]/\n  ,   expandedTab = \"    \" // CommonMark specifies tab as 4 spaces\n\n  function switchInline(stream, state, f) {\n    state.f = state.inline = f;\n    return f(stream, state);\n  }\n\n  function switchBlock(stream, state, f) {\n    state.f = state.block = f;\n    return f(stream, state);\n  }\n\n  function lineIsEmpty(line) {\n    return !line || !/\\S/.test(line.string)\n  }\n\n  // Blocks\n\n  function blankLine(state) {\n    // Reset linkTitle state\n    state.linkTitle = false;\n    state.linkHref = false;\n    state.linkText = false;\n    // Reset EM state\n    state.em = false;\n    // Reset STRONG state\n    state.strong = false;\n    // Reset strikethrough state\n    state.strikethrough = false;\n    // Reset state.quote\n    state.quote = 0;\n    // Reset state.indentedCode\n    state.indentedCode = false;\n    if (state.f == htmlBlock) {\n      state.f = inlineNormal;\n      state.block = blockNormal;\n    }\n    // Reset state.trailingSpace\n    state.trailingSpace = 0;\n    state.trailingSpaceNewLine = false;\n    // Mark this line as blank\n    state.prevLine = state.thisLine\n    state.thisLine = {stream: null}\n    return null;\n  }\n\n  function blockNormal(stream, state) {\n    var firstTokenOnLine = stream.column() === state.indentation;\n    var prevLineLineIsEmpty = lineIsEmpty(state.prevLine.stream);\n    var prevLineIsIndentedCode = state.indentedCode;\n    var prevLineIsHr = state.prevLine.hr;\n    var prevLineIsList = state.list !== false;\n    var maxNonCodeIndentation = (state.listStack[state.listStack.length - 1] || 0) + 3;\n\n    state.indentedCode = false;\n\n    var lineIndentation = state.indentation;\n    // compute once per line (on first token)\n    if (state.indentationDiff === null) {\n      state.indentationDiff = state.indentation;\n      if (prevLineIsList) {\n        // Reset inline styles which shouldn't propagate aross list items\n        state.em = false;\n        state.strong = false;\n        state.code = false;\n        state.strikethrough = false;\n\n        state.list = null;\n        // While this list item's marker's indentation is less than the deepest\n        //  list item's content's indentation,pop the deepest list item\n        //  indentation off the stack, and update block indentation state\n        while (lineIndentation < state.listStack[state.listStack.length - 1]) {\n          state.listStack.pop();\n          if (state.listStack.length) {\n            state.indentation = state.listStack[state.listStack.length - 1];\n          // less than the first list's indent -> the line is no longer a list\n          } else {\n            state.list = false;\n          }\n        }\n        if (state.list !== false) {\n          state.indentationDiff = lineIndentation - state.listStack[state.listStack.length - 1]\n        }\n      }\n    }\n\n    // not comprehensive (currently only for setext detection purposes)\n    var allowsInlineContinuation = (\n        !prevLineLineIsEmpty && !prevLineIsHr && !state.prevLine.header &&\n        (!prevLineIsList || !prevLineIsIndentedCode) &&\n        !state.prevLine.fencedCodeEnd\n    );\n\n    var isHr = (state.list === false || prevLineIsHr || prevLineLineIsEmpty) &&\n      state.indentation <= maxNonCodeIndentation && stream.match(hrRE);\n\n    var match = null;\n    if (state.indentationDiff >= 4 && (prevLineIsIndentedCode || state.prevLine.fencedCodeEnd ||\n         state.prevLine.header || prevLineLineIsEmpty)) {\n      stream.skipToEnd();\n      state.indentedCode = true;\n      return tokenTypes.code;\n    } else if (stream.eatSpace()) {\n      return null;\n    } else if (firstTokenOnLine && state.indentation <= maxNonCodeIndentation && (match = stream.match(atxHeaderRE)) && match[1].length <= 6) {\n      state.quote = 0;\n      state.header = match[1].length;\n      state.thisLine.header = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"header\";\n      state.f = state.inline;\n      return getType(state);\n    } else if (state.indentation <= maxNonCodeIndentation && stream.eat('>')) {\n      state.quote = firstTokenOnLine ? 1 : state.quote + 1;\n      if (modeCfg.highlightFormatting) state.formatting = \"quote\";\n      stream.eatSpace();\n      return getType(state);\n    } else if (!isHr && !state.setext && firstTokenOnLine && state.indentation <= maxNonCodeIndentation && (match = stream.match(listRE))) {\n      var listType = match[1] ? \"ol\" : \"ul\";\n\n      state.indentation = lineIndentation + stream.current().length;\n      state.list = true;\n      state.quote = 0;\n\n      // Add this list item's content's indentation to the stack\n      state.listStack.push(state.indentation);\n\n      if (modeCfg.taskLists && stream.match(taskListRE, false)) {\n        state.taskList = true;\n      }\n      state.f = state.inline;\n      if (modeCfg.highlightFormatting) state.formatting = [\"list\", \"list-\" + listType];\n      return getType(state);\n    } else if (firstTokenOnLine && state.indentation <= maxNonCodeIndentation && (match = stream.match(fencedCodeRE, true))) {\n      state.quote = 0;\n      state.fencedEndRE = new RegExp(match[1] + \"+ *$\");\n      // try switching mode\n      state.localMode = modeCfg.fencedCodeBlockHighlighting && getMode(match[2]);\n      if (state.localMode) state.localState = CodeMirror.startState(state.localMode);\n      state.f = state.block = local;\n      if (modeCfg.highlightFormatting) state.formatting = \"code-block\";\n      state.code = -1\n      return getType(state);\n    // SETEXT has lowest block-scope precedence after HR, so check it after\n    //  the others (code, blockquote, list...)\n    } else if (\n      // if setext set, indicates line after ---/===\n      state.setext || (\n        // line before ---/===\n        (!allowsInlineContinuation || !prevLineIsList) && !state.quote && state.list === false &&\n        !state.code && !isHr && !linkDefRE.test(stream.string) &&\n        (match = stream.lookAhead(1)) && (match = match.match(setextHeaderRE))\n      )\n    ) {\n      if ( !state.setext ) {\n        state.header = match[0].charAt(0) == '=' ? 1 : 2;\n        state.setext = state.header;\n      } else {\n        state.header = state.setext;\n        // has no effect on type so we can reset it now\n        state.setext = 0;\n        stream.skipToEnd();\n        if (modeCfg.highlightFormatting) state.formatting = \"header\";\n      }\n      state.thisLine.header = true;\n      state.f = state.inline;\n      return getType(state);\n    } else if (isHr) {\n      stream.skipToEnd();\n      state.hr = true;\n      state.thisLine.hr = true;\n      return tokenTypes.hr;\n    } else if (stream.peek() === '[') {\n      return switchInline(stream, state, footnoteLink);\n    }\n\n    return switchInline(stream, state, state.inline);\n  }\n\n  function htmlBlock(stream, state) {\n    var style = htmlMode.token(stream, state.htmlState);\n    if (!htmlModeMissing) {\n      var inner = CodeMirror.innerMode(htmlMode, state.htmlState)\n      if ((inner.mode.name == \"xml\" && inner.state.tagStart === null &&\n           (!inner.state.context && inner.state.tokenize.isInText)) ||\n          (state.md_inside && stream.current().indexOf(\">\") > -1)) {\n        state.f = inlineNormal;\n        state.block = blockNormal;\n        state.htmlState = null;\n      }\n    }\n    return style;\n  }\n\n  function local(stream, state) {\n    var currListInd = state.listStack[state.listStack.length - 1] || 0;\n    var hasExitedList = state.indentation < currListInd;\n    var maxFencedEndInd = currListInd + 3;\n    if (state.fencedEndRE && state.indentation <= maxFencedEndInd && (hasExitedList || stream.match(state.fencedEndRE))) {\n      if (modeCfg.highlightFormatting) state.formatting = \"code-block\";\n      var returnType;\n      if (!hasExitedList) returnType = getType(state)\n      state.localMode = state.localState = null;\n      state.block = blockNormal;\n      state.f = inlineNormal;\n      state.fencedEndRE = null;\n      state.code = 0\n      state.thisLine.fencedCodeEnd = true;\n      if (hasExitedList) return switchBlock(stream, state, state.block);\n      return returnType;\n    } else if (state.localMode) {\n      return state.localMode.token(stream, state.localState);\n    } else {\n      stream.skipToEnd();\n      return tokenTypes.code;\n    }\n  }\n\n  // Inline\n  function getType(state) {\n    var styles = [];\n\n    if (state.formatting) {\n      styles.push(tokenTypes.formatting);\n\n      if (typeof state.formatting === \"string\") state.formatting = [state.formatting];\n\n      for (var i = 0; i < state.formatting.length; i++) {\n        styles.push(tokenTypes.formatting + \"-\" + state.formatting[i]);\n\n        if (state.formatting[i] === \"header\") {\n          styles.push(tokenTypes.formatting + \"-\" + state.formatting[i] + \"-\" + state.header);\n        }\n\n        // Add `formatting-quote` and `formatting-quote-#` for blockquotes\n        // Add `error` instead if the maximum blockquote nesting depth is passed\n        if (state.formatting[i] === \"quote\") {\n          if (!modeCfg.maxBlockquoteDepth || modeCfg.maxBlockquoteDepth >= state.quote) {\n            styles.push(tokenTypes.formatting + \"-\" + state.formatting[i] + \"-\" + state.quote);\n          } else {\n            styles.push(\"error\");\n          }\n        }\n      }\n    }\n\n    if (state.taskOpen) {\n      styles.push(\"meta\");\n      return styles.length ? styles.join(' ') : null;\n    }\n    if (state.taskClosed) {\n      styles.push(\"property\");\n      return styles.length ? styles.join(' ') : null;\n    }\n\n    if (state.linkHref) {\n      styles.push(tokenTypes.linkHref, \"url\");\n    } else { // Only apply inline styles to non-url text\n      if (state.strong) { styles.push(tokenTypes.strong); }\n      if (state.em) { styles.push(tokenTypes.em); }\n      if (state.strikethrough) { styles.push(tokenTypes.strikethrough); }\n      if (state.emoji) { styles.push(tokenTypes.emoji); }\n      if (state.linkText) { styles.push(tokenTypes.linkText); }\n      if (state.code) { styles.push(tokenTypes.code); }\n      if (state.image) { styles.push(tokenTypes.image); }\n      if (state.imageAltText) { styles.push(tokenTypes.imageAltText, \"link\"); }\n      if (state.imageMarker) { styles.push(tokenTypes.imageMarker); }\n    }\n\n    if (state.header) { styles.push(tokenTypes.header, tokenTypes.header + \"-\" + state.header); }\n\n    if (state.quote) {\n      styles.push(tokenTypes.quote);\n\n      // Add `quote-#` where the maximum for `#` is modeCfg.maxBlockquoteDepth\n      if (!modeCfg.maxBlockquoteDepth || modeCfg.maxBlockquoteDepth >= state.quote) {\n        styles.push(tokenTypes.quote + \"-\" + state.quote);\n      } else {\n        styles.push(tokenTypes.quote + \"-\" + modeCfg.maxBlockquoteDepth);\n      }\n    }\n\n    if (state.list !== false) {\n      var listMod = (state.listStack.length - 1) % 3;\n      if (!listMod) {\n        styles.push(tokenTypes.list1);\n      } else if (listMod === 1) {\n        styles.push(tokenTypes.list2);\n      } else {\n        styles.push(tokenTypes.list3);\n      }\n    }\n\n    if (state.trailingSpaceNewLine) {\n      styles.push(\"trailing-space-new-line\");\n    } else if (state.trailingSpace) {\n      styles.push(\"trailing-space-\" + (state.trailingSpace % 2 ? \"a\" : \"b\"));\n    }\n\n    return styles.length ? styles.join(' ') : null;\n  }\n\n  function handleText(stream, state) {\n    if (stream.match(textRE, true)) {\n      return getType(state);\n    }\n    return undefined;\n  }\n\n  function inlineNormal(stream, state) {\n    var style = state.text(stream, state);\n    if (typeof style !== 'undefined')\n      return style;\n\n    if (state.list) { // List marker (*, +, -, 1., etc)\n      state.list = null;\n      return getType(state);\n    }\n\n    if (state.taskList) {\n      var taskOpen = stream.match(taskListRE, true)[1] === \" \";\n      if (taskOpen) state.taskOpen = true;\n      else state.taskClosed = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"task\";\n      state.taskList = false;\n      return getType(state);\n    }\n\n    state.taskOpen = false;\n    state.taskClosed = false;\n\n    if (state.header && stream.match(/^#+$/, true)) {\n      if (modeCfg.highlightFormatting) state.formatting = \"header\";\n      return getType(state);\n    }\n\n    var ch = stream.next();\n\n    // Matches link titles present on next line\n    if (state.linkTitle) {\n      state.linkTitle = false;\n      var matchCh = ch;\n      if (ch === '(') {\n        matchCh = ')';\n      }\n      matchCh = (matchCh+'').replace(/([.?*+^\\[\\]\\\\(){}|-])/g, \"\\\\$1\");\n      var regex = '^\\\\s*(?:[^' + matchCh + '\\\\\\\\]+|\\\\\\\\\\\\\\\\|\\\\\\\\.)' + matchCh;\n      if (stream.match(new RegExp(regex), true)) {\n        return tokenTypes.linkHref;\n      }\n    }\n\n    // If this block is changed, it may need to be updated in GFM mode\n    if (ch === '`') {\n      var previousFormatting = state.formatting;\n      if (modeCfg.highlightFormatting) state.formatting = \"code\";\n      stream.eatWhile('`');\n      var count = stream.current().length\n      if (state.code == 0 && (!state.quote || count == 1)) {\n        state.code = count\n        return getType(state)\n      } else if (count == state.code) { // Must be exact\n        var t = getType(state)\n        state.code = 0\n        return t\n      } else {\n        state.formatting = previousFormatting\n        return getType(state)\n      }\n    } else if (state.code) {\n      return getType(state);\n    }\n\n    if (ch === '\\\\') {\n      stream.next();\n      if (modeCfg.highlightFormatting) {\n        var type = getType(state);\n        var formattingEscape = tokenTypes.formatting + \"-escape\";\n        return type ? type + \" \" + formattingEscape : formattingEscape;\n      }\n    }\n\n    if (ch === '!' && stream.match(/\\[[^\\]]*\\] ?(?:\\(|\\[)/, false)) {\n      state.imageMarker = true;\n      state.image = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"image\";\n      return getType(state);\n    }\n\n    if (ch === '[' && state.imageMarker && stream.match(/[^\\]]*\\](\\(.*?\\)| ?\\[.*?\\])/, false)) {\n      state.imageMarker = false;\n      state.imageAltText = true\n      if (modeCfg.highlightFormatting) state.formatting = \"image\";\n      return getType(state);\n    }\n\n    if (ch === ']' && state.imageAltText) {\n      if (modeCfg.highlightFormatting) state.formatting = \"image\";\n      var type = getType(state);\n      state.imageAltText = false;\n      state.image = false;\n      state.inline = state.f = linkHref;\n      return type;\n    }\n\n    if (ch === '[' && !state.image) {\n      state.linkText = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      return getType(state);\n    }\n\n    if (ch === ']' && state.linkText) {\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var type = getType(state);\n      state.linkText = false;\n      state.inline = state.f = stream.match(/\\(.*?\\)| ?\\[.*?\\]/, false) ? linkHref : inlineNormal\n      return type;\n    }\n\n    if (ch === '<' && stream.match(/^(https?|ftps?):\\/\\/(?:[^\\\\>]|\\\\.)+>/, false)) {\n      state.f = state.inline = linkInline;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var type = getType(state);\n      if (type){\n        type += \" \";\n      } else {\n        type = \"\";\n      }\n      return type + tokenTypes.linkInline;\n    }\n\n    if (ch === '<' && stream.match(/^[^> \\\\]+@(?:[^\\\\>]|\\\\.)+>/, false)) {\n      state.f = state.inline = linkInline;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var type = getType(state);\n      if (type){\n        type += \" \";\n      } else {\n        type = \"\";\n      }\n      return type + tokenTypes.linkEmail;\n    }\n\n    if (modeCfg.xml && ch === '<' && stream.match(/^(!--|[a-z][a-z0-9-]*(?:\\s+[a-z_:.\\-]+(?:\\s*=\\s*[^>]+)?)*\\s*>)/i, false)) {\n      var end = stream.string.indexOf(\">\", stream.pos);\n      if (end != -1) {\n        var atts = stream.string.substring(stream.start, end);\n        if (/markdown\\s*=\\s*('|\"){0,1}1('|\"){0,1}/.test(atts)) state.md_inside = true;\n      }\n      stream.backUp(1);\n      state.htmlState = CodeMirror.startState(htmlMode);\n      return switchBlock(stream, state, htmlBlock);\n    }\n\n    if (modeCfg.xml && ch === '<' && stream.match(/^\\/\\w*?>/)) {\n      state.md_inside = false;\n      return \"tag\";\n    } else if (ch === \"*\" || ch === \"_\") {\n      var len = 1, before = stream.pos == 1 ? \" \" : stream.string.charAt(stream.pos - 2)\n      while (len < 3 && stream.eat(ch)) len++\n      var after = stream.peek() || \" \"\n      // See http://spec.commonmark.org/0.27/#emphasis-and-strong-emphasis\n      var leftFlanking = !/\\s/.test(after) && (!punctuation.test(after) || /\\s/.test(before) || punctuation.test(before))\n      var rightFlanking = !/\\s/.test(before) && (!punctuation.test(before) || /\\s/.test(after) || punctuation.test(after))\n      var setEm = null, setStrong = null\n      if (len % 2) { // Em\n        if (!state.em && leftFlanking && (ch === \"*\" || !rightFlanking || punctuation.test(before)))\n          setEm = true\n        else if (state.em == ch && rightFlanking && (ch === \"*\" || !leftFlanking || punctuation.test(after)))\n          setEm = false\n      }\n      if (len > 1) { // Strong\n        if (!state.strong && leftFlanking && (ch === \"*\" || !rightFlanking || punctuation.test(before)))\n          setStrong = true\n        else if (state.strong == ch && rightFlanking && (ch === \"*\" || !leftFlanking || punctuation.test(after)))\n          setStrong = false\n      }\n      if (setStrong != null || setEm != null) {\n        if (modeCfg.highlightFormatting) state.formatting = setEm == null ? \"strong\" : setStrong == null ? \"em\" : \"strong em\"\n        if (setEm === true) state.em = ch\n        if (setStrong === true) state.strong = ch\n        var t = getType(state)\n        if (setEm === false) state.em = false\n        if (setStrong === false) state.strong = false\n        return t\n      }\n    } else if (ch === ' ') {\n      if (stream.eat('*') || stream.eat('_')) { // Probably surrounded by spaces\n        if (stream.peek() === ' ') { // Surrounded by spaces, ignore\n          return getType(state);\n        } else { // Not surrounded by spaces, back up pointer\n          stream.backUp(1);\n        }\n      }\n    }\n\n    if (modeCfg.strikethrough) {\n      if (ch === '~' && stream.eatWhile(ch)) {\n        if (state.strikethrough) {// Remove strikethrough\n          if (modeCfg.highlightFormatting) state.formatting = \"strikethrough\";\n          var t = getType(state);\n          state.strikethrough = false;\n          return t;\n        } else if (stream.match(/^[^\\s]/, false)) {// Add strikethrough\n          state.strikethrough = true;\n          if (modeCfg.highlightFormatting) state.formatting = \"strikethrough\";\n          return getType(state);\n        }\n      } else if (ch === ' ') {\n        if (stream.match(/^~~/, true)) { // Probably surrounded by space\n          if (stream.peek() === ' ') { // Surrounded by spaces, ignore\n            return getType(state);\n          } else { // Not surrounded by spaces, back up pointer\n            stream.backUp(2);\n          }\n        }\n      }\n    }\n\n    if (modeCfg.emoji && ch === \":\" && stream.match(/^[a-z_\\d+-]+:/)) {\n      state.emoji = true;\n      if (modeCfg.highlightFormatting) state.formatting = \"emoji\";\n      var retType = getType(state);\n      state.emoji = false;\n      return retType;\n    }\n\n    if (ch === ' ') {\n      if (stream.match(/^ +$/, false)) {\n        state.trailingSpace++;\n      } else if (state.trailingSpace) {\n        state.trailingSpaceNewLine = true;\n      }\n    }\n\n    return getType(state);\n  }\n\n  function linkInline(stream, state) {\n    var ch = stream.next();\n\n    if (ch === \">\") {\n      state.f = state.inline = inlineNormal;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var type = getType(state);\n      if (type){\n        type += \" \";\n      } else {\n        type = \"\";\n      }\n      return type + tokenTypes.linkInline;\n    }\n\n    stream.match(/^[^>]+/, true);\n\n    return tokenTypes.linkInline;\n  }\n\n  function linkHref(stream, state) {\n    // Check if space, and return NULL if so (to avoid marking the space)\n    if(stream.eatSpace()){\n      return null;\n    }\n    var ch = stream.next();\n    if (ch === '(' || ch === '[') {\n      state.f = state.inline = getLinkHrefInside(ch === \"(\" ? \")\" : \"]\");\n      if (modeCfg.highlightFormatting) state.formatting = \"link-string\";\n      state.linkHref = true;\n      return getType(state);\n    }\n    return 'error';\n  }\n\n  var linkRE = {\n    \")\": /^(?:[^\\\\\\(\\)]|\\\\.|\\((?:[^\\\\\\(\\)]|\\\\.)*\\))*?(?=\\))/,\n    \"]\": /^(?:[^\\\\\\[\\]]|\\\\.|\\[(?:[^\\\\\\[\\]]|\\\\.)*\\])*?(?=\\])/\n  }\n\n  function getLinkHrefInside(endChar) {\n    return function(stream, state) {\n      var ch = stream.next();\n\n      if (ch === endChar) {\n        state.f = state.inline = inlineNormal;\n        if (modeCfg.highlightFormatting) state.formatting = \"link-string\";\n        var returnState = getType(state);\n        state.linkHref = false;\n        return returnState;\n      }\n\n      stream.match(linkRE[endChar])\n      state.linkHref = true;\n      return getType(state);\n    };\n  }\n\n  function footnoteLink(stream, state) {\n    if (stream.match(/^([^\\]\\\\]|\\\\.)*\\]:/, false)) {\n      state.f = footnoteLinkInside;\n      stream.next(); // Consume [\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      state.linkText = true;\n      return getType(state);\n    }\n    return switchInline(stream, state, inlineNormal);\n  }\n\n  function footnoteLinkInside(stream, state) {\n    if (stream.match(/^\\]:/, true)) {\n      state.f = state.inline = footnoteUrl;\n      if (modeCfg.highlightFormatting) state.formatting = \"link\";\n      var returnType = getType(state);\n      state.linkText = false;\n      return returnType;\n    }\n\n    stream.match(/^([^\\]\\\\]|\\\\.)+/, true);\n\n    return tokenTypes.linkText;\n  }\n\n  function footnoteUrl(stream, state) {\n    // Check if space, and return NULL if so (to avoid marking the space)\n    if(stream.eatSpace()){\n      return null;\n    }\n    // Match URL\n    stream.match(/^[^\\s]+/, true);\n    // Check for link title\n    if (stream.peek() === undefined) { // End of line, set flag to check next line\n      state.linkTitle = true;\n    } else { // More content on line, check if link title\n      stream.match(/^(?:\\s+(?:\"(?:[^\"\\\\]|\\\\\\\\|\\\\.)+\"|'(?:[^'\\\\]|\\\\\\\\|\\\\.)+'|\\((?:[^)\\\\]|\\\\\\\\|\\\\.)+\\)))?/, true);\n    }\n    state.f = state.inline = inlineNormal;\n    return tokenTypes.linkHref + \" url\";\n  }\n\n  var mode = {\n    startState: function() {\n      return {\n        f: blockNormal,\n\n        prevLine: {stream: null},\n        thisLine: {stream: null},\n\n        block: blockNormal,\n        htmlState: null,\n        indentation: 0,\n\n        inline: inlineNormal,\n        text: handleText,\n\n        formatting: false,\n        linkText: false,\n        linkHref: false,\n        linkTitle: false,\n        code: 0,\n        em: false,\n        strong: false,\n        header: 0,\n        setext: 0,\n        hr: false,\n        taskList: false,\n        list: false,\n        listStack: [],\n        quote: 0,\n        trailingSpace: 0,\n        trailingSpaceNewLine: false,\n        strikethrough: false,\n        emoji: false,\n        fencedEndRE: null\n      };\n    },\n\n    copyState: function(s) {\n      return {\n        f: s.f,\n\n        prevLine: s.prevLine,\n        thisLine: s.thisLine,\n\n        block: s.block,\n        htmlState: s.htmlState && CodeMirror.copyState(htmlMode, s.htmlState),\n        indentation: s.indentation,\n\n        localMode: s.localMode,\n        localState: s.localMode ? CodeMirror.copyState(s.localMode, s.localState) : null,\n\n        inline: s.inline,\n        text: s.text,\n        formatting: false,\n        linkText: s.linkText,\n        linkTitle: s.linkTitle,\n        linkHref: s.linkHref,\n        code: s.code,\n        em: s.em,\n        strong: s.strong,\n        strikethrough: s.strikethrough,\n        emoji: s.emoji,\n        header: s.header,\n        setext: s.setext,\n        hr: s.hr,\n        taskList: s.taskList,\n        list: s.list,\n        listStack: s.listStack.slice(0),\n        quote: s.quote,\n        indentedCode: s.indentedCode,\n        trailingSpace: s.trailingSpace,\n        trailingSpaceNewLine: s.trailingSpaceNewLine,\n        md_inside: s.md_inside,\n        fencedEndRE: s.fencedEndRE\n      };\n    },\n\n    token: function(stream, state) {\n\n      // Reset state.formatting\n      state.formatting = false;\n\n      if (stream != state.thisLine.stream) {\n        state.header = 0;\n        state.hr = false;\n\n        if (stream.match(/^\\s*$/, true)) {\n          blankLine(state);\n          return null;\n        }\n\n        state.prevLine = state.thisLine\n        state.thisLine = {stream: stream}\n\n        // Reset state.taskList\n        state.taskList = false;\n\n        // Reset state.trailingSpace\n        state.trailingSpace = 0;\n        state.trailingSpaceNewLine = false;\n\n        if (!state.localState) {\n          state.f = state.block;\n          if (state.f != htmlBlock) {\n            var indentation = stream.match(/^\\s*/, true)[0].replace(/\\t/g, expandedTab).length;\n            state.indentation = indentation;\n            state.indentationDiff = null;\n            if (indentation > 0) return null;\n          }\n        }\n      }\n      return state.f(stream, state);\n    },\n\n    innerMode: function(state) {\n      if (state.block == htmlBlock) return {state: state.htmlState, mode: htmlMode};\n      if (state.localState) return {state: state.localState, mode: state.localMode};\n      return {state: state, mode: mode};\n    },\n\n    indent: function(state, textAfter, line) {\n      if (state.block == htmlBlock && htmlMode.indent) return htmlMode.indent(state.htmlState, textAfter, line)\n      if (state.localState && state.localMode.indent) return state.localMode.indent(state.localState, textAfter, line)\n      return CodeMirror.Pass\n    },\n\n    blankLine: blankLine,\n\n    getType: getType,\n\n    closeBrackets: \"()[]{}''\\\"\\\"``\",\n    fold: \"markdown\"\n  };\n  return mode;\n}, \"xml\");\n\nCodeMirror.defineMIME(\"text/markdown\", \"markdown\");\n\nCodeMirror.defineMIME(\"text/x-markdown\", \"markdown\");\n\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n// Because sometimes you need to mark the selected *text*.\n//\n// Adds an option 'styleSelectedText' which, when enabled, gives\n// selected text the CSS class given as option value, or\n// \"CodeMirror-selectedtext\" when the value is not a string.\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  CodeMirror.defineOption(\"styleSelectedText\", false, function(cm, val, old) {\n    var prev = old && old != CodeMirror.Init;\n    if (val && !prev) {\n      cm.state.markedSelection = [];\n      cm.state.markedSelectionStyle = typeof val == \"string\" ? val : \"CodeMirror-selectedtext\";\n      reset(cm);\n      cm.on(\"cursorActivity\", onCursorActivity);\n      cm.on(\"change\", onChange);\n    } else if (!val && prev) {\n      cm.off(\"cursorActivity\", onCursorActivity);\n      cm.off(\"change\", onChange);\n      clear(cm);\n      cm.state.markedSelection = cm.state.markedSelectionStyle = null;\n    }\n  });\n\n  function onCursorActivity(cm) {\n    if (cm.state.markedSelection)\n      cm.operation(function() { update(cm); });\n  }\n\n  function onChange(cm) {\n    if (cm.state.markedSelection && cm.state.markedSelection.length)\n      cm.operation(function() { clear(cm); });\n  }\n\n  var CHUNK_SIZE = 8;\n  var Pos = CodeMirror.Pos;\n  var cmp = CodeMirror.cmpPos;\n\n  function coverRange(cm, from, to, addAt) {\n    if (cmp(from, to) == 0) return;\n    var array = cm.state.markedSelection;\n    var cls = cm.state.markedSelectionStyle;\n    for (var line = from.line;;) {\n      var start = line == from.line ? from : Pos(line, 0);\n      var endLine = line + CHUNK_SIZE, atEnd = endLine >= to.line;\n      var end = atEnd ? to : Pos(endLine, 0);\n      var mark = cm.markText(start, end, {className: cls});\n      if (addAt == null) array.push(mark);\n      else array.splice(addAt++, 0, mark);\n      if (atEnd) break;\n      line = endLine;\n    }\n  }\n\n  function clear(cm) {\n    var array = cm.state.markedSelection;\n    for (var i = 0; i < array.length; ++i) array[i].clear();\n    array.length = 0;\n  }\n\n  function reset(cm) {\n    clear(cm);\n    var ranges = cm.listSelections();\n    for (var i = 0; i < ranges.length; i++)\n      coverRange(cm, ranges[i].from(), ranges[i].to());\n  }\n\n  function update(cm) {\n    if (!cm.somethingSelected()) return clear(cm);\n    if (cm.listSelections().length > 1) return reset(cm);\n\n    var from = cm.getCursor(\"start\"), to = cm.getCursor(\"end\");\n\n    var array = cm.state.markedSelection;\n    if (!array.length) return coverRange(cm, from, to);\n\n    var coverStart = array[0].find(), coverEnd = array[array.length - 1].find();\n    if (!coverStart || !coverEnd || to.line - from.line <= CHUNK_SIZE ||\n        cmp(from, coverEnd.to) >= 0 || cmp(to, coverStart.from) <= 0)\n      return reset(cm);\n\n    while (cmp(from, coverStart.from) > 0) {\n      array.shift().clear();\n      coverStart = array[0].find();\n    }\n    if (cmp(from, coverStart.from) < 0) {\n      if (coverStart.to.line - from.line < CHUNK_SIZE) {\n        array.shift().clear();\n        coverRange(cm, from, coverStart.to, 0);\n      } else {\n        coverRange(cm, from, coverStart.from, 0);\n      }\n    }\n\n    while (cmp(to, coverEnd.to) < 0) {\n      array.pop().clear();\n      coverEnd = array[array.length - 1].find();\n    }\n    if (cmp(to, coverEnd.to) > 0) {\n      if (to.line - coverEnd.from.line < CHUNK_SIZE) {\n        array.pop().clear();\n        coverRange(cm, coverEnd.from, to);\n      } else {\n        coverRange(cm, coverEnd.to, to);\n      }\n    }\n  }\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\n// Utility function that allows modes to be combined. The mode given\n// as the base argument takes care of most of the normal mode\n// functionality, but a second (typically simple) mode is used, which\n// can override the style of text. Both modes get to parse all of the\n// text, but when both assign a non-null style to a piece of code, the\n// overlay wins, unless the combine argument was true and not overridden,\n// or state.overlay.combineTokens was true, in which case the styles are\n// combined.\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n\"use strict\";\n\nCodeMirror.overlayMode = function(base, overlay, combine) {\n  return {\n    startState: function() {\n      return {\n        base: CodeMirror.startState(base),\n        overlay: CodeMirror.startState(overlay),\n        basePos: 0, baseCur: null,\n        overlayPos: 0, overlayCur: null,\n        streamSeen: null\n      };\n    },\n    copyState: function(state) {\n      return {\n        base: CodeMirror.copyState(base, state.base),\n        overlay: CodeMirror.copyState(overlay, state.overlay),\n        basePos: state.basePos, baseCur: null,\n        overlayPos: state.overlayPos, overlayCur: null\n      };\n    },\n\n    token: function(stream, state) {\n      if (stream != state.streamSeen ||\n          Math.min(state.basePos, state.overlayPos) < stream.start) {\n        state.streamSeen = stream;\n        state.basePos = state.overlayPos = stream.start;\n      }\n\n      if (stream.start == state.basePos) {\n        state.baseCur = base.token(stream, state.base);\n        state.basePos = stream.pos;\n      }\n      if (stream.start == state.overlayPos) {\n        stream.pos = stream.start;\n        state.overlayCur = overlay.token(stream, state.overlay);\n        state.overlayPos = stream.pos;\n      }\n      stream.pos = Math.min(state.basePos, state.overlayPos);\n\n      // state.overlay.combineTokens always takes precedence over combine,\n      // unless set to null\n      if (state.overlayCur == null) return state.baseCur;\n      else if (state.baseCur != null &&\n               state.overlay.combineTokens ||\n               combine && state.overlay.combineTokens == null)\n        return state.baseCur + \" \" + state.overlayCur;\n      else return state.overlayCur;\n    },\n\n    indent: base.indent && function(state, textAfter) {\n      return base.indent(state.base, textAfter);\n    },\n    electricChars: base.electricChars,\n\n    innerMode: function(state) { return {state: state.base, mode: base}; },\n\n    blankLine: function(state) {\n      var baseToken, overlayToken;\n      if (base.blankLine) baseToken = base.blankLine(state.base);\n      if (overlay.blankLine) overlayToken = overlay.blankLine(state.overlay);\n\n      return overlayToken == null ?\n        baseToken :\n        (combine && baseToken != null ? baseToken + \" \" + overlayToken : overlayToken);\n    }\n  };\n};\n\n});\n","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: http://codemirror.net/LICENSE\n\nvar CodeMirror = require(\"codemirror\");\n\nCodeMirror.commands.tabAndIndentMarkdownList = function (cm) {\n\tvar ranges = cm.listSelections();\n\tvar pos = ranges[0].head;\n\tvar eolState = cm.getStateAfter(pos.line);\n\tvar inList = eolState.list !== false;\n\n\tif (inList) {\n\t\tcm.execCommand(\"indentMore\");\n\t\treturn;\n\t}\n\n\tif (cm.options.indentWithTabs) {\n\t\tcm.execCommand(\"insertTab\");\n\t}\n\telse {\n\t\tvar spaces = Array(cm.options.tabSize + 1).join(\" \");\n\t\tcm.replaceSelection(spaces);\n\t}\n};\n\nCodeMirror.commands.shiftTabAndUnindentMarkdownList = function (cm) {\n\tvar ranges = cm.listSelections();\n\tvar pos = ranges[0].head;\n\tvar eolState = cm.getStateAfter(pos.line);\n\tvar inList = eolState.list !== false;\n\n\tif (inList) {\n\t\tcm.execCommand(\"indentLess\");\n\t\treturn;\n\t}\n\n\tif (cm.options.indentWithTabs) {\n\t\tcm.execCommand(\"insertTab\");\n\t}\n\telse {\n\t\tvar spaces = Array(cm.options.tabSize + 1).join(\" \");\n\t\tcm.replaceSelection(spaces);\n\t}\n};\n"],"sourceRoot":""}